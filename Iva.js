this["Iva"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * iva构造函数
	 * @author zhujiefeng
	 * @email	flyingpig@venvyvideo.cn
	 */
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4),__webpack_require__(5), __webpack_require__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = function (docCookies, ajax, ivaInit, environment, $, validator) {
		function Iva (parent, options) {
			var init = function () {
				ajax('/video/new', 'POST', {
					url: options.video
				}, function (data) {
					if (data.status === 0) {
	    				ivaInit(parent, data.msg._id, data.msg.source[0].link, options);
	    			}
				})
			}
			window.getCookieCb = function (data) {
				//已登录
				if (!!data.sess) {
					docCookies.setItem('isLogined', 'true');
					// isLogined = true;
					docCookies.setItem('crossDomainSess', data.sess, Infinity);
				}
				if (!!data.sid) {
					docCookies.setItem('crossDomainSid', data.sid, Infinity);
				}
				init();
			}
			$('body').append('<script src="'+environment.host+'/getCookie.js?callback=getCookieCb"></script>');
		}
		return Iva;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
		return {
			getItem: function (sKey) {
				if (!sKey) { return null; }
				return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
			},
			setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {
				if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) { return false; }
				var sExpires = "";
				if (vEnd) {
					switch (vEnd.constructor) {
						case Number:
							sExpires = vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; max-age=" + vEnd;
						break;
						case String:
							sExpires = "; expires=" + vEnd;
						break;
						case Date:
							sExpires = "; expires=" + vEnd.toUTCString();
						break;
					}
				}
				document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + sExpires + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "") + (bSecure ? "; secure" : "");
				return true;
			},
			removeItem: function (sKey, sPath, sDomain) {
				if (!this.hasItem(sKey)) { return false; }
				document.cookie = encodeURIComponent(sKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "");
				return true;
			},
			hasItem: function (sKey) {
				if (!sKey) { return false; }
				return (new RegExp("(?:^|;\\s*)" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(document.cookie);
			},
			keys: function () {
				var aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
				for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }
					return aKeys;
				}
			};
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * ajax请求函数的封装
	 * @author zhujiefeng
	 * @email	flyingpig@venvyvideo.cn
	 * @param  {String}	url	请求地址的url
	 * @param  {String}	method	请求方法(GET, POST, PUT, DELETE)
	 * @param  {Function}	success	请求成功后的回调函数
	 * @return {[Void}
	 */
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)
		, __webpack_require__(4)
		, __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, environment, docCookies) {
		return function (url, method, data, success) {
			var headers = {
				sess: docCookies.getItem('crossDomainSess'),
				sid: docCookies.getItem('crossDomainSid')
			};
			return $.ajax({
				method: method,
				crossDomain: true,
				url: environment.host+url,
				data: data,
				success: function (data) {
					success(data);
				},
				headers: headers
			})
		}
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__
		, __webpack_require__(7)
	    , __webpack_require__(5)
	    , __webpack_require__(16)
	    , __webpack_require__(17)
	    , __webpack_require__(1)
	    , __webpack_require__(4)
	    , __webpack_require__(2)
	    , __webpack_require__(8)
	    , __webpack_require__(9)
	    , __webpack_require__(15)
	    , __webpack_require__(11)
	    , __webpack_require__(12)
	    , __webpack_require__(13)
	    , __webpack_require__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, tag, $, player, zrender, docCookies, environment, ajax, sideBar, handlebar, dgupdateTmpl, showDg, updateDg, logWindow, ivaAlert) {
		return function (parent, videoId, videoUrl, options) {
			var isLogined = (docCookies.getItem('isLogined')=='true');
			var dotList = [];//tag信息列表
	    	var settInvervalId;
	    	//生成一个播放器实例
			var playerInstance = new player('playerCnt', videoUrl, null, {
				play_callback: function () {
					console.log('play');
					settInvervalId = setInterval(function () {
						for (var i=0; i<dotList.length; i++) {
							var currentTime = playerInstance.get_time()*1000;
							var currentDot = dotList[i];
							var dotTime = currentDot.time;
							if (Math.abs(currentTime - dotTime) < 300) {
								ajax('/track/showTag', 'POST', {
									tag: currentDot.id
								}, function (data) {
									if (data.status == 0)
										console.log('tag showed track');
								})
								new tag(ivaWrap.get(0), zr, {
									tagId: currentDot.id,
									dgId: currentDot.dg,
									x: currentDot.x,
									y: currentDot.y,
									title: currentDot.title
								});
							}
						}
					}, 300);
				},
				pause_callback: function () {
					clearInterval(settInvervalId);
				},
				stop_callback: function () {
					clearInterval(settInvervalId);
				},
				start_seek_callback: function () {
					clearTag();
				},
				video_poster: options.cover
			});
		    //获取播放器开放给用户自定义的div层
		    var ivaInterface = $('#'+parent+' .player_for_user');
		    //生成iva
		    var ivaWrap = $('<div class="ivawrap"></div>').appendTo(ivaInterface);
		    ivaWrap.get(0).dataset.videoId = videoId;
		    ivaWrap.click(function (event) {
				clearScreen();
				//如果点击了tag
		    	var target = event.target;
		    	if ($(target).hasClass('tip')) {
		    		var dgId = target.dataset.dgid;
		    		var tagId = target.dataset.tagid;
		    		//track
		    		ajax('/track/clickTag', 'POST', {
		    			tag: tagId
		    		}, function	(data) {
		    			if (data.status == 0)
		    				console.log('tag clicked track');
		    		})
		    		if (!!dgId) {
		    			ajax('/dg2/'+dgId, 'GET', {}, function (data) {
		    				if (data.status == 0) {
		    					var showFav = false;
				    			//已经登录
								if (isLogined || docCookies.getItem('isLogined')=='true') {
									if (docCookies.getItem('userId') != data.msg.user['_id']) {
										showFav = true;
									}
								}
		    					new showDg(ivaWrap.get(0), data.msg, {
		    						onClose: function () {
		    							playerInstance.play();
		    							playerInstance.show_the_player_bar();
		    						},
		    						dgData: data.msg,
		    						showFav: showFav,
		    						dgId: dgId,
		    						sideBar: sideBarInstance
		    					});
		    				} else {
		    					alert(data.msg);
		    				}
			    		})
			    		$('.tip').remove();
			    		zr.clear();
			    		playerInstance.pause();
			    		playerInstance.hide_the_player_bar();
		    		}
		    	}
		    	//如果点击了iva底层
		    	if (target.tagName == 'CANVAS') {
			    	if (sideBarInstance.isHide()) {
		    			var width = $(this).width();
		    			var height = $(this).height();
		    			sideBarInstance.setData({
		    				time: Math.floor(playerInstance.get_time()*1000),
		    				x: event.offsetX/width,
		    				y: event.offsetY/height,
		    				v: videoId
		    			})
			    		sideBarInstance.show();
			    	} else {
			    		sideBarInstance.hide();
			    		playerInstance.play();
			    		playerInstance.show_the_player_bar();
			    	}
	    		}
	    	});
			var zr = zrender.init(ivaWrap.get(0));
			var sideBarInstance = new sideBar(ivaWrap.get(0), function (keyword, dgData) {
				var searchData = {
					keyword: keyword
				};
				$.when(
					ajax('/spider/baiduImg', 'GET', {
						keyword: keyword
					}, function (data) {
						if (data.status == 0) {
							searchData.img = data.msg.data;
						} else {
							alert(data.msg);
						}
					}),
					ajax('/spider/baikeText', 'GET', {
						keyword: keyword
					}, function (data) {
						if (data.status == 0) {
							searchData.text = data.msg;
						} else {
							alert(data.msg);
						}
					})
				).then(function () {
					new updateDg(ivaWrap.get(0), searchData, {
						onClose: function () {
							playerInstance.play();
							playerInstance.show_the_player_bar();
						},
						dgData: dgData,
						sideBar: sideBarInstance
					});
				})
			}, {
				onClose: function () {
					playerInstance.play();
					playerInstance.show_the_player_bar();
				},
				sideBar: sideBarInstance
			});
			//已经登录
			// if (isLogined) {
				sideBarInstance.getUserInfo();
				sideBarInstance.getDgList();
			// }
			//获取tag
			ajax('/tag2', 'GET', {
				v: '55026fa406b62b8f451ce24d'
			}, function (data) {
				if (status == 0) {
					dotList = data.msg.map(function (x) {
						x.dot_user.id = x['_id'];
						x.dot_user.title = x.title;
						x.dot_user.dg = x.dg?x.dg:'';
						return x.dot_user;
					}).sort(function (a, b) {
						return (a.time - b.time);
					});
				} else {
					alert(data.msg);
				}
			}); 
			//清屏
			function clearScreen () {
				playerInstance.pause();
		    	playerInstance.hide_the_player_bar();
		    	clearTag();
			}
			function clearTag () {
				ivaWrap.find('.tip').remove();
		    	zr.clear();
			}
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 定义开发环境
	 */
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = function (config) {
		var env = 'online';//"online" or "dev"
		return config[env];
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v2.1.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-04-28T16:01Z
	 */

	(function( global, factory ) {

		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}

	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//

	var arr = [];

	var slice = arr.slice;

	var concat = arr.concat;

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var support = {};



	var
		// Use the correct document accordingly with window argument (sandbox)
		document = window.document,

		version = "2.1.4",

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {
			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},

		// Support: Android<4.1
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};

	jQuery.fn = jQuery.prototype = {
		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?

				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :

				// Return all the elements in a clean array
				slice.call( this );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		// (You can seed the arguments with an array of args, but this is
		// only used internally.)
		each: function( callback, args ) {
			return jQuery.each( this, callback, args );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map(this, function( elem, i ) {
				return callback.call( elem, i, elem );
			}));
		},

		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
		},

		end: function() {
			return this.prevObject || this.constructor(null);
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice
	};

	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;

			// Skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
			target = {};
		}

		// Extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}

		for ( ; i < length; i++ ) {
			// Only deal with non-null/undefined values
			if ( (options = arguments[ i ]) != null ) {
				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray(src) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend({
		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function( msg ) {
			throw new Error( msg );
		},

		noop: function() {},

		isFunction: function( obj ) {
			return jQuery.type(obj) === "function";
		},

		isArray: Array.isArray,

		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},

		isNumeric: function( obj ) {
			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
		},

		isPlainObject: function( obj ) {
			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			if ( obj.constructor &&
					!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}

			// If the function hasn't returned already, we're confident that
			// |obj| is a plain object, created by {} or constructed with new Object
			return true;
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}
			// Support: Android<4.0, iOS<6 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call(obj) ] || "object" :
				typeof obj;
		},

		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
				indirect = eval;

			code = jQuery.trim( code );

			if ( code ) {
				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf("use strict") === 1 ) {
					script = document.createElement("script");
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {
				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval
					indirect( code );
				}
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE9-11+
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		// args is for internal usage only
		each: function( obj, callback, args ) {
			var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike( obj );

			if ( args ) {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				}

			// A special, fast, case for the most common use of each
			} else {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				}
			}

			return obj;
		},

		// Support: Android<4.1
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArraylike( Object(arr) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : indexOf.call( arr, elem, i );
		},

		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;

			for ( ; j < len; j++ ) {
				first[ i++ ] = second[ j ];
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var value,
				i = 0,
				length = elems.length,
				isArray = isArraylike( elems ),
				ret = [];

			// Go through the array, translating each of the items to their new values
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}
			}

			// Flatten any nested arrays
			return concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		now: Date.now,

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	});

	// Populate the class2type map
	jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	});

	function isArraylike( obj ) {

		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = "length" in obj && obj.length,
			type = jQuery.type( obj );

		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.nodeType === 1 && length ) {
			return true;
		}

		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.0-pre
	 * http://sizzlejs.com/
	 *
	 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2014-12-16
	 */
	(function( window ) {

	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},

		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,

		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",
		// http://www.w3.org/TR/css3-syntax/#characters
		characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Loosely modeled on CSS identifier characters
		// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
		// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = characterEncoding.replace( "w", "w#" ),

		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",

		pseudos = ":(" + characterEncoding + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + characterEncoding + ")" ),
			"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
			"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rsibling = /[+~]/,
		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},

		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	function Sizzle( selector, context, results, seed ) {
		var match, elem, m, nodeType,
			// QSA vars
			i, groups, old, nid, newContext, newSelector;

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}

		context = context || document;
		results = results || [];
		nodeType = context.nodeType;

		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

			return results;
		}

		if ( !seed && documentIsHTML ) {

			// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
				// Speed-up: Sizzle("#ID")
				if ( (m = match[1]) ) {
					if ( nodeType === 9 ) {
						elem = context.getElementById( m );
						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document (jQuery #6963)
						if ( elem && elem.parentNode ) {
							// Handle the case where IE, Opera, and Webkit return items
							// by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}
					} else {
						// Context is not a document
						if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
							contains( context, elem ) && elem.id === m ) {
							results.push( elem );
							return results;
						}
					}

				// Speed-up: Sizzle("TAG")
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Speed-up: Sizzle(".CLASS")
				} else if ( (m = match[3]) && support.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// QSA path
			if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				nid = old = expando;
				newContext = context;
				newSelector = nodeType !== 1 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + toSelector( groups[i] );
					}
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];

		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = attrs.length;

		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}

	// Expose support vars for convenience
	support = Sizzle.support = {};

	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;

		// If no document and documentElement is available, return
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Set our document
		document = doc;
		docElem = doc.documentElement;
		parent = doc.defaultView;

		// Support: IE>8
		// If iframe document is assigned to "document" variable and if iframe has been reloaded,
		// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
		// IE6-8 do not support the defaultView property so parent will be undefined
		if ( parent && parent !== parent.top ) {
			// IE11 does not have attachEvent, so all must suffer
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}

		/* Support tests
		---------------------------------------------------------------------- */
		documentIsHTML = !isXML( doc );

		/* Attributes
		---------------------------------------------------------------------- */

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		/* getElement(s)By*
		---------------------------------------------------------------------- */

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( doc.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<9
		support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];

			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );

				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :

			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		/* QSA/matchesSelector
		---------------------------------------------------------------------- */

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\f]' msallowcapture=''>" +
					"<option selected=''></option></select>";

				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}

				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});

			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = doc.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );

				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );

		// Element contains another
		// Purposefully does not implement inclusive descendent
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		/* Sorting
		---------------------------------------------------------------------- */

		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}

			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :

				// Otherwise we know they are disconnected
				1;

			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === doc ? -1 :
					b === doc ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return doc;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		if ( support.matchesSelector && documentIsHTML &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}

		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;

		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;

		return results;
	};

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, outerCache, node, diff, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {
								// Seek `elem` from a previously-cached index
								outerCache = parent[ expando ] || (parent[ expando ] = {});
								cache = outerCache[ type ] || [];
								nodeIndex = cache[0] === dirruns && cache[1];
								diff = cache[0] === dirruns && cache[2];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										outerCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							// Use previously-cached element index if available
							} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
								diff = cache[1];

							// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
							} else {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
										// Cache the index of each encountered element
										if ( useCache ) {
											(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&

					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, outerCache,
					newCache = [ dirruns, doneName ];

				// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});
							if ( (oldCache = outerCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								outerCache[ dir ] = newCache;

								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;

				if ( outermost ) {
					outermostContext = context !== document && context;
				}

				// Add elements passing elementMatchers directly to results
				// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context, xml ) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// Apply set filters to unmatched elements
				matchedCount += i;
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};

	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );

		results = results || [];

		// Try to minimize operations if there is no seed and only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;

				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}

				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}

		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;

	// Initialize against the default document
	setDocument();

	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}

	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}

	return Sizzle;

	})( window );



	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[":"] = jQuery.expr.pseudos;
	jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;



	var rneedsContext = jQuery.expr.match.needsContext;

	var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



	var risSimple = /^.[^:#\[\.,]*$/;

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			});

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			});

		}

		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
		});
	}

	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			}));
	};

	jQuery.fn.extend({
		find: function( selector ) {
			var i,
				len = this.length,
				ret = [],
				self = this;

			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter(function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				}) );
			}

			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow(this, selector || [], false) );
		},
		not: function( selector ) {
			return this.pushStack( winnow(this, selector || [], true) );
		},
		is: function( selector ) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	});


	// Initialize a jQuery object


	// A central reference to the root jQuery(document)
	var rootjQuery,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		init = jQuery.fn.init = function( selector, context ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && (match[1] || !context) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[1] ) {
						context = context instanceof jQuery ? context[0] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[1],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {
								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[2] );

						// Support: Blackberry 4.6
						// gEBID returns nodes no longer in the document (#6963)
						if ( elem && elem.parentNode ) {
							// Inject the element directly into the jQuery object
							this.length = 1;
							this[0] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || rootjQuery ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[0] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return typeof rootjQuery.ready !== "undefined" ?
					rootjQuery.ready( selector ) :
					// Execute immediately if ready is not present
					selector( jQuery );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		};

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery( document );


	var rparentsprev = /^(?:parents|prev(?:Until|All))/,
		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.extend({
		dir: function( elem, dir, until ) {
			var matched = [],
				truncate = until !== undefined;

			while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
				if ( elem.nodeType === 1 ) {
					if ( truncate && jQuery( elem ).is( until ) ) {
						break;
					}
					matched.push( elem );
				}
			}
			return matched;
		},

		sibling: function( n, elem ) {
			var matched = [];

			for ( ; n; n = n.nextSibling ) {
				if ( n.nodeType === 1 && n !== elem ) {
					matched.push( n );
				}
			}

			return matched;
		}
	});

	jQuery.fn.extend({
		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;

			return this.filter(function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[i] ) ) {
						return true;
					}
				}
			});
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
					// Always skip document fragments
					if ( cur.nodeType < 11 && (pos ?
						pos.index(cur) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector(cur, selectors)) ) {

						matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
		},

		// Determine the position of an element within the set
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// Index in selector
			if ( typeof elem === "string" ) {
				return indexOf.call( jQuery( elem ), this[ 0 ] );
			}

			// Locate the position of the desired element
			return indexOf.call( this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},

		add: function( selector, context ) {
			return this.pushStack(
				jQuery.unique(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter(selector)
			);
		}
	});

	function sibling( cur, dir ) {
		while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
		return cur;
	}

	jQuery.each({
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return jQuery.dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return jQuery.dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return jQuery.dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return jQuery.sibling( elem.firstChild );
		},
		contents: function( elem ) {
			return elem.contentDocument || jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}

			if ( this.length > 1 ) {
				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.unique( matched );
				}

				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					matched.reverse();
				}
			}

			return this.pushStack( matched );
		};
	});
	var rnotwhite = (/\S+/g);



	// String to Object options format cache
	var optionsCache = {};

	// Convert String-formatted options into Object-formatted ones and store in cache
	function createOptions( options ) {
		var object = optionsCache[ options ] = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		});
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			( optionsCache[ options ] || createOptions( options ) ) :
			jQuery.extend( {}, options );

		var // Last fire value (for non-forgettable lists)
			memory,
			// Flag to know if list was already fired
			fired,
			// Flag to know if list is currently firing
			firing,
			// First callback to fire (used internally by add and fireWith)
			firingStart,
			// End of the loop when firing
			firingLength,
			// Index of currently firing callback (modified by remove if needed)
			firingIndex,
			// Actual callback list
			list = [],
			// Stack of fire calls for repeatable lists
			stack = !options.once && [],
			// Fire callbacks
			fire = function( data ) {
				memory = options.memory && data;
				fired = true;
				firingIndex = firingStart || 0;
				firingStart = 0;
				firingLength = list.length;
				firing = true;
				for ( ; list && firingIndex < firingLength; firingIndex++ ) {
					if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
						memory = false; // To prevent further calls using add
						break;
					}
				}
				firing = false;
				if ( list ) {
					if ( stack ) {
						if ( stack.length ) {
							fire( stack.shift() );
						}
					} else if ( memory ) {
						list = [];
					} else {
						self.disable();
					}
				}
			},
			// Actual Callbacks object
			self = {
				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {
						// First, we save the current length
						var start = list.length;
						(function add( args ) {
							jQuery.each( args, function( _, arg ) {
								var type = jQuery.type( arg );
								if ( type === "function" ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && type !== "string" ) {
									// Inspect recursively
									add( arg );
								}
							});
						})( arguments );
						// Do we need to add the callbacks to the
						// current firing batch?
						if ( firing ) {
							firingLength = list.length;
						// With memory, if we're not firing then
						// we should call right away
						} else if ( memory ) {
							firingStart = start;
							fire( memory );
						}
					}
					return this;
				},
				// Remove a callback from the list
				remove: function() {
					if ( list ) {
						jQuery.each( arguments, function( _, arg ) {
							var index;
							while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
								list.splice( index, 1 );
								// Handle firing indexes
								if ( firing ) {
									if ( index <= firingLength ) {
										firingLength--;
									}
									if ( index <= firingIndex ) {
										firingIndex--;
									}
								}
							}
						});
					}
					return this;
				},
				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
				},
				// Remove all callbacks from the list
				empty: function() {
					list = [];
					firingLength = 0;
					return this;
				},
				// Have the list do nothing anymore
				disable: function() {
					list = stack = memory = undefined;
					return this;
				},
				// Is it disabled?
				disabled: function() {
					return !list;
				},
				// Lock the list in its current state
				lock: function() {
					stack = undefined;
					if ( !memory ) {
						self.disable();
					}
					return this;
				},
				// Is it locked?
				locked: function() {
					return !stack;
				},
				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( list && ( !fired || stack ) ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						if ( firing ) {
							stack.push( args );
						} else {
							fire( args );
						}
					}
					return this;
				},
				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},
				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};


	jQuery.extend({

		Deferred: function( func ) {
			var tuples = [
					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks("memory") ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred(function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[1] ](function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
									}
								});
							});
							fns = null;
						}).promise();
					},
					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[1] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add(function() {
						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[0] ] = function() {
					deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[0] + "With" ] = list.fireWith;
			});

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// Add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject )
							.progress( updateFunc( i, progressContexts, progressValues ) );
					} else {
						--remaining;
					}
				}
			}

			// If we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	});


	// The deferred used on DOM ready
	var readyList;

	jQuery.fn.ready = function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	};

	jQuery.extend({
		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	});

	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );
		jQuery.ready();
	}

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called after the browser event has already occurred.
			// We once tried to use readyState "interactive" here, but it caused issues like the one
			// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
			if ( document.readyState === "complete" ) {
				// Handle it asynchronously to allow scripts the opportunity to delay ready
				setTimeout( jQuery.ready );

			} else {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed, false );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed, false );
			}
		}
		return readyList.promise( obj );
	};

	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();




	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			len = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {
				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < len; i++ ) {
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				len ? fn( elems[0], key ) : emptyGet;
	};


	/**
	 * Determines whether an object can have data
	 */
	jQuery.acceptData = function( owner ) {
		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		/* jshint -W018 */
		return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
	};


	function Data() {
		// Support: Android<4,
		// Old WebKit does not have Object.preventExtensions/freeze method,
		// return new empty object instead with no [[set]] accessor
		Object.defineProperty( this.cache = {}, 0, {
			get: function() {
				return {};
			}
		});

		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;
	Data.accepts = jQuery.acceptData;

	Data.prototype = {
		key: function( owner ) {
			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return the key for a frozen object.
			if ( !Data.accepts( owner ) ) {
				return 0;
			}

			var descriptor = {},
				// Check if the owner object already has a cache key
				unlock = owner[ this.expando ];

			// If not, create one
			if ( !unlock ) {
				unlock = Data.uid++;

				// Secure it in a non-enumerable, non-writable property
				try {
					descriptor[ this.expando ] = { value: unlock };
					Object.defineProperties( owner, descriptor );

				// Support: Android<4
				// Fallback to a less secure definition
				} catch ( e ) {
					descriptor[ this.expando ] = unlock;
					jQuery.extend( owner, descriptor );
				}
			}

			// Ensure the cache object
			if ( !this.cache[ unlock ] ) {
				this.cache[ unlock ] = {};
			}

			return unlock;
		},
		set: function( owner, data, value ) {
			var prop,
				// There may be an unlock assigned to this node,
				// if there is no entry for this "owner", create one inline
				// and set the unlock as though an owner entry had always existed
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;

			// Handle: [ owner, { properties } ] args
			} else {
				// Fresh assignments by object are shallow copied
				if ( jQuery.isEmptyObject( cache ) ) {
					jQuery.extend( this.cache[ unlock ], data );
				// Otherwise, copy the properties one-by-one to the cache object
				} else {
					for ( prop in data ) {
						cache[ prop ] = data[ prop ];
					}
				}
			}
			return cache;
		},
		get: function( owner, key ) {
			// Either a valid cache is found, or will be created.
			// New caches will be created and the unlock returned,
			// allowing direct access to the newly created
			// empty data object. A valid owner object must be provided.
			var cache = this.cache[ this.key( owner ) ];

			return key === undefined ?
				cache : cache[ key ];
		},
		access: function( owner, key, value ) {
			var stored;
			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					((key && typeof key === "string") && value === undefined) ) {

				stored = this.get( owner, key );

				return stored !== undefined ?
					stored : this.get( owner, jQuery.camelCase(key) );
			}

			// [*]When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name, camel,
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			if ( key === undefined ) {
				this.cache[ unlock ] = {};

			} else {
				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {
					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					camel = jQuery.camelCase( key );
					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key, camel ];
					} else {
						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = camel;
						name = name in cache ?
							[ name ] : ( name.match( rnotwhite ) || [] );
					}
				}

				i = name.length;
				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}
		},
		hasData: function( owner ) {
			return !jQuery.isEmptyObject(
				this.cache[ owner[ this.expando ] ] || {}
			);
		},
		discard: function( owner ) {
			if ( owner[ this.expando ] ) {
				delete this.cache[ owner[ this.expando ] ];
			}
		}
	};
	var data_priv = new Data();

	var data_user = new Data();



	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /([A-Z])/g;

	function dataAttr( elem, key, data ) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :
						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch( e ) {}

				// Make sure we set the data so it isn't changed later
				data_user.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend({
		hasData: function( elem ) {
			return data_user.hasData( elem ) || data_priv.hasData( elem );
		},

		data: function( elem, name, data ) {
			return data_user.access( elem, name, data );
		},

		removeData: function( elem, name ) {
			data_user.remove( elem, name );
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to data_priv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return data_priv.access( elem, name, data );
		},

		_removeData: function( elem, name ) {
			data_priv.remove( elem, name );
		}
	});

	jQuery.fn.extend({
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = data_user.get( elem );

					if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {

							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice(5) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						data_priv.set( elem, "hasDataAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each(function() {
					data_user.set( this, key );
				});
			}

			return access( this, function( value ) {
				var data,
					camelKey = jQuery.camelCase( key );

				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {
					// Attempt to get data from the cache
					// with the key as-is
					data = data_user.get( elem, key );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to get data from the cache
					// with the key camelized
					data = data_user.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}

					// We tried really hard, but the data doesn't exist.
					return;
				}

				// Set the data...
				this.each(function() {
					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = data_user.get( this, camelKey );

					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					data_user.set( this, camelKey, value );

					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf("-") !== -1 && data !== undefined ) {
						data_user.set( this, key, value );
					}
				});
			}, null, value, arguments.length > 1, null, true );
		},

		removeData: function( key ) {
			return this.each(function() {
				data_user.remove( this, key );
			});
		}
	});


	jQuery.extend({
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = data_priv.get( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = data_priv.access( elem, type, jQuery.makeArray(data) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return data_priv.get( elem, key ) || data_priv.access( elem, key, {
				empty: jQuery.Callbacks("once memory").add(function() {
					data_priv.remove( elem, [ type + "queue", key ] );
				})
			});
		}
	});

	jQuery.fn.extend({
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[0], type );
			}

			return data === undefined ?
				this :
				this.each(function() {
					var queue = jQuery.queue( this, type, data );

					// Ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[0] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				});
		},
		dequeue: function( type ) {
			return this.each(function() {
				jQuery.dequeue( this, type );
			});
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},
		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while ( i-- ) {
				tmp = data_priv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	});
	var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

	var isHidden = function( elem, el ) {
			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
		};

	var rcheckableType = (/^(?:checkbox|radio)$/i);



	(function() {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild( document.createElement( "div" ) ),
			input = document.createElement( "input" );

		// Support: Safari<=5.1
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );

		div.appendChild( input );

		// Support: Safari<=5.1, Android<4.2
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: IE<=11+
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
	})();
	var strundefined = typeof undefined;



	support.focusinBubbles = "onfocusin" in window;


	var
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
		rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {

			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.get( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !(events = elemData.events) ) {
				events = elemData.events = {};
			}
			if ( !(eventHandle = elemData.handle) ) {
				eventHandle = elemData.handle = function( e ) {
					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
						jQuery.event.dispatch.apply( elem, arguments ) : undefined;
				};
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend({
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join(".")
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !(handlers = events[ type ]) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle, false );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {

			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.hasData( elem ) && data_priv.get( elem );

			if ( !elemData || !(events = elemData.events) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				delete elemData.handle;
				data_priv.remove( elem, "events" );
			}
		},

		trigger: function( event, data, elem, onlyHandlers ) {

			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf(".") >= 0 ) {
				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split(".");
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(":") < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join(".");
			event.namespace_re = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === (elem.ownerDocument || document) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
					jQuery.acceptData( elem ) ) {

					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[0] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
								.apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( (event.result = ret) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			// Avoid non-left-click bubbling in Firefox (#3861)
			if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

				for ( ; cur !== this; cur = cur.parentNode || this ) {

					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.disabled !== true || event.type !== "click" ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) >= 0 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push({ elem: cur, handlers: matches });
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
			}

			return handlerQueue;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split(" "),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: Cordova 2.5 (WebKit) (#13255)
			// All events should have a target; Cordova deviceready doesn't
			if ( !event.target ) {
				event.target = document;
			}

			// Support: Safari 6.0+, Chrome<28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},

		special: {
			load: {
				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {
				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {
				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		},

		simulate: function( type, elem, event, bubble ) {
			// Piggyback on a donor event to simulate a different one.
			// Fake originalEvent to avoid donor's stopPropagation, but if the
			// simulated event prevents default then we do the same on the donor.
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true,
					originalEvent: {}
				}
			);
			if ( bubble ) {
				jQuery.event.trigger( e, null, elem );
			} else {
				jQuery.event.dispatch.call( elem, e );
			}
			if ( e.isDefaultPrevented() ) {
				event.preventDefault();
			}
		}
	};

	jQuery.removeEvent = function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	};

	jQuery.Event = function( src, props ) {
		// Allow instantiation without the 'new' keyword
		if ( !(this instanceof jQuery.Event) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&
					// Support: Android<4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if ( e && e.preventDefault ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( e && e.stopPropagation ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if ( e && e.stopImmediatePropagation ) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// Support: Chrome 15+
	jQuery.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mousenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	});

	// Support: Firefox, Chrome, Safari
	// Create "bubbling" focus and blur events
	if ( !support.focusinBubbles ) {
		jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
					jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
				};

			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix );

					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix ) - 1;

					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						data_priv.remove( doc, fix );

					} else {
						data_priv.access( doc, fix, attaches );
					}
				}
			};
		});
	}

	jQuery.fn.extend({

		on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
			var origFn, type;

			// Types can be a map of types/handlers
			if ( typeof types === "object" ) {
				// ( types-Object, selector, data )
				if ( typeof selector !== "string" ) {
					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for ( type in types ) {
					this.on( type, selector, data, types[ type ], one );
				}
				return this;
			}

			if ( data == null && fn == null ) {
				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if ( fn == null ) {
				if ( typeof selector === "string" ) {
					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {
					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if ( fn === false ) {
				fn = returnFalse;
			} else if ( !fn ) {
				return this;
			}

			if ( one === 1 ) {
				origFn = fn;
				fn = function( event ) {
					// Can use an empty set, since event contains the info
					jQuery().off( event );
					return origFn.apply( this, arguments );
				};
				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
			}
			return this.each( function() {
				jQuery.event.add( this, types, fn, data, selector );
			});
		},
		one: function( types, selector, data, fn ) {
			return this.on( types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {
				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {
				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {
				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each(function() {
				jQuery.event.remove( this, types, fn, selector );
			});
		},

		trigger: function( type, data ) {
			return this.each(function() {
				jQuery.event.trigger( type, data, this );
			});
		},
		triggerHandler: function( type, data ) {
			var elem = this[0];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	});


	var
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
		rtagName = /<([\w:]+)/,
		rhtml = /<|&#?\w+;/,
		rnoInnerhtml = /<(?:script|style|link)/i,
		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptType = /^$|\/(?:java|ecma)script/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

		// We have to close these tags to support XHTML (#13200)
		wrapMap = {

			// Support: IE9
			option: [ 1, "<select multiple='multiple'>", "</select>" ],

			thead: [ 1, "<table>", "</table>" ],
			col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
			tr: [ 2, "<table><tbody>", "</tbody></table>" ],
			td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

			_default: [ 0, "", "" ]
		};

	// Support: IE9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;

	// Support: 1.x compatibility
	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );

		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute("type");
		}

		return elem;
	}

	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			data_priv.set(
				elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
			);
		}
	}

	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if ( dest.nodeType !== 1 ) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if ( data_priv.hasData( src ) ) {
			pdataOld = data_priv.access( src );
			pdataCur = data_priv.set( dest, pdataOld );
			events = pdataOld.events;

			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}

		// 2. Copy user data
		if ( data_user.hasData( src ) ) {
			udataOld = data_user.access( src );
			udataCur = jQuery.extend( {}, udataOld );

			data_user.set( dest, udataCur );
		}
	}

	function getAll( context, tag ) {
		var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
				context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
				[];

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}

	// Fix IE bugs, see support tests
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;

		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}

	jQuery.extend({
		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );

			// Fix IE cloning issues
			if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
					!jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			// Return the cloned set
			return clone;
		},

		buildFragment: function( elems, context, scripts, selection ) {
			var elem, tmp, tag, wrap, contains, j,
				fragment = context.createDocumentFragment(),
				nodes = [],
				i = 0,
				l = elems.length;

			for ( ; i < l; i++ ) {
				elem = elems[ i ];

				if ( elem || elem === 0 ) {

					// Add nodes directly
					if ( jQuery.type( elem ) === "object" ) {
						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

					// Convert non-html into a text node
					} else if ( !rhtml.test( elem ) ) {
						nodes.push( context.createTextNode( elem ) );

					// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild( context.createElement("div") );

						// Deserialize a standard representation
						tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
						wrap = wrapMap[ tag ] || wrapMap._default;
						tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

						// Descend through wrappers to the right content
						j = wrap[ 0 ];
						while ( j-- ) {
							tmp = tmp.lastChild;
						}

						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, tmp.childNodes );

						// Remember the top-level container
						tmp = fragment.firstChild;

						// Ensure the created nodes are orphaned (#12392)
						tmp.textContent = "";
					}
				}
			}

			// Remove wrapper from fragment
			fragment.textContent = "";

			i = 0;
			while ( (elem = nodes[ i++ ]) ) {

				// #4087 - If origin and destination elements are the same, and this is
				// that element, do not do anything
				if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
					continue;
				}

				contains = jQuery.contains( elem.ownerDocument, elem );

				// Append to fragment
				tmp = getAll( fragment.appendChild( elem ), "script" );

				// Preserve script evaluation history
				if ( contains ) {
					setGlobalEval( tmp );
				}

				// Capture executables
				if ( scripts ) {
					j = 0;
					while ( (elem = tmp[ j++ ]) ) {
						if ( rscriptType.test( elem.type || "" ) ) {
							scripts.push( elem );
						}
					}
				}
			}

			return fragment;
		},

		cleanData: function( elems ) {
			var data, elem, type, key,
				special = jQuery.event.special,
				i = 0;

			for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
				if ( jQuery.acceptData( elem ) ) {
					key = elem[ data_priv.expando ];

					if ( key && (data = data_priv.cache[ key ]) ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );

								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}
						if ( data_priv.cache[ key ] ) {
							// Discard any remaining `private` data
							delete data_priv.cache[ key ];
						}
					}
				}
				// Discard any remaining `user` data
				delete data_user.cache[ elem[ data_user.expando ] ];
			}
		}
	});

	jQuery.fn.extend({
		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().each(function() {
						if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
							this.textContent = value;
						}
					});
			}, null, value, arguments.length );
		},

		append: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			});
		},

		prepend: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			});
		},

		before: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			});
		},

		after: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			});
		},

		remove: function( selector, keepData /* Internal Use Only */ ) {
			var elem,
				elems = selector ? jQuery.filter( selector, this ) : this,
				i = 0;

			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( getAll( elem ) );
				}

				if ( elem.parentNode ) {
					if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
						setGlobalEval( getAll( elem, "script" ) );
					}
					elem.parentNode.removeChild( elem );
				}
			}

			return this;
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; (elem = this[i]) != null; i++ ) {
				if ( elem.nodeType === 1 ) {

					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );

					// Remove any remaining nodes
					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map(function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			});
		},

		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = value.replace( rxhtmlTag, "<$1></$2>" );

					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};

							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var arg = arguments[ 0 ];

			// Make the changes, replacing each context element with the new content
			this.domManip( arguments, function( elem ) {
				arg = this.parentNode;

				jQuery.cleanData( getAll( this ) );

				if ( arg ) {
					arg.replaceChild( elem, this );
				}
			});

			// Force removal if there was no new content (e.g., from empty arguments)
			return arg && (arg.length || arg.nodeType) ? this : this.remove();
		},

		detach: function( selector ) {
			return this.remove( selector, true );
		},

		domManip: function( args, callback ) {

			// Flatten any nested arrays
			args = concat.apply( [], args );

			var fragment, first, scripts, hasScripts, node, doc,
				i = 0,
				l = this.length,
				set = this,
				iNoClone = l - 1,
				value = args[ 0 ],
				isFunction = jQuery.isFunction( value );

			// We can't cloneNode fragments that contain checked, in WebKit
			if ( isFunction ||
					( l > 1 && typeof value === "string" &&
						!support.checkClone && rchecked.test( value ) ) ) {
				return this.each(function( index ) {
					var self = set.eq( index );
					if ( isFunction ) {
						args[ 0 ] = value.call( this, index, self.html() );
					}
					self.domManip( args, callback );
				});
			}

			if ( l ) {
				fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
				first = fragment.firstChild;

				if ( fragment.childNodes.length === 1 ) {
					fragment = first;
				}

				if ( first ) {
					scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
					hasScripts = scripts.length;

					// Use the original fragment for the last item instead of the first because it can end up
					// being emptied incorrectly in certain situations (#8070).
					for ( ; i < l; i++ ) {
						node = fragment;

						if ( i !== iNoClone ) {
							node = jQuery.clone( node, true, true );

							// Keep references to cloned scripts for later restoration
							if ( hasScripts ) {
								// Support: QtWebKit
								// jQuery.merge because push.apply(_, arraylike) throws
								jQuery.merge( scripts, getAll( node, "script" ) );
							}
						}

						callback.call( this[ i ], node, i );
					}

					if ( hasScripts ) {
						doc = scripts[ scripts.length - 1 ].ownerDocument;

						// Reenable scripts
						jQuery.map( scripts, restoreScript );

						// Evaluate executable scripts on first document insertion
						for ( i = 0; i < hasScripts; i++ ) {
							node = scripts[ i ];
							if ( rscriptType.test( node.type || "" ) &&
								!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

								if ( node.src ) {
									// Optional AJAX dependency, but won't run scripts if not present
									if ( jQuery._evalUrl ) {
										jQuery._evalUrl( node.src );
									}
								} else {
									jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
								}
							}
						}
					}
				}
			}

			return this;
		}
	});

	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Support: QtWebKit
				// .get() because push.apply(_, arraylike) throws
				push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	});


	var iframe,
		elemdisplay = {};

	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */
	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var style,
			elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

			// getDefaultComputedStyle might be reliably used only on attached element
			display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

				// Use of this method is a temporary fix (more like optimization) until something better comes along,
				// since it was removed from specification and supported only in FF
				style.display : jQuery.css( elem[ 0 ], "display" );

		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();

		return display;
	}

	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {

				// Use the already-created iframe if possible
				iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = iframe[ 0 ].contentDocument;

				// Support: IE
				doc.write();
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}
	var rmargin = (/^margin/);

	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

	var getStyles = function( elem ) {
			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			if ( elem.ownerDocument.defaultView.opener ) {
				return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
			}

			return window.getComputedStyle( elem, null );
		};



	function curCSS( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// Support: IE9
		// getPropertyValue is only needed for .css('filter') (#12537)
		if ( computed ) {
			ret = computed.getPropertyValue( name ) || computed[ name ];
		}

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// Support: iOS < 6
			// A tribute to the "awesome hack by Dean Edwards"
			// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined ?
			// Support: IE
			// IE returns zIndex value as an integer.
			ret + "" :
			ret;
	}


	function addGetHookIf( conditionFn, hookFn ) {
		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {
					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return (this.get = hookFn).apply( this, arguments );
			}
		};
	}


	(function() {
		var pixelPositionVal, boxSizingReliableVal,
			docElem = document.documentElement,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );

		if ( !div.style ) {
			return;
		}

		// Support: IE9-11+
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
			"position:absolute";
		container.appendChild( div );

		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computePixelPositionAndBoxSizingReliable() {
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
				"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
				"border:1px;padding:1px;width:4px;position:absolute";
			div.innerHTML = "";
			docElem.appendChild( container );

			var divStyle = window.getComputedStyle( div, null );
			pixelPositionVal = divStyle.top !== "1%";
			boxSizingReliableVal = divStyle.width === "4px";

			docElem.removeChild( container );
		}

		// Support: node.js jsdom
		// Don't assume that getComputedStyle is a property of the global object
		if ( window.getComputedStyle ) {
			jQuery.extend( support, {
				pixelPosition: function() {

					// This test is executed only once but we still do memoizing
					// since we can use the boxSizingReliable pre-computing.
					// No need to check if the test was already performed, though.
					computePixelPositionAndBoxSizingReliable();
					return pixelPositionVal;
				},
				boxSizingReliable: function() {
					if ( boxSizingReliableVal == null ) {
						computePixelPositionAndBoxSizingReliable();
					}
					return boxSizingReliableVal;
				},
				reliableMarginRight: function() {

					// Support: Android 2.3
					// Check if div with explicit width and no margin-right incorrectly
					// gets computed margin-right based on width of container. (#3333)
					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
					// This support function is only executed once so no memoizing is needed.
					var ret,
						marginDiv = div.appendChild( document.createElement( "div" ) );

					// Reset CSS: box-sizing; display; margin; border; padding
					marginDiv.style.cssText = div.style.cssText =
						// Support: Firefox<29, Android 2.3
						// Vendor-prefix box-sizing
						"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
						"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
					marginDiv.style.marginRight = marginDiv.style.width = "0";
					div.style.width = "1px";
					docElem.appendChild( container );

					ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

					docElem.removeChild( container );
					div.removeChild( marginDiv );

					return ret;
				}
			});
		}
	})();


	// A method for quickly swapping in/out CSS properties to get correct calculations.
	jQuery.swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	};


	var
		// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
		rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},

		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

	// Return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( style, name ) {

		// Shortcut for names that are not vendor prefixed
		if ( name in style ) {
			return name;
		}

		// Check for vendor prefixed names
		var capName = name[0].toUpperCase() + name.slice(1),
			origName = name,
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in style ) {
				return name;
			}
		}

		return origName;
	}

	function setPositiveNumber( elem, value, subtract ) {
		var matches = rnumsplit.exec( value );
		return matches ?
			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?
			// If we already have the right measurement, avoid augmentation
			4 :
			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {
			// Both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {
				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// At this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {
				// At this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// At this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {
			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test(val) ) {
				return val;
			}

			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// Use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = data_priv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {
				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
				}
			} else {
				hidden = isHidden( elem );

				if ( display !== "none" || !hidden ) {
					data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	jQuery.extend({

		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {

						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			"float": "cssFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {

			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && (ret = rrelNum.exec( value )) ) {
					value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
					// Fixes bug #9237
					type = "number";
				}

				// Make sure that null and NaN values aren't set (#7116)
				if ( value == null || value !== value ) {
					return;
				}

				// If a number, add 'px' to the (except for certain CSS properties)
				if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
					value += "px";
				}

				// Support: IE9-11+
				// background-* props affect original clone's values
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
					style[ name ] = value;
				}

			} else {
				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			// Convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Make numeric if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
			}
			return val;
		}
	});

	jQuery.each([ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {

					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
						jQuery.swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						}) :
						getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var styles = extra && getStyles( elem );
				return setPositiveNumber( elem, value, extra ?
					augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					) : 0
				);
			}
		};
	});

	// Support: Android 2.3
	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return jQuery.swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each({
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split(" ") : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	});

	jQuery.fn.extend({
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}

			return this.each(function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			});
		}
	});


	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || "swing";
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				if ( tween.elem[ tween.prop ] != null &&
					(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
					return tween.elem[ tween.prop ];
				}

				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css( tween.elem, tween.prop, "" );
				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {
				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE9
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		}
	};

	jQuery.fx = Tween.prototype.init;

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};




	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
		rrun = /queueHooks$/,
		animationPrefilters = [ defaultPrefilter ],
		tweeners = {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value ),
					target = tween.cur(),
					parts = rfxnum.exec( value ),
					unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

					// Starting value computation is required for potential unit mismatches
					start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
						rfxnum.exec( jQuery.css( tween.elem, prop ) ),
					scale = 1,
					maxIterations = 20;

				if ( start && start[ 3 ] !== unit ) {
					// Trust units reported by jQuery.css
					unit = unit || start[ 3 ];

					// Make sure we update the tween properties later on
					parts = parts || [];

					// Iteratively approximate from a nonzero starting point
					start = +target || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*.
						// Use string for doubling so we don't accidentally see scale as unchanged below
						scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

					// Update scale, tolerating zero or NaN from tween.cur(),
					// break the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}

				// Update tween properties
				if ( parts ) {
					start = tween.start = +start || +target || 0;
					tween.unit = unit;
					// If a +=/-= token was provided, we're doing a relative animation
					tween.end = parts[ 1 ] ?
						start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
						+parts[ 2 ];
				}

				return tween;
			} ]
		};

	// Animations created synchronously will run synchronously
	function createFxNow() {
		setTimeout(function() {
			fxNow = undefined;
		});
		return ( fxNow = jQuery.now() );
	}

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			i = 0,
			attrs = { height: type };

		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween( value, prop, animation ) {
		var tween,
			collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( (tween = collection[ index ].call( animation, prop, value )) ) {

				// We're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = data_priv.get( elem, "fxshow" );

		// Handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always(function() {
				// Ensure the complete handler is called before this completes
				anim.always(function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				});
			});
		}

		// Height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );

			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
				style.display = "inline-block";
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}

		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}

		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = data_priv.access( elem, "fxshow", {} );
			}

			// Store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done(function() {
					jQuery( elem ).hide();
				});
			}
			anim.done(function() {
				var prop;

				data_priv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			});
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}

		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
			style.display = display;
		}
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = animationPrefilters.length,
			deferred = jQuery.Deferred().always( function() {
				// Don't match elem in the :animated selector
				delete tick.elem;
			}),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ]);

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise({
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, { specialEasing: {} }, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,
						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// Resolve when we played the last frame; otherwise, reject
					if ( gotoEnd ) {
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			}),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				return result;
			}
		}

		jQuery.map( props, createTween, animation );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			})
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	jQuery.Animation = jQuery.extend( Animation, {

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.split(" ");
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				tweeners[ prop ] = tweeners[ prop ] || [];
				tweeners[ prop ].unshift( callback );
			}
		},

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				animationPrefilters.unshift( callback );
			} else {
				animationPrefilters.push( callback );
			}
		}
	});

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// Normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.fn.extend({
		fadeTo: function( speed, to, easing, callback ) {

			// Show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// Animate to the value specified
				.end().animate({ opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {
					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );

					// Empty animations, or finishing resolves immediately
					if ( empty || data_priv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each(function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = data_priv.get( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			});
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each(function() {
				var index,
					data = data_priv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// Enable finishing flag on private data
				data.finish = true;

				// Empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}

				// Look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// Look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// Turn off finishing flag
				delete data.finish;
			});
		}
	});

	jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	});

	// Generate shortcuts for custom animations
	jQuery.each({
		slideDown: genFx("show"),
		slideUp: genFx("hide"),
		slideToggle: genFx("toggle"),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	});

	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			i = 0,
			timers = jQuery.timers;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};

	jQuery.fx.interval = 13;

	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		clearInterval( timerId );
		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	};


	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	};


	(function() {
		var input = document.createElement( "input" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );

		input.type = "checkbox";

		// Support: iOS<=5.1, Android<=4.2+
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== "";

		// Support: IE<=11+
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;

		// Support: Android<=2.3
		// Options inside disabled selects are incorrectly marked as disabled
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Support: IE<=11+
		// An input loses its value after becoming a radio
		input = document.createElement( "input" );
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	})();


	var nodeHook, boolHook,
		attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend({
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each(function() {
				jQuery.removeAttr( this, name );
			});
		}
	});

	jQuery.extend({
		attr: function( elem, name, value ) {
			var hooks, ret,
				nType = elem.nodeType;

			// don't get/set attributes on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === strundefined ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
			}

			if ( value !== undefined ) {

				if ( value === null ) {
					jQuery.removeAttr( elem, name );

				} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
					return ret;

				} else {
					elem.setAttribute( name, value + "" );
					return value;
				}

			} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				ret = jQuery.find.attr( elem, name );

				// Non-existent attributes return null, we normalize to undefined
				return ret == null ?
					undefined :
					ret;
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( (name = attrNames[i++]) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {
						// Set corresponding property to false
						elem[ propName ] = false;
					}

					elem.removeAttribute( name );
				}
			}
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		}
	});

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {
				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;

		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	});




	var rfocusable = /^(?:input|select|textarea|button)$/i;

	jQuery.fn.extend({
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			return this.each(function() {
				delete this[ jQuery.propFix[ name ] || name ];
			});
		}
	});

	jQuery.extend({
		propFix: {
			"for": "htmlFor",
			"class": "className"
		},

		prop: function( elem, name, value ) {
			var ret, hooks, notxml,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

			if ( notxml ) {
				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
					ret :
					( elem[ name ] = value );

			} else {
				return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
					ret :
					elem[ name ];
			}
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {
					return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
						elem.tabIndex :
						-1;
				}
			}
		}
	});

	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			}
		};
	}

	jQuery.each([
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	});




	var rclass = /[\t\r\n\f]/g;

	jQuery.fn.extend({
		addClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = typeof value === "string" && value,
				i = 0,
				len = this.length;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).addClass( value.call( this, j, this.className ) );
				});
			}

			if ( proceed ) {
				// The disjunction here is for better compressibility (see removeClass)
				classes = ( value || "" ).match( rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						" "
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}

						// only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = arguments.length === 0 || typeof value === "string" && value,
				i = 0,
				len = this.length;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).removeClass( value.call( this, j, this.className ) );
				});
			}
			if ( proceed ) {
				classes = ( value || "" ).match( rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						""
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = value ? jQuery.trim( cur ) : "";
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value;

			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( i ) {
					jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
				});
			}

			return this.each(function() {
				if ( type === "string" ) {
					// Toggle individual class names
					var className,
						i = 0,
						self = jQuery( this ),
						classNames = value.match( rnotwhite ) || [];

					while ( (className = classNames[ i++ ]) ) {
						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}

				// Toggle whole class name
				} else if ( type === strundefined || type === "boolean" ) {
					if ( this.className ) {
						// store className if set
						data_priv.set( this, "__className__", this.className );
					}

					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
				}
			});
		},

		hasClass: function( selector ) {
			var className = " " + selector + " ",
				i = 0,
				l = this.length;
			for ( ; i < l; i++ ) {
				if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
					return true;
				}
			}

			return false;
		}
	});




	var rreturn = /\r/g;

	jQuery.fn.extend({
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[0];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?
						// Handle most common string cases
						ret.replace(rreturn, "") :
						// Handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each(function( i ) {
				var val;

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";

				} else if ( typeof val === "number" ) {
					val += "";

				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					});
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			});
		}
	});

	jQuery.extend({
		valHooks: {
			option: {
				get: function( elem ) {
					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :
						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						jQuery.trim( jQuery.text( elem ) );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// IE6-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&
								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];
						if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
							optionSet = true;
						}
					}

					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	});

	// Radios and checkboxes getter/setter
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute("value") === null ? "on" : elem.value;
			};
		}
	});




	// Return jQuery for attributes-only inclusion


	jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	});

	jQuery.fn.extend({
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		},

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {
			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
		}
	});


	var nonce = jQuery.now();

	var rquery = (/\?/);



	// Support: Android 2.3
	// Workaround failure to string-cast null input
	jQuery.parseJSON = function( data ) {
		return JSON.parse( data + "" );
	};


	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}

		// Support: IE9
		try {
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}

		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};


	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),

		// Document location
		ajaxLocation = window.location.href,

		// Segment location into parts
		ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {
				// For each dataType in the dataTypeExpression
				while ( (dataType = dataTypes[i++]) ) {
					// Prepend if requested
					if ( dataType[0] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

					// Otherwise append
					} else {
						(structure[ dataType ] = structure[ dataType ] || []).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			});
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {

		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {
			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}
			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},
			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {
									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s[ "throws" ] ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend({

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: ajaxLocation,
			type: "GET",
			isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /xml/,
				html: /html/,
				json: /json/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,
				// URL without anti-cache param
				cacheURL,
				// Response headers
				responseHeadersString,
				responseHeaders,
				// timeout handle
				timeoutTimer,
				// Cross-domain detection vars
				parts,
				// To know if global events are to be dispatched
				fireGlobals,
				// Loop variable
				i,
				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),
				// Callbacks context
				callbackContext = s.context || s,
				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,
				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks("once memory"),
				// Status-dependent callbacks
				statusCode = s.statusCode || {},
				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},
				// The jqXHR state
				state = 0,
				// Default abort message
				strAbort = "canceled",
				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( (match = rheaders.exec( responseHeadersString )) ) {
									responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {
									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {
								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
				.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

			// A cross-domain request is in order when we have a protocol:host:port mismatch
			if ( s.crossDomain == null ) {
				parts = rurl.exec( s.url.toLowerCase() );
				s.crossDomain = !!( parts &&
					( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
						( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
							( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
				);
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger("ajaxStart");
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
					s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();
			}

			// Aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}
				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = setTimeout(function() {
						jqXHR.abort("timeout");
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {
					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );
					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader("Last-Modified");
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader("etag");
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger("ajaxStop");
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	});

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {
			// Shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			return jQuery.ajax({
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			});
		};
	});


	jQuery._evalUrl = function( url ) {
		return jQuery.ajax({
			url: url,
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		});
	};


	jQuery.fn.extend({
		wrapAll: function( html ) {
			var wrap;

			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapAll( html.call(this, i) );
				});
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map(function() {
					var elem = this;

					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}

					return elem;
				}).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapInner( html.call(this, i) );
				});
			}

			return this.each(function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			});
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each(function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
			});
		},

		unwrap: function() {
			return this.parent().each(function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			}).end();
		}
	});


	jQuery.expr.filters.hidden = function( elem ) {
		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
	};
	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};




	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {
			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {
					// Treat each array item as a scalar.
					add( prefix, v );

				} else {
					// Item is non-scalar (array or object), encode its numeric index.
					buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
				}
			});

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {
			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {
			// Serialize scalar item.
			add( prefix, obj );
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	jQuery.fn.extend({
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map(function() {
				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			})
			.filter(function() {
				var type = this.type;

				// Use .is( ":disabled" ) so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			})
			.map(function( i, elem ) {
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						}) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			}).get();
		}
	});


	jQuery.ajaxSettings.xhr = function() {
		try {
			return new XMLHttpRequest();
		} catch( e ) {}
	};

	var xhrId = 0,
		xhrCallbacks = {},
		xhrSuccessStatus = {
			// file protocol always yields status code 0, assume 200
			0: 200,
			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		xhrSupported = jQuery.ajaxSettings.xhr();

	// Support: IE9
	// Open requests must be manually aborted on unload (#5280)
	// See https://support.microsoft.com/kb/2856746 for more info
	if ( window.attachEvent ) {
		window.attachEvent( "onunload", function() {
			for ( var key in xhrCallbacks ) {
				xhrCallbacks[ key ]();
			}
		});
	}

	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport(function( options ) {
		var callback;

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					xhr.open( options.type, options.url, options.async, options.username, options.password );

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}

					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								delete xhrCallbacks[ id ];
								callback = xhr.onload = xhr.onerror = null;

								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {
									complete(
										// file: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,
										// Support: IE9
										// Accessing binary-data responseText throws an exception
										// (#11426)
										typeof xhr.responseText === "string" ? {
											text: xhr.responseText
										} : undefined,
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};

					// Listen to events
					xhr.onload = callback();
					xhr.onerror = callback("error");

					// Create the abort callback
					callback = xhrCallbacks[ id ] = callback("abort");

					try {
						// Do send the request (this may raise an exception)
						xhr.send( options.hasContent && options.data || null );
					} catch ( e ) {
						// #14683: Only rethrow if this hasn't been notified as an error yet
						if ( callback ) {
							throw e;
						}
					}
				},

				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});




	// Install script dataType
	jQuery.ajaxSetup({
		accepts: {
			script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /(?:java|ecma)script/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	});

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	});

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {
		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery("<script>").prop({
						async: true,
						charset: s.scriptCharset,
						src: s.url
					}).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});




	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup({
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	});

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters["script json"] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always(function() {
				// Restore preexisting value
				window[ callbackName ] = overwritten;

				// Save back as free
				if ( s[ callbackName ] ) {
					// make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			});

			// Delegate to script
			return "script";
		}
	});




	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts );

		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	};


	// Keep a copy of the old load method
	var _load = jQuery.fn.load;

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf(" ");

		if ( off >= 0 ) {
			selector = jQuery.trim( url.slice( off ) );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax({
				url: url,

				// if "type" variable is undefined, then "GET" method will be used
				type: type,
				dataType: "html",
				data: params
			}).done(function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			}).complete( callback && function( jqXHR, status ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			});
		}

		return this;
	};




	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	});




	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};




	var docElem = window.document.documentElement;

	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}

	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;

			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {
				options = options.call( elem, i, curOffset );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );

			} else {
				curElem.css( props );
			}
		}
	};

	jQuery.fn.extend({
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each(function( i ) {
						jQuery.offset.setOffset( this, options, i );
					});
			}

			var docElem, win,
				elem = this[ 0 ],
				box = { top: 0, left: 0 },
				doc = elem && elem.ownerDocument;

			if ( !doc ) {
				return;
			}

			docElem = doc.documentElement;

			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}

			// Support: BlackBerry 5, iOS 3 (original iPhone)
			// If we don't have gBCR, just use 0,0 rather than error
			if ( typeof elem.getBoundingClientRect !== strundefined ) {
				box = elem.getBoundingClientRect();
			}
			win = getWindow( doc );
			return {
				top: box.top + win.pageYOffset - docElem.clientTop,
				left: box.left + win.pageXOffset - docElem.clientLeft
			};
		},

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {
				// Assume getBoundingClientRect is there when computed position is fixed
				offset = elem.getBoundingClientRect();

			} else {
				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		offsetParent: function() {
			return this.map(function() {
				var offsetParent = this.offsetParent || docElem;

				while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || docElem;
			});
		}
	});

	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = "pageYOffset" === prop;

		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : window.pageXOffset,
						top ? val : window.pageYOffset
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length, null );
		};
	});

	// Support: Safari<7+, Chrome<37+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );
					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	});


	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
			// Margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {
						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?
						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		});
	});


	// The number of elements contained in the matched element set
	jQuery.fn.size = function() {
		return this.length;
	};

	jQuery.fn.andSelf = jQuery.fn.addBack;




	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}




	var
		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( typeof noGlobal === strundefined ) {
		window.jQuery = window.$ = jQuery;
	}




	return jQuery;

	}));


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * "Software"), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
	 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
	 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 */

	(function (name, definition) {
	    if (true) {
	        module.exports = definition();
	    } else if (typeof define === 'function' && typeof define.amd === 'object') {
	        define(definition);
	    } else {
	        this[name] = definition();
	    }
	})('validator', function (validator) {

	    'use strict';

	    validator = { version: '3.40.0' };

	    var emailUser = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e])|(\\[\x01-\x09\x0b\x0c\x0d-\x7f])))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i;

	    var emailUserUtf8 = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i;

	    var displayName = /^(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\s)*<(.+)>$/i;

	    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;

	    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

	    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/
	      , isbn13Maybe = /^(?:[0-9]{13})$/;

	    var ipv4Maybe = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/
	      , ipv6Block = /^[0-9A-F]{1,4}$/i;

	    var uuid = {
	        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i
	      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
	      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
	      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
	    };

	    var alpha = /^[A-Z]+$/i
	      , alphanumeric = /^[0-9A-Z]+$/i
	      , numeric = /^[-+]?[0-9]+$/
	      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/
	      , float = /^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/
	      , hexadecimal = /^[0-9A-F]+$/i
	      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

	    var ascii = /^[\x00-\x7F]+$/
	      , multibyte = /[^\x00-\x7F]/
	      , fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/
	      , halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

	    var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

	    var base64 = /^(?:[A-Z0-9+\/]{4})*(?:[A-Z0-9+\/]{2}==|[A-Z0-9+\/]{3}=|[A-Z0-9+\/]{4})$/i;

	    var phones = {
	      'zh-CN': /^(\+?0?86\-?)?1[345789]\d{9}$/,
	      'en-ZA': /^(\+?27|0)\d{9}$/,
	      'en-AU': /^(\+?61|0)4\d{8}$/,
	      'en-HK': /^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,
	      'fr-FR': /^(\+?33|0)[67]\d{8}$/,
	      'pt-PT': /^(\+351)?9[1236]\d{7}$/,
	      'el-GR': /^(\+30)?((2\d{9})|(69\d{8}))$/,
	      'en-GB': /^(\+?44|0)7\d{9}$/,
	      'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
	      'en-ZM': /^(\+26)?09[567]\d{7}$/
	    };

	    validator.extend = function (name, fn) {
	        validator[name] = function () {
	            var args = Array.prototype.slice.call(arguments);
	            args[0] = validator.toString(args[0]);
	            return fn.apply(validator, args);
	        };
	    };

	    //Right before exporting the validator object, pass each of the builtins
	    //through extend() so that their first argument is coerced to a string
	    validator.init = function () {
	        for (var name in validator) {
	            if (typeof validator[name] !== 'function' || name === 'toString' ||
	                    name === 'toDate' || name === 'extend' || name === 'init') {
	                continue;
	            }
	            validator.extend(name, validator[name]);
	        }
	    };

	    validator.toString = function (input) {
	        if (typeof input === 'object' && input !== null && input.toString) {
	            input = input.toString();
	        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {
	            input = '';
	        } else if (typeof input !== 'string') {
	            input += '';
	        }
	        return input;
	    };

	    validator.toDate = function (date) {
	        if (Object.prototype.toString.call(date) === '[object Date]') {
	            return date;
	        }
	        date = Date.parse(date);
	        return !isNaN(date) ? new Date(date) : null;
	    };

	    validator.toFloat = function (str) {
	        return parseFloat(str);
	    };

	    validator.toInt = function (str, radix) {
	        return parseInt(str, radix || 10);
	    };

	    validator.toBoolean = function (str, strict) {
	        if (strict) {
	            return str === '1' || str === 'true';
	        }
	        return str !== '0' && str !== 'false' && str !== '';
	    };

	    validator.equals = function (str, comparison) {
	        return str === validator.toString(comparison);
	    };

	    validator.contains = function (str, elem) {
	        return str.indexOf(validator.toString(elem)) >= 0;
	    };

	    validator.matches = function (str, pattern, modifiers) {
	        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
	            pattern = new RegExp(pattern, modifiers);
	        }
	        return pattern.test(str);
	    };

	    var default_email_options = {
	        allow_display_name: false,
	        allow_utf8_local_part: true,
	        require_tld: true
	    };

	    validator.isEmail = function (str, options) {
	        options = merge(options, default_email_options);

	        if (options.allow_display_name) {
	            var display_email = str.match(displayName);
	            if (display_email) {
	                str = display_email[1];
	            }
	        } else if (/\s/.test(str)) {
	            return false;
	        }

	        var parts = str.split('@')
	          , domain = parts.pop()
	          , user = parts.join('@');

	        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {
	            return false;
	        }

	        return options.allow_utf8_local_part ?
	            emailUserUtf8.test(user) :
	            emailUser.test(user);
	    };

	    var default_url_options = {
	        protocols: [ 'http', 'https', 'ftp' ]
	      , require_tld: true
	      , require_protocol: false
	      , allow_underscores: false
	      , allow_trailing_dot: false
	      , allow_protocol_relative_urls: false
	    };

	    validator.isURL = function (url, options) {
	        if (!url || url.length >= 2083 || /\s/.test(url)) {
	            return false;
	        }
	        if (url.indexOf('mailto:') === 0) {
	            return false;
	        }
	        options = merge(options, default_url_options);
	        var protocol, auth, host, hostname, port,
	            port_str, split;
	        split = url.split('://');
	        if (split.length > 1) {
	            protocol = split.shift();
	            if (options.protocols.indexOf(protocol) === -1) {
	                return false;
	            }
	        } else if (options.require_protocol) {
	            return false;
	        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
	            split[0] = url.substr(2);
	        }
	        url = split.join('://');
	        split = url.split('#');
	        url = split.shift();

	        split = url.split('?');
	        url = split.shift();

	        split = url.split('/');
	        url = split.shift();
	        split = url.split('@');
	        if (split.length > 1) {
	            auth = split.shift();
	            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
	                return false;
	            }
	        }
	        hostname = split.join('@');
	        split = hostname.split(':');
	        host = split.shift();
	        if (split.length) {
	            port_str = split.join(':');
	            port = parseInt(port_str, 10);
	            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
	                return false;
	            }
	        }
	        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&
	                host !== 'localhost') {
	            return false;
	        }
	        if (options.host_whitelist &&
	                options.host_whitelist.indexOf(host) === -1) {
	            return false;
	        }
	        if (options.host_blacklist &&
	                options.host_blacklist.indexOf(host) !== -1) {
	            return false;
	        }
	        return true;
	    };

	    validator.isIP = function (str, version) {
	        version = validator.toString(version);
	        if (!version) {
	            return validator.isIP(str, 4) || validator.isIP(str, 6);
	        } else if (version === '4') {
	            if (!ipv4Maybe.test(str)) {
	                return false;
	            }
	            var parts = str.split('.').sort(function (a, b) {
	                return a - b;
	            });
	            return parts[3] <= 255;
	        } else if (version === '6') {
	            var blocks = str.split(':');
	            var foundOmissionBlock = false; // marker to indicate ::

	            if (blocks.length > 8)
	                return false;

	            // initial or final ::
	            if (str === '::') {
	                return true;
	            } else if (str.substr(0, 2) === '::') {
	                blocks.shift();
	                blocks.shift();
	                foundOmissionBlock = true;
	            } else if (str.substr(str.length - 2) === '::') {
	                blocks.pop();
	                blocks.pop();
	                foundOmissionBlock = true;
	            }

	            for (var i = 0; i < blocks.length; ++i) {
	                // test for a :: which can not be at the string start/end
	                // since those cases have been handled above
	                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {
	                    if (foundOmissionBlock)
	                        return false; // multiple :: in address
	                    foundOmissionBlock = true;
	                } else if (!ipv6Block.test(blocks[i])) {
	                    return false;
	                }
	            }

	            if (foundOmissionBlock) {
	                return blocks.length >= 1;
	            } else {
	                return blocks.length === 8;
	            }
	        }
	        return false;
	    };

	    var default_fqdn_options = {
	        require_tld: true
	      , allow_underscores: false
	      , allow_trailing_dot: false
	    };

	    validator.isFQDN = function (str, options) {
	        options = merge(options, default_fqdn_options);

	        /* Remove the optional trailing dot before checking validity */
	        if (options.allow_trailing_dot && str[str.length - 1] === '.') {
	            str = str.substring(0, str.length - 1);
	        }
	        var parts = str.split('.');
	        if (options.require_tld) {
	            var tld = parts.pop();
	            if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
	                return false;
	            }
	        }
	        for (var part, i = 0; i < parts.length; i++) {
	            part = parts[i];
	            if (options.allow_underscores) {
	                if (part.indexOf('__') >= 0) {
	                    return false;
	                }
	                part = part.replace(/_/g, '');
	            }
	            if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
	                return false;
	            }
	            if (part[0] === '-' || part[part.length - 1] === '-' ||
	                    part.indexOf('---') >= 0) {
	                return false;
	            }
	        }
	        return true;
	    };

	    validator.isBoolean = function(str) {
	        return (['true', 'false', '1', '0'].indexOf(str) >= 0);
	    };

	    validator.isAlpha = function (str) {
	        return alpha.test(str);
	    };

	    validator.isAlphanumeric = function (str) {
	        return alphanumeric.test(str);
	    };

	    validator.isNumeric = function (str) {
	        return numeric.test(str);
	    };

	    validator.isHexadecimal = function (str) {
	        return hexadecimal.test(str);
	    };

	    validator.isHexColor = function (str) {
	        return hexcolor.test(str);
	    };

	    validator.isLowercase = function (str) {
	        return str === str.toLowerCase();
	    };

	    validator.isUppercase = function (str) {
	        return str === str.toUpperCase();
	    };

	    validator.isInt = function (str, options) {
	        options = options || {};
	        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
	    };

	    validator.isFloat = function (str, options) {
	        options = options || {};
	        return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
	    };

	    validator.isDivisibleBy = function (str, num) {
	        return validator.toFloat(str) % validator.toInt(num) === 0;
	    };

	    validator.isNull = function (str) {
	        return str.length === 0;
	    };

	    validator.isLength = function (str, min, max) {
	        var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
	        var len = str.length - surrogatePairs.length;
	        return len >= min && (typeof max === 'undefined' || len <= max);
	    };

	    validator.isByteLength = function (str, min, max) {
	        return str.length >= min && (typeof max === 'undefined' || str.length <= max);
	    };

	    validator.isUUID = function (str, version) {
	        var pattern = uuid[version ? version : 'all'];
	        return pattern && pattern.test(str);
	    };

	    validator.isDate = function (str) {
	        return !isNaN(Date.parse(str));
	    };

	    validator.isAfter = function (str, date) {
	        var comparison = validator.toDate(date || new Date())
	          , original = validator.toDate(str);
	        return !!(original && comparison && original > comparison);
	    };

	    validator.isBefore = function (str, date) {
	        var comparison = validator.toDate(date || new Date())
	          , original = validator.toDate(str);
	        return original && comparison && original < comparison;
	    };

	    validator.isIn = function (str, options) {
	        var i;
	        if (Object.prototype.toString.call(options) === '[object Array]') {
	            var array = [];
	            for (i in options) {
	                array[i] = validator.toString(options[i]);
	            }
	            return array.indexOf(str) >= 0;
	        } else if (typeof options === 'object') {
	            return options.hasOwnProperty(str);
	        } else if (options && typeof options.indexOf === 'function') {
	            return options.indexOf(str) >= 0;
	        }
	        return false;
	    };

	    validator.isCreditCard = function (str) {
	        var sanitized = str.replace(/[^0-9]+/g, '');
	        if (!creditCard.test(sanitized)) {
	            return false;
	        }
	        var sum = 0, digit, tmpNum, shouldDouble;
	        for (var i = sanitized.length - 1; i >= 0; i--) {
	            digit = sanitized.substring(i, (i + 1));
	            tmpNum = parseInt(digit, 10);
	            if (shouldDouble) {
	                tmpNum *= 2;
	                if (tmpNum >= 10) {
	                    sum += ((tmpNum % 10) + 1);
	                } else {
	                    sum += tmpNum;
	                }
	            } else {
	                sum += tmpNum;
	            }
	            shouldDouble = !shouldDouble;
	        }
	        return !!((sum % 10) === 0 ? sanitized : false);
	    };

	    validator.isISIN = function (str) {
	        if (!isin.test(str)) {
	            return false;
	        }

	        var checksumStr = str.replace(/[A-Z]/g, function(character) {
	            return parseInt(character, 36);
	        });

	        var sum = 0, digit, tmpNum, shouldDouble = true;
	        for (var i = checksumStr.length - 2; i >= 0; i--) {
	            digit = checksumStr.substring(i, (i + 1));
	            tmpNum = parseInt(digit, 10);
	            if (shouldDouble) {
	                tmpNum *= 2;
	                if (tmpNum >= 10) {
	                    sum += tmpNum + 1;
	                } else {
	                    sum += tmpNum;
	                }
	            } else {
	                sum += tmpNum;
	            }
	            shouldDouble = !shouldDouble;
	        }

	        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
	    };

	    validator.isISBN = function (str, version) {
	        version = validator.toString(version);
	        if (!version) {
	            return validator.isISBN(str, 10) || validator.isISBN(str, 13);
	        }
	        var sanitized = str.replace(/[\s-]+/g, '')
	          , checksum = 0, i;
	        if (version === '10') {
	            if (!isbn10Maybe.test(sanitized)) {
	                return false;
	            }
	            for (i = 0; i < 9; i++) {
	                checksum += (i + 1) * sanitized.charAt(i);
	            }
	            if (sanitized.charAt(9) === 'X') {
	                checksum += 10 * 10;
	            } else {
	                checksum += 10 * sanitized.charAt(9);
	            }
	            if ((checksum % 11) === 0) {
	                return !!sanitized;
	            }
	        } else  if (version === '13') {
	            if (!isbn13Maybe.test(sanitized)) {
	                return false;
	            }
	            var factor = [ 1, 3 ];
	            for (i = 0; i < 12; i++) {
	                checksum += factor[i % 2] * sanitized.charAt(i);
	            }
	            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {
	                return !!sanitized;
	            }
	        }
	        return false;
	    };

	    validator.isMobilePhone = function(str, locale) {
	        if (locale in phones) {
	            return phones[locale].test(str);
	        }
	        return false;
	    };

	    var default_currency_options = {
	        symbol: '$'
	      , require_symbol: false
	      , allow_space_after_symbol: false
	      , symbol_after_digits: false
	      , allow_negatives: true
	      , parens_for_negatives: false
	      , negative_sign_before_digits: false
	      , negative_sign_after_digits: false
	      , allow_negative_sign_placeholder: false
	      , thousands_separator: ','
	      , decimal_separator: '.'
	      , allow_space_after_digits: false
	    };

	    validator.isCurrency = function (str, options) {
	        options = merge(options, default_currency_options);

	        return currencyRegex(options).test(str);
	    };

	    validator.isJSON = function (str) {
	        try {
	            JSON.parse(str);
	        } catch (e) {
	            return false;
	        }
	        return true;
	    };

	    validator.isMultibyte = function (str) {
	        return multibyte.test(str);
	    };

	    validator.isAscii = function (str) {
	        return ascii.test(str);
	    };

	    validator.isFullWidth = function (str) {
	        return fullWidth.test(str);
	    };

	    validator.isHalfWidth = function (str) {
	        return halfWidth.test(str);
	    };

	    validator.isVariableWidth = function (str) {
	        return fullWidth.test(str) && halfWidth.test(str);
	    };

	    validator.isSurrogatePair = function (str) {
	        return surrogatePair.test(str);
	    };

	    validator.isBase64 = function (str) {
	        return base64.test(str);
	    };

	    validator.isMongoId = function (str) {
	        return validator.isHexadecimal(str) && str.length === 24;
	    };

	    validator.ltrim = function (str, chars) {
	        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
	        return str.replace(pattern, '');
	    };

	    validator.rtrim = function (str, chars) {
	        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\s+$/g;
	        return str.replace(pattern, '');
	    };

	    validator.trim = function (str, chars) {
	        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\s+|\s+$/g;
	        return str.replace(pattern, '');
	    };

	    validator.escape = function (str) {
	        return (str.replace(/&/g, '&amp;')
	            .replace(/"/g, '&quot;')
	            .replace(/'/g, '&#x27;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;')
	            .replace(/\//g, '&#x2F;')
	            .replace(/\`/g, '&#96;'));
	    };

	    validator.stripLow = function (str, keep_new_lines) {
	        var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
	        return validator.blacklist(str, chars);
	    };

	    validator.whitelist = function (str, chars) {
	        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
	    };

	    validator.blacklist = function (str, chars) {
	        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
	    };

	    var default_normalize_email_options = {
	        lowercase: true
	    };

	    validator.normalizeEmail = function (email, options) {
	        options = merge(options, default_normalize_email_options);
	        if (!validator.isEmail(email)) {
	            return false;
	        }
	        var parts = email.split('@', 2);
	        parts[1] = parts[1].toLowerCase();
	        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
	            parts[0] = parts[0].toLowerCase().replace(/\./g, '');
	            if (parts[0][0] === '+') {
	                return false;
	            }
	            parts[0] = parts[0].split('+')[0];
	            parts[1] = 'gmail.com';
	        } else if (options.lowercase) {
	            parts[0] = parts[0].toLowerCase();
	        }
	        return parts.join('@');
	    };

	    function merge(obj, defaults) {
	        obj = obj || {};
	        for (var key in defaults) {
	            if (typeof obj[key] === 'undefined') {
	                obj[key] = defaults[key];
	            }
	        }
	        return obj;
	    }

	    function currencyRegex(options) {
	        var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?')
	            , negative = '-?'
	            , whole_dollar_amount_without_sep = '[1-9]\\d*'
	            , whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*'
	            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]
	            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'
	            , decimal_amount = '(\\' + options.decimal_separator + '\\d{2})?';
	        var pattern = whole_dollar_amount + decimal_amount;
	        // default is negative sign before symbol, but there are two other options (besides parens)
	        if (options.allow_negatives && !options.parens_for_negatives) {
	            if (options.negative_sign_after_digits) {
	                pattern += negative;
	            }
	            else if (options.negative_sign_before_digits) {
	                pattern = negative + pattern;
	            }
	        }
	        // South African Rand, for example, uses R 123 (space) and R-123 (no space)
	        if (options.allow_negative_sign_placeholder) {
	            pattern = '( (?!\\-))?' + pattern;
	        }
	        else if (options.allow_space_after_symbol) {
	            pattern = ' ?' + pattern;
	        }
	        else if (options.allow_space_after_digits) {
	            pattern += '( (?!$))?';
	        }
	        if (options.symbol_after_digits) {
	            pattern += symbol;
	        } else {
	            pattern = symbol + pattern;
	        }
	        if (options.allow_negatives) {
	            if (options.parens_for_negatives) {
	                pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
	            }
	            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
	                pattern = negative + pattern;
	            }
	        }
	        return new RegExp(
	            '^' +
	            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space
	            '(?!-? )(?=.*\\d)' +
	            pattern +
	            '$'
	        );
	    }

	    validator.init();

	    return validator;

	});


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * tag显示实现模块
	 * @author zhujiefeng
	 * @email	flyingpig@venvyvideo.cn
	 * @param  {Element}	parent	iva父容器
	 * @param  {zrender}	zr	zrender对象
	 * @param  {Number}	rX	X轴坐标的百分比
	 * @param  {[type]}	rY	Y轴坐标的百分比
	 * @return {[Void}
	 */
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)
	    , __webpack_require__(17)
	    , __webpack_require__(18)
	    , __webpack_require__(19)
	    , __webpack_require__(20)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, zrender, circle, line, animation) {
	    	function Tag (parent, zr, options) {
	    		this.parent = parent;
	    		this.zr = zr;
	    		this.tagId = options.tagId;
	    		this.dgId = options.dgId;
	    		this.rX = options.x;
	    		this.rY = options.y;
	    		this.title = options.title;
	    		this.tip = $('<div class="tip" style="display:none;" data-dgid="'+this.dgId+'" data-tagid="'+this.tagId+'">'+this.title+'</div>')
	    		// this.tip.click(function (event) {
	    		// 	$(this).remove();
	    		// })
	    		this.init();
	    	}
	    	Tag.prototype.init = function () {
	    		var player = $(this.parent);
	    		var width = player.width();
	    		var height = player.height();
	    		var coorX = Math.round(width*this.rX);
			    var coorY = Math.round(height*this.rY);
			    var circleStyleConfig = {
			    	brushType: 'both',
		        	lineWidth: 1,
		            x: 0,
		            y: 0,
		            r: 4,
		            strokeColor: '#fff',
		            color: '#fff',
		            shadowBlur: 8,
		            shadowColor: '#fff'
			    }
			    //中心圆
			    var circleInstance = new circle({
			    	hoverable: false,
			        position: [coorX, coorY],
			        style: circleStyleConfig
			    });
			    //波纹圈1
			    var circleStyleConfig1 = $.extend(true, {}, circleStyleConfig, {brushType: 'stroke', shadowBlur: 0,opacity: 1});
			    var circleInstance1 = new circle({
			    	hoverable: false,
			        position: [coorX, coorY],
			        style: circleStyleConfig1
			    });
			    //波纹圈2
			    var circleInstance2 = new circle({
			    	hoverable: false,
			        position: [coorX, coorY],
			        style: circleStyleConfig1
			    });
			    this.zr.addShape(circleInstance);
				this.zr.addShape(circleInstance1);
			    this.zr.addShape(circleInstance2);
			    this.zr.animate(circleInstance1.id, 'style')
			    	.when(1000, {
			    		r: 12,
			    		opacity: 0
			    	})
			    	.start();
			    this.zr.animate(circleInstance2.id, 'style')
			    	.when(1000, {
			    		r: 12,
			    		opacity: 0
			    	})
			    	.delay(500)
			    	.start()
			    	.done(function () {
			    		setTimeout(function () {
			    			this.zr.delShape(circleInstance.id);
			    		}.bind(this), 500);
			    	}.bind(this));
			    var lineStyleConfig = {
			    	xStart: coorX,
		            yStart: coorY,
		            xEnd: coorX,
		            yEnd: coorY,
		            strokeColor: '#fff',
		            lineWidth: 1,
		            lineType: 'solid',
		            opacity: 1
			    }
			    var verticalLine = new line({
			    	hoverable: false,
			        style: lineStyleConfig
			    });
			    this.zr.addShape(verticalLine);
			    //先向上
			    if (coorY > 120) {
			    	var vSign = 1;
			    }
			    //再向下
			    else {
			    	var vSign = -1;
			    }
		    	var lineStyleConfig1 = $.extend({}, lineStyleConfig, {yStart: coorY - 90*vSign, yEnd: coorY - 90*vSign})
		        var horizontalLine = new line({
		        	hoverable: false,
		            style: lineStyleConfig1
		        });
		        this.zr.addShape(horizontalLine);
		        //再向右
		        if (coorX < (width-380)) {
		        	var hSign = 1;
		        }
		        //再向左
		        else {
		        	var hSign = -1;
		        }
		        this.zr.animate(verticalLine.id, 'style')
	                .when(200, {yEnd: coorY - 90*vSign}) 
	                .start()
	                .done(function () {
	                    this.zr.animate(horizontalLine.id, 'style')
	                        .when(200, {xEnd: coorX + 160*hSign})
	                        .start()
	                        .done(function () {
	                            // var tip = $('<div class="tip" style="display:none;" data-dgid="'+this.dgId+'">'+this.content+'</div>')
	                            	this.tip.appendTo(player)
	                            	.fadeIn(500);
	                            if (hSign > 0) {
	                            	var offset = 0;
	                            } else {
	                            	var offset = this.tip.width();
	                            }
	                            this.tip.css('left', coorX + (170+offset)*hSign)
	                                .css('top', coorY - 90*vSign - 10)
	                                .delay(4000)
	                                .fadeOut(500, function () {
	                                    $(this).remove();
	                                });
	                            this.zr.animate(verticalLine.id, 'style')
	                                .when(200, {yStart: coorY - 90*vSign})
	                                .start()
	                                .done(function () {
	                                    this.zr.animate(horizontalLine.id, 'style')
	                                        .when(200, {xStart: coorX + 160*hSign})
	                                        .start()
	                                        .done(function () {
	                                            this.zr.delShape(horizontalLine.id);
	                                            this.zr.delShape(verticalLine.id);
	                                        }.bind(this))
	                                }.bind(this))
	                        }.bind(this))
	                }.bind(this))
	    	}
	    	return Tag;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)
		, __webpack_require__(9)
		, __webpack_require__(5)
		, __webpack_require__(21)
	    , __webpack_require__(22)
	    , __webpack_require__(23)
	    , __webpack_require__(24)
	    , __webpack_require__(11)
	    , __webpack_require__(1)
	    , __webpack_require__(13)
	    , __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (ajax, handlebar, $, sideBarBootstrapTmpl, headTmpl, bodyTmpl, dgListTmpl, showDg, docCookies, logWindow, environment) {
		function sideBar (parent, callback, options) {
			this.parent = parent;
			this.callback = callback;
			this.options = options;
			this.body = $(handlebar.compile(sideBarBootstrapTmpl)({}));
			this.dgData = {};
			this.dgList = [];
			this.init();
		}
		sideBar.prototype.init = function() {
			$(this.parent).append(this.body);
		}
		sideBar.prototype.show = function () {
			this.body.animate({
	    			right: 0
	    		}, 200, 'swing')
		}
		sideBar.prototype.hide = function () {
			this.body.animate({
	    			right: -240
	    		}, 200, 'swing')
		}
		sideBar.prototype.isHide = function () {
			return this.body.css('right') == '-240px';
		}
		sideBar.prototype.setData = function(data) {
			this.dgData = data;
		}
		sideBar.prototype.getUserInfo = function () {
			this.body.find('.m-head').remove();
			//获取用户信息
			ajax('/user/getCurrentUser', 'GET', {}, function (data) {
				if (data.status === 0) {
					var userInfo;
					if (data.msg.name === '游客') {
						userInfo = {
							name: '游客',
							avatar: 'http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/photo.png',
							desc: '该游客很懒，什么都没留下~'
						}
					} else {
						userInfo = {
							_id: data.msg['_id'],
							name: data.msg.name,
							avatar: data.msg.avatar,
							desc: data.msg.desc?data.msg.desc:'该用户很懒，什么都没留下~'
						}
					}
					this.body.prepend($(handlebar.compile(headTmpl)(userInfo)));
					//搜索框
				    this.body.find('.search input').keypress(function (event) {
				    	//输入回车
				    	if (event.charCode == 13) {
				    		this.hide();
				    		var keyword = event.target.value;
				    		this.callback(keyword, this.dgData);
				    	}
				    }.bind(this))
				}
			}.bind(this))
		}
		sideBar.prototype.getDgList = function () {
			this.body.find('.m-body').remove();
			if (docCookies.getItem('isLogined') == 'true') {
				var pn = 0;
		    	ajax('/dg2/search', 'GET', {
		    		pn: pn,
		    		ps: 4,
		    		kw: ''
		    	}, function (data) {
		    		if (data.status == 0) {
		    			this.dgList = this.dgList.concat(data.msg);
		    			var dgList = data.msg.map(function (x, index) {
		    				if (x.desc.length > 30) {
		    					x.desc = x.desc.substr(0, 30)+'...';
		    				}
		    				x.isFav = docCookies.getItem('userId') !== x.user['_id'];
		    				return x;
		    			});
		    			var body = $(handlebar.compile(bodyTmpl)({dgList: dgList, isLogined: true}));
		    			if (data.msg.length<4 || this.dgList.length==data.total) {
		    				body.find('.more').hide();
		    			}
			    		this.body.append(body);
			    		this.body.find('.list ol').delegate('li', 'click', function (e) {
			    			var index = $(e.delegateTarget).find('li').index($(e.currentTarget));
			    			var dg = e.currentTarget.dataset.id;
			    			this.hide();
			    			var showFav = docCookies.getItem('userId')!==this.dgList[index].user['_id'];
			    			new showDg(this.parent, this.dgList[index], {
								onClose: this.options.onClose,
								isQuote: true,
								dgData: $.extend(this.dgData, {dg: dg}),
								showFav: showFav,
								sideBar: this
							});
						}.bind(this))
			    		body.find('.more a').click(function (e) {
			    			pn++;
			    			ajax('/dg2/search', 'GET', {
			    				pn: pn,
					    		ps: 4,
					    		kw: ''
			    			}, function (data) {
			    				if (data.status == 0) {
			    					if (data.msg.length < 4) {
					    				this.body.find('.more').hide();
					    			}
			    					this.dgList = this.dgList.concat(data.msg);
			    					var dgList = data.msg.map(function (x) {
			    						if (x.desc.length > 30) {
					    					x.desc = x.desc.substr(0, 30)+'...';
					    				}
					    				x.isFav = docCookies.getItem('userId') !== x.user['_id'];
					    				return x;
			    					})
			    					var list = $(handlebar.compile(dgListTmpl)({dgList: dgList}));
				    				body.find('.list ol').append(list);
				    				this.body.find('.m-body').animate({scrollTop: this.body.find('.m-body .list').height()}, 200);
				    				if (data.msg.length<4 || this.dgList.length==data.total) {
					    				body.find('.more').hide();
					    			}
			    				} else {
			    					alert(data.msg);
			    				}
			    			}.bind(this))
			    		}.bind(this))
		    		} else if (data.status == 400) {
		    			var body = $(handlebar.compile(bodyTmpl)({dgList: []}));
			    		this.body.append(body);
		    		} else {
		    			alert(data.msg);
		    		}
		    	}.bind(this))
			} else {
				var body = $(handlebar.compile(bodyTmpl)({dgList: [], isLogined: false}));
				body.find('.note a').click(function () {
					this.hide()
					logWindow($(this.parent), function (data) {
						docCookies.setItem('userId', data['_id']);
						docCookies.setItem('isLogined', true);
						docCookies.setItem('crossDomainSess', data.sess);
						docCookies.setItem('crossDomainSid', data.sid);
						this.options.onClose();
						this.getUserInfo();
						this.getDgList();
						this.show();
						$('body').append('<script src="'+environment.host+'/setCookie.js?sess='+data.sess+'"></script>');
					}.bind(this), function () {
						this.onClose();
					}.bind(this))
				}.bind(this))
	    		this.body.append(body);
			}
		}
		return sideBar;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/*!

	 handlebars v3.0.3

	Copyright (C) 2011-2014 by Yehuda Katz

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.

	@license
	*/
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define(factory);
		else if(typeof exports === 'object')
			exports["Handlebars"] = factory();
		else
			root["Handlebars"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};

	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {

	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;

	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};

	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;

	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}


	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;

	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;

	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";

	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;

		var _runtime = __webpack_require__(1);

		var _runtime2 = _interopRequireDefault(_runtime);

		// Compiler imports

		var _AST = __webpack_require__(2);

		var _AST2 = _interopRequireDefault(_AST);

		var _Parser$parse = __webpack_require__(3);

		var _Compiler$compile$precompile = __webpack_require__(4);

		var _JavaScriptCompiler = __webpack_require__(5);

		var _JavaScriptCompiler2 = _interopRequireDefault(_JavaScriptCompiler);

		var _Visitor = __webpack_require__(6);

		var _Visitor2 = _interopRequireDefault(_Visitor);

		var _noConflict = __webpack_require__(7);

		var _noConflict2 = _interopRequireDefault(_noConflict);

		var _create = _runtime2['default'].create;
		function create() {
		  var hb = _create();

		  hb.compile = function (input, options) {
		    return _Compiler$compile$precompile.compile(input, options, hb);
		  };
		  hb.precompile = function (input, options) {
		    return _Compiler$compile$precompile.precompile(input, options, hb);
		  };

		  hb.AST = _AST2['default'];
		  hb.Compiler = _Compiler$compile$precompile.Compiler;
		  hb.JavaScriptCompiler = _JavaScriptCompiler2['default'];
		  hb.Parser = _Parser$parse.parser;
		  hb.parse = _Parser$parse.parse;

		  return hb;
		}

		var inst = create();
		inst.create = create;

		_noConflict2['default'](inst);

		inst.Visitor = _Visitor2['default'];

		inst['default'] = inst;

		exports['default'] = inst;
		module.exports = exports['default'];

	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireWildcard = __webpack_require__(9)['default'];

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;

		var _import = __webpack_require__(10);

		var base = _interopRequireWildcard(_import);

		// Each of these augment the Handlebars object. No need to setup here.
		// (This is done to easily share code between commonjs and browse envs)

		var _SafeString = __webpack_require__(11);

		var _SafeString2 = _interopRequireDefault(_SafeString);

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var _import2 = __webpack_require__(13);

		var Utils = _interopRequireWildcard(_import2);

		var _import3 = __webpack_require__(14);

		var runtime = _interopRequireWildcard(_import3);

		var _noConflict = __webpack_require__(7);

		var _noConflict2 = _interopRequireDefault(_noConflict);

		// For compatibility and usage outside of module systems, make the Handlebars object a namespace
		function create() {
		  var hb = new base.HandlebarsEnvironment();

		  Utils.extend(hb, base);
		  hb.SafeString = _SafeString2['default'];
		  hb.Exception = _Exception2['default'];
		  hb.Utils = Utils;
		  hb.escapeExpression = Utils.escapeExpression;

		  hb.VM = runtime;
		  hb.template = function (spec) {
		    return runtime.template(spec, hb);
		  };

		  return hb;
		}

		var inst = create();
		inst.create = create;

		_noConflict2['default'](inst);

		inst['default'] = inst;

		exports['default'] = inst;
		module.exports = exports['default'];

	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;
		var AST = {
		  Program: function Program(statements, blockParams, strip, locInfo) {
		    this.loc = locInfo;
		    this.type = 'Program';
		    this.body = statements;

		    this.blockParams = blockParams;
		    this.strip = strip;
		  },

		  MustacheStatement: function MustacheStatement(path, params, hash, escaped, strip, locInfo) {
		    this.loc = locInfo;
		    this.type = 'MustacheStatement';

		    this.path = path;
		    this.params = params || [];
		    this.hash = hash;
		    this.escaped = escaped;

		    this.strip = strip;
		  },

		  BlockStatement: function BlockStatement(path, params, hash, program, inverse, openStrip, inverseStrip, closeStrip, locInfo) {
		    this.loc = locInfo;
		    this.type = 'BlockStatement';

		    this.path = path;
		    this.params = params || [];
		    this.hash = hash;
		    this.program = program;
		    this.inverse = inverse;

		    this.openStrip = openStrip;
		    this.inverseStrip = inverseStrip;
		    this.closeStrip = closeStrip;
		  },

		  PartialStatement: function PartialStatement(name, params, hash, strip, locInfo) {
		    this.loc = locInfo;
		    this.type = 'PartialStatement';

		    this.name = name;
		    this.params = params || [];
		    this.hash = hash;

		    this.indent = '';
		    this.strip = strip;
		  },

		  ContentStatement: function ContentStatement(string, locInfo) {
		    this.loc = locInfo;
		    this.type = 'ContentStatement';
		    this.original = this.value = string;
		  },

		  CommentStatement: function CommentStatement(comment, strip, locInfo) {
		    this.loc = locInfo;
		    this.type = 'CommentStatement';
		    this.value = comment;

		    this.strip = strip;
		  },

		  SubExpression: function SubExpression(path, params, hash, locInfo) {
		    this.loc = locInfo;

		    this.type = 'SubExpression';
		    this.path = path;
		    this.params = params || [];
		    this.hash = hash;
		  },

		  PathExpression: function PathExpression(data, depth, parts, original, locInfo) {
		    this.loc = locInfo;
		    this.type = 'PathExpression';

		    this.data = data;
		    this.original = original;
		    this.parts = parts;
		    this.depth = depth;
		  },

		  StringLiteral: function StringLiteral(string, locInfo) {
		    this.loc = locInfo;
		    this.type = 'StringLiteral';
		    this.original = this.value = string;
		  },

		  NumberLiteral: function NumberLiteral(number, locInfo) {
		    this.loc = locInfo;
		    this.type = 'NumberLiteral';
		    this.original = this.value = Number(number);
		  },

		  BooleanLiteral: function BooleanLiteral(bool, locInfo) {
		    this.loc = locInfo;
		    this.type = 'BooleanLiteral';
		    this.original = this.value = bool === 'true';
		  },

		  UndefinedLiteral: function UndefinedLiteral(locInfo) {
		    this.loc = locInfo;
		    this.type = 'UndefinedLiteral';
		    this.original = this.value = undefined;
		  },

		  NullLiteral: function NullLiteral(locInfo) {
		    this.loc = locInfo;
		    this.type = 'NullLiteral';
		    this.original = this.value = null;
		  },

		  Hash: function Hash(pairs, locInfo) {
		    this.loc = locInfo;
		    this.type = 'Hash';
		    this.pairs = pairs;
		  },
		  HashPair: function HashPair(key, value, locInfo) {
		    this.loc = locInfo;
		    this.type = 'HashPair';
		    this.key = key;
		    this.value = value;
		  },

		  // Public API used to evaluate derived attributes regarding AST nodes
		  helpers: {
		    // a mustache is definitely a helper if:
		    // * it is an eligible helper, and
		    // * it has at least one parameter or hash segment
		    helperExpression: function helperExpression(node) {
		      return !!(node.type === 'SubExpression' || node.params.length || node.hash);
		    },

		    scopedId: function scopedId(path) {
		      return /^\.|this\b/.test(path.original);
		    },

		    // an ID is simple if it only has one part, and that part is not
		    // `..` or `this`.
		    simpleId: function simpleId(path) {
		      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
		    }
		  }
		};

		// Must be exported as an object rather than the root of the module as the jison lexer
		// must modify the object to operate properly.
		exports['default'] = AST;
		module.exports = exports['default'];

	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		var _interopRequireWildcard = __webpack_require__(9)['default'];

		exports.__esModule = true;
		exports.parse = parse;

		var _parser = __webpack_require__(15);

		var _parser2 = _interopRequireDefault(_parser);

		var _AST = __webpack_require__(2);

		var _AST2 = _interopRequireDefault(_AST);

		var _WhitespaceControl = __webpack_require__(16);

		var _WhitespaceControl2 = _interopRequireDefault(_WhitespaceControl);

		var _import = __webpack_require__(17);

		var Helpers = _interopRequireWildcard(_import);

		var _extend = __webpack_require__(13);

		exports.parser = _parser2['default'];

		var yy = {};
		_extend.extend(yy, Helpers, _AST2['default']);

		function parse(input, options) {
		  // Just return if an already-compiled AST was passed in.
		  if (input.type === 'Program') {
		    return input;
		  }

		  _parser2['default'].yy = yy;

		  // Altering the shared object here, but this is ok as parser is a sync operation
		  yy.locInfo = function (locInfo) {
		    return new yy.SourceLocation(options && options.srcName, locInfo);
		  };

		  var strip = new _WhitespaceControl2['default']();
		  return strip.accept(_parser2['default'].parse(input));
		}

	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;
		exports.Compiler = Compiler;
		exports.precompile = precompile;
		exports.compile = compile;

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var _isArray$indexOf = __webpack_require__(13);

		var _AST = __webpack_require__(2);

		var _AST2 = _interopRequireDefault(_AST);

		var slice = [].slice;

		function Compiler() {}

		// the foundHelper register will disambiguate helper lookup from finding a
		// function in a context. This is necessary for mustache compatibility, which
		// requires that context functions in blocks are evaluated by blockHelperMissing,
		// and then proceed as if the resulting value was provided to blockHelperMissing.

		Compiler.prototype = {
		  compiler: Compiler,

		  equals: function equals(other) {
		    var len = this.opcodes.length;
		    if (other.opcodes.length !== len) {
		      return false;
		    }

		    for (var i = 0; i < len; i++) {
		      var opcode = this.opcodes[i],
		          otherOpcode = other.opcodes[i];
		      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {
		        return false;
		      }
		    }

		    // We know that length is the same between the two arrays because they are directly tied
		    // to the opcode behavior above.
		    len = this.children.length;
		    for (var i = 0; i < len; i++) {
		      if (!this.children[i].equals(other.children[i])) {
		        return false;
		      }
		    }

		    return true;
		  },

		  guid: 0,

		  compile: function compile(program, options) {
		    this.sourceNode = [];
		    this.opcodes = [];
		    this.children = [];
		    this.options = options;
		    this.stringParams = options.stringParams;
		    this.trackIds = options.trackIds;

		    options.blockParams = options.blockParams || [];

		    // These changes will propagate to the other compiler components
		    var knownHelpers = options.knownHelpers;
		    options.knownHelpers = {
		      helperMissing: true,
		      blockHelperMissing: true,
		      each: true,
		      'if': true,
		      unless: true,
		      'with': true,
		      log: true,
		      lookup: true
		    };
		    if (knownHelpers) {
		      for (var _name in knownHelpers) {
		        if (_name in knownHelpers) {
		          options.knownHelpers[_name] = knownHelpers[_name];
		        }
		      }
		    }

		    return this.accept(program);
		  },

		  compileProgram: function compileProgram(program) {
		    var childCompiler = new this.compiler(),
		        // eslint-disable-line new-cap
		    result = childCompiler.compile(program, this.options),
		        guid = this.guid++;

		    this.usePartial = this.usePartial || result.usePartial;

		    this.children[guid] = result;
		    this.useDepths = this.useDepths || result.useDepths;

		    return guid;
		  },

		  accept: function accept(node) {
		    this.sourceNode.unshift(node);
		    var ret = this[node.type](node);
		    this.sourceNode.shift();
		    return ret;
		  },

		  Program: function Program(program) {
		    this.options.blockParams.unshift(program.blockParams);

		    var body = program.body,
		        bodyLength = body.length;
		    for (var i = 0; i < bodyLength; i++) {
		      this.accept(body[i]);
		    }

		    this.options.blockParams.shift();

		    this.isSimple = bodyLength === 1;
		    this.blockParams = program.blockParams ? program.blockParams.length : 0;

		    return this;
		  },

		  BlockStatement: function BlockStatement(block) {
		    transformLiteralToPath(block);

		    var program = block.program,
		        inverse = block.inverse;

		    program = program && this.compileProgram(program);
		    inverse = inverse && this.compileProgram(inverse);

		    var type = this.classifySexpr(block);

		    if (type === 'helper') {
		      this.helperSexpr(block, program, inverse);
		    } else if (type === 'simple') {
		      this.simpleSexpr(block);

		      // now that the simple mustache is resolved, we need to
		      // evaluate it by executing `blockHelperMissing`
		      this.opcode('pushProgram', program);
		      this.opcode('pushProgram', inverse);
		      this.opcode('emptyHash');
		      this.opcode('blockValue', block.path.original);
		    } else {
		      this.ambiguousSexpr(block, program, inverse);

		      // now that the simple mustache is resolved, we need to
		      // evaluate it by executing `blockHelperMissing`
		      this.opcode('pushProgram', program);
		      this.opcode('pushProgram', inverse);
		      this.opcode('emptyHash');
		      this.opcode('ambiguousBlockValue');
		    }

		    this.opcode('append');
		  },

		  PartialStatement: function PartialStatement(partial) {
		    this.usePartial = true;

		    var params = partial.params;
		    if (params.length > 1) {
		      throw new _Exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);
		    } else if (!params.length) {
		      params.push({ type: 'PathExpression', parts: [], depth: 0 });
		    }

		    var partialName = partial.name.original,
		        isDynamic = partial.name.type === 'SubExpression';
		    if (isDynamic) {
		      this.accept(partial.name);
		    }

		    this.setupFullMustacheParams(partial, undefined, undefined, true);

		    var indent = partial.indent || '';
		    if (this.options.preventIndent && indent) {
		      this.opcode('appendContent', indent);
		      indent = '';
		    }

		    this.opcode('invokePartial', isDynamic, partialName, indent);
		    this.opcode('append');
		  },

		  MustacheStatement: function MustacheStatement(mustache) {
		    this.SubExpression(mustache); // eslint-disable-line new-cap

		    if (mustache.escaped && !this.options.noEscape) {
		      this.opcode('appendEscaped');
		    } else {
		      this.opcode('append');
		    }
		  },

		  ContentStatement: function ContentStatement(content) {
		    if (content.value) {
		      this.opcode('appendContent', content.value);
		    }
		  },

		  CommentStatement: function CommentStatement() {},

		  SubExpression: function SubExpression(sexpr) {
		    transformLiteralToPath(sexpr);
		    var type = this.classifySexpr(sexpr);

		    if (type === 'simple') {
		      this.simpleSexpr(sexpr);
		    } else if (type === 'helper') {
		      this.helperSexpr(sexpr);
		    } else {
		      this.ambiguousSexpr(sexpr);
		    }
		  },
		  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
		    var path = sexpr.path,
		        name = path.parts[0],
		        isBlock = program != null || inverse != null;

		    this.opcode('getContext', path.depth);

		    this.opcode('pushProgram', program);
		    this.opcode('pushProgram', inverse);

		    this.accept(path);

		    this.opcode('invokeAmbiguous', name, isBlock);
		  },

		  simpleSexpr: function simpleSexpr(sexpr) {
		    this.accept(sexpr.path);
		    this.opcode('resolvePossibleLambda');
		  },

		  helperSexpr: function helperSexpr(sexpr, program, inverse) {
		    var params = this.setupFullMustacheParams(sexpr, program, inverse),
		        path = sexpr.path,
		        name = path.parts[0];

		    if (this.options.knownHelpers[name]) {
		      this.opcode('invokeKnownHelper', params.length, name);
		    } else if (this.options.knownHelpersOnly) {
		      throw new _Exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);
		    } else {
		      path.falsy = true;

		      this.accept(path);
		      this.opcode('invokeHelper', params.length, path.original, _AST2['default'].helpers.simpleId(path));
		    }
		  },

		  PathExpression: function PathExpression(path) {
		    this.addDepth(path.depth);
		    this.opcode('getContext', path.depth);

		    var name = path.parts[0],
		        scoped = _AST2['default'].helpers.scopedId(path),
		        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);

		    if (blockParamId) {
		      this.opcode('lookupBlockParam', blockParamId, path.parts);
		    } else if (!name) {
		      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
		      this.opcode('pushContext');
		    } else if (path.data) {
		      this.options.data = true;
		      this.opcode('lookupData', path.depth, path.parts);
		    } else {
		      this.opcode('lookupOnContext', path.parts, path.falsy, scoped);
		    }
		  },

		  StringLiteral: function StringLiteral(string) {
		    this.opcode('pushString', string.value);
		  },

		  NumberLiteral: function NumberLiteral(number) {
		    this.opcode('pushLiteral', number.value);
		  },

		  BooleanLiteral: function BooleanLiteral(bool) {
		    this.opcode('pushLiteral', bool.value);
		  },

		  UndefinedLiteral: function UndefinedLiteral() {
		    this.opcode('pushLiteral', 'undefined');
		  },

		  NullLiteral: function NullLiteral() {
		    this.opcode('pushLiteral', 'null');
		  },

		  Hash: function Hash(hash) {
		    var pairs = hash.pairs,
		        i = 0,
		        l = pairs.length;

		    this.opcode('pushHash');

		    for (; i < l; i++) {
		      this.pushParam(pairs[i].value);
		    }
		    while (i--) {
		      this.opcode('assignToHash', pairs[i].key);
		    }
		    this.opcode('popHash');
		  },

		  // HELPERS
		  opcode: function opcode(name) {
		    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });
		  },

		  addDepth: function addDepth(depth) {
		    if (!depth) {
		      return;
		    }

		    this.useDepths = true;
		  },

		  classifySexpr: function classifySexpr(sexpr) {
		    var isSimple = _AST2['default'].helpers.simpleId(sexpr.path);

		    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

		    // a mustache is an eligible helper if:
		    // * its id is simple (a single part, not `this` or `..`)
		    var isHelper = !isBlockParam && _AST2['default'].helpers.helperExpression(sexpr);

		    // if a mustache is an eligible helper but not a definite
		    // helper, it is ambiguous, and will be resolved in a later
		    // pass or at runtime.
		    var isEligible = !isBlockParam && (isHelper || isSimple);

		    // if ambiguous, we can possibly resolve the ambiguity now
		    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
		    if (isEligible && !isHelper) {
		      var _name2 = sexpr.path.parts[0],
		          options = this.options;

		      if (options.knownHelpers[_name2]) {
		        isHelper = true;
		      } else if (options.knownHelpersOnly) {
		        isEligible = false;
		      }
		    }

		    if (isHelper) {
		      return 'helper';
		    } else if (isEligible) {
		      return 'ambiguous';
		    } else {
		      return 'simple';
		    }
		  },

		  pushParams: function pushParams(params) {
		    for (var i = 0, l = params.length; i < l; i++) {
		      this.pushParam(params[i]);
		    }
		  },

		  pushParam: function pushParam(val) {
		    var value = val.value != null ? val.value : val.original || '';

		    if (this.stringParams) {
		      if (value.replace) {
		        value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
		      }

		      if (val.depth) {
		        this.addDepth(val.depth);
		      }
		      this.opcode('getContext', val.depth || 0);
		      this.opcode('pushStringParam', value, val.type);

		      if (val.type === 'SubExpression') {
		        // SubExpressions get evaluated and passed in
		        // in string params mode.
		        this.accept(val);
		      }
		    } else {
		      if (this.trackIds) {
		        var blockParamIndex = undefined;
		        if (val.parts && !_AST2['default'].helpers.scopedId(val) && !val.depth) {
		          blockParamIndex = this.blockParamIndex(val.parts[0]);
		        }
		        if (blockParamIndex) {
		          var blockParamChild = val.parts.slice(1).join('.');
		          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);
		        } else {
		          value = val.original || value;
		          if (value.replace) {
		            value = value.replace(/^\.\//g, '').replace(/^\.$/g, '');
		          }

		          this.opcode('pushId', val.type, value);
		        }
		      }
		      this.accept(val);
		    }
		  },

		  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {
		    var params = sexpr.params;
		    this.pushParams(params);

		    this.opcode('pushProgram', program);
		    this.opcode('pushProgram', inverse);

		    if (sexpr.hash) {
		      this.accept(sexpr.hash);
		    } else {
		      this.opcode('emptyHash', omitEmpty);
		    }

		    return params;
		  },

		  blockParamIndex: function blockParamIndex(name) {
		    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
		      var blockParams = this.options.blockParams[depth],
		          param = blockParams && _isArray$indexOf.indexOf(blockParams, name);
		      if (blockParams && param >= 0) {
		        return [depth, param];
		      }
		    }
		  }
		};

		function precompile(input, options, env) {
		  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
		    throw new _Exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);
		  }

		  options = options || {};
		  if (!('data' in options)) {
		    options.data = true;
		  }
		  if (options.compat) {
		    options.useDepths = true;
		  }

		  var ast = env.parse(input, options),
		      environment = new env.Compiler().compile(ast, options);
		  return new env.JavaScriptCompiler().compile(environment, options);
		}

		function compile(input, _x, env) {
		  var options = arguments[1] === undefined ? {} : arguments[1];

		  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
		    throw new _Exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);
		  }

		  if (!('data' in options)) {
		    options.data = true;
		  }
		  if (options.compat) {
		    options.useDepths = true;
		  }

		  var compiled = undefined;

		  function compileInput() {
		    var ast = env.parse(input, options),
		        environment = new env.Compiler().compile(ast, options),
		        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);
		    return env.template(templateSpec);
		  }

		  // Template is only compiled on first use and cached after that point.
		  function ret(context, execOptions) {
		    if (!compiled) {
		      compiled = compileInput();
		    }
		    return compiled.call(this, context, execOptions);
		  }
		  ret._setup = function (setupOptions) {
		    if (!compiled) {
		      compiled = compileInput();
		    }
		    return compiled._setup(setupOptions);
		  };
		  ret._child = function (i, data, blockParams, depths) {
		    if (!compiled) {
		      compiled = compileInput();
		    }
		    return compiled._child(i, data, blockParams, depths);
		  };
		  return ret;
		}

		function argEquals(a, b) {
		  if (a === b) {
		    return true;
		  }

		  if (_isArray$indexOf.isArray(a) && _isArray$indexOf.isArray(b) && a.length === b.length) {
		    for (var i = 0; i < a.length; i++) {
		      if (!argEquals(a[i], b[i])) {
		        return false;
		      }
		    }
		    return true;
		  }
		}

		function transformLiteralToPath(sexpr) {
		  if (!sexpr.path.parts) {
		    var literal = sexpr.path;
		    // Casting to string here to make false and 0 literal values play nicely with the rest
		    // of the system.
		    sexpr.path = new _AST2['default'].PathExpression(false, 0, [literal.original + ''], literal.original + '', literal.loc);
		  }
		}

	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;

		var _COMPILER_REVISION$REVISION_CHANGES = __webpack_require__(10);

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var _isArray = __webpack_require__(13);

		var _CodeGen = __webpack_require__(18);

		var _CodeGen2 = _interopRequireDefault(_CodeGen);

		function Literal(value) {
		  this.value = value;
		}

		function JavaScriptCompiler() {}

		JavaScriptCompiler.prototype = {
		  // PUBLIC API: You can override these methods in a subclass to provide
		  // alternative compiled forms for name lookup and buffering semantics
		  nameLookup: function nameLookup(parent, name /* , type*/) {
		    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
		      return [parent, '.', name];
		    } else {
		      return [parent, '[\'', name, '\']'];
		    }
		  },
		  depthedLookup: function depthedLookup(name) {
		    return [this.aliasable('this.lookup'), '(depths, "', name, '")'];
		  },

		  compilerInfo: function compilerInfo() {
		    var revision = _COMPILER_REVISION$REVISION_CHANGES.COMPILER_REVISION,
		        versions = _COMPILER_REVISION$REVISION_CHANGES.REVISION_CHANGES[revision];
		    return [revision, versions];
		  },

		  appendToBuffer: function appendToBuffer(source, location, explicit) {
		    // Force a source as this simplifies the merge logic.
		    if (!_isArray.isArray(source)) {
		      source = [source];
		    }
		    source = this.source.wrap(source, location);

		    if (this.environment.isSimple) {
		      return ['return ', source, ';'];
		    } else if (explicit) {
		      // This is a case where the buffer operation occurs as a child of another
		      // construct, generally braces. We have to explicitly output these buffer
		      // operations to ensure that the emitted code goes in the correct location.
		      return ['buffer += ', source, ';'];
		    } else {
		      source.appendToBuffer = true;
		      return source;
		    }
		  },

		  initializeBuffer: function initializeBuffer() {
		    return this.quotedString('');
		  },
		  // END PUBLIC API

		  compile: function compile(environment, options, context, asObject) {
		    this.environment = environment;
		    this.options = options;
		    this.stringParams = this.options.stringParams;
		    this.trackIds = this.options.trackIds;
		    this.precompile = !asObject;

		    this.name = this.environment.name;
		    this.isChild = !!context;
		    this.context = context || {
		      programs: [],
		      environments: []
		    };

		    this.preamble();

		    this.stackSlot = 0;
		    this.stackVars = [];
		    this.aliases = {};
		    this.registers = { list: [] };
		    this.hashes = [];
		    this.compileStack = [];
		    this.inlineStack = [];
		    this.blockParams = [];

		    this.compileChildren(environment, options);

		    this.useDepths = this.useDepths || environment.useDepths || this.options.compat;
		    this.useBlockParams = this.useBlockParams || environment.useBlockParams;

		    var opcodes = environment.opcodes,
		        opcode = undefined,
		        firstLoc = undefined,
		        i = undefined,
		        l = undefined;

		    for (i = 0, l = opcodes.length; i < l; i++) {
		      opcode = opcodes[i];

		      this.source.currentLocation = opcode.loc;
		      firstLoc = firstLoc || opcode.loc;
		      this[opcode.opcode].apply(this, opcode.args);
		    }

		    // Flush any trailing content that might be pending.
		    this.source.currentLocation = firstLoc;
		    this.pushSource('');

		    /* istanbul ignore next */
		    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
		      throw new _Exception2['default']('Compile completed with content left on stack');
		    }

		    var fn = this.createFunctionContext(asObject);
		    if (!this.isChild) {
		      var ret = {
		        compiler: this.compilerInfo(),
		        main: fn
		      };
		      var programs = this.context.programs;
		      for (i = 0, l = programs.length; i < l; i++) {
		        if (programs[i]) {
		          ret[i] = programs[i];
		        }
		      }

		      if (this.environment.usePartial) {
		        ret.usePartial = true;
		      }
		      if (this.options.data) {
		        ret.useData = true;
		      }
		      if (this.useDepths) {
		        ret.useDepths = true;
		      }
		      if (this.useBlockParams) {
		        ret.useBlockParams = true;
		      }
		      if (this.options.compat) {
		        ret.compat = true;
		      }

		      if (!asObject) {
		        ret.compiler = JSON.stringify(ret.compiler);

		        this.source.currentLocation = { start: { line: 1, column: 0 } };
		        ret = this.objectLiteral(ret);

		        if (options.srcName) {
		          ret = ret.toStringWithSourceMap({ file: options.destName });
		          ret.map = ret.map && ret.map.toString();
		        } else {
		          ret = ret.toString();
		        }
		      } else {
		        ret.compilerOptions = this.options;
		      }

		      return ret;
		    } else {
		      return fn;
		    }
		  },

		  preamble: function preamble() {
		    // track the last context pushed into place to allow skipping the
		    // getContext opcode when it would be a noop
		    this.lastContext = 0;
		    this.source = new _CodeGen2['default'](this.options.srcName);
		  },

		  createFunctionContext: function createFunctionContext(asObject) {
		    var varDeclarations = '';

		    var locals = this.stackVars.concat(this.registers.list);
		    if (locals.length > 0) {
		      varDeclarations += ', ' + locals.join(', ');
		    }

		    // Generate minimizer alias mappings
		    //
		    // When using true SourceNodes, this will update all references to the given alias
		    // as the source nodes are reused in situ. For the non-source node compilation mode,
		    // aliases will not be used, but this case is already being run on the client and
		    // we aren't concern about minimizing the template size.
		    var aliasCount = 0;
		    for (var alias in this.aliases) {
		      // eslint-disable-line guard-for-in
		      var node = this.aliases[alias];

		      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {
		        varDeclarations += ', alias' + ++aliasCount + '=' + alias;
		        node.children[0] = 'alias' + aliasCount;
		      }
		    }

		    var params = ['depth0', 'helpers', 'partials', 'data'];

		    if (this.useBlockParams || this.useDepths) {
		      params.push('blockParams');
		    }
		    if (this.useDepths) {
		      params.push('depths');
		    }

		    // Perform a second pass over the output to merge content when possible
		    var source = this.mergeSource(varDeclarations);

		    if (asObject) {
		      params.push(source);

		      return Function.apply(this, params);
		    } else {
		      return this.source.wrap(['function(', params.join(','), ') {\n  ', source, '}']);
		    }
		  },
		  mergeSource: function mergeSource(varDeclarations) {
		    var isSimple = this.environment.isSimple,
		        appendOnly = !this.forceBuffer,
		        appendFirst = undefined,
		        sourceSeen = undefined,
		        bufferStart = undefined,
		        bufferEnd = undefined;
		    this.source.each(function (line) {
		      if (line.appendToBuffer) {
		        if (bufferStart) {
		          line.prepend('  + ');
		        } else {
		          bufferStart = line;
		        }
		        bufferEnd = line;
		      } else {
		        if (bufferStart) {
		          if (!sourceSeen) {
		            appendFirst = true;
		          } else {
		            bufferStart.prepend('buffer += ');
		          }
		          bufferEnd.add(';');
		          bufferStart = bufferEnd = undefined;
		        }

		        sourceSeen = true;
		        if (!isSimple) {
		          appendOnly = false;
		        }
		      }
		    });

		    if (appendOnly) {
		      if (bufferStart) {
		        bufferStart.prepend('return ');
		        bufferEnd.add(';');
		      } else if (!sourceSeen) {
		        this.source.push('return "";');
		      }
		    } else {
		      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

		      if (bufferStart) {
		        bufferStart.prepend('return buffer + ');
		        bufferEnd.add(';');
		      } else {
		        this.source.push('return buffer;');
		      }
		    }

		    if (varDeclarations) {
		      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\n'));
		    }

		    return this.source.merge();
		  },

		  // [blockValue]
		  //
		  // On stack, before: hash, inverse, program, value
		  // On stack, after: return value of blockHelperMissing
		  //
		  // The purpose of this opcode is to take a block of the form
		  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
		  // replace it on the stack with the result of properly
		  // invoking blockHelperMissing.
		  blockValue: function blockValue(name) {
		    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
		        params = [this.contextName(0)];
		    this.setupHelperArgs(name, 0, params);

		    var blockName = this.popStack();
		    params.splice(1, 0, blockName);

		    this.push(this.source.functionCall(blockHelperMissing, 'call', params));
		  },

		  // [ambiguousBlockValue]
		  //
		  // On stack, before: hash, inverse, program, value
		  // Compiler value, before: lastHelper=value of last found helper, if any
		  // On stack, after, if no lastHelper: same as [blockValue]
		  // On stack, after, if lastHelper: value
		  ambiguousBlockValue: function ambiguousBlockValue() {
		    // We're being a bit cheeky and reusing the options value from the prior exec
		    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
		        params = [this.contextName(0)];
		    this.setupHelperArgs('', 0, params, true);

		    this.flushInline();

		    var current = this.topStack();
		    params.splice(1, 0, current);

		    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);
		  },

		  // [appendContent]
		  //
		  // On stack, before: ...
		  // On stack, after: ...
		  //
		  // Appends the string value of `content` to the current buffer
		  appendContent: function appendContent(content) {
		    if (this.pendingContent) {
		      content = this.pendingContent + content;
		    } else {
		      this.pendingLocation = this.source.currentLocation;
		    }

		    this.pendingContent = content;
		  },

		  // [append]
		  //
		  // On stack, before: value, ...
		  // On stack, after: ...
		  //
		  // Coerces `value` to a String and appends it to the current buffer.
		  //
		  // If `value` is truthy, or 0, it is coerced into a string and appended
		  // Otherwise, the empty string is appended
		  append: function append() {
		    if (this.isInline()) {
		      this.replaceStack(function (current) {
		        return [' != null ? ', current, ' : ""'];
		      });

		      this.pushSource(this.appendToBuffer(this.popStack()));
		    } else {
		      var local = this.popStack();
		      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);
		      if (this.environment.isSimple) {
		        this.pushSource(['else { ', this.appendToBuffer('\'\'', undefined, true), ' }']);
		      }
		    }
		  },

		  // [appendEscaped]
		  //
		  // On stack, before: value, ...
		  // On stack, after: ...
		  //
		  // Escape `value` and append it to the buffer
		  appendEscaped: function appendEscaped() {
		    this.pushSource(this.appendToBuffer([this.aliasable('this.escapeExpression'), '(', this.popStack(), ')']));
		  },

		  // [getContext]
		  //
		  // On stack, before: ...
		  // On stack, after: ...
		  // Compiler value, after: lastContext=depth
		  //
		  // Set the value of the `lastContext` compiler value to the depth
		  getContext: function getContext(depth) {
		    this.lastContext = depth;
		  },

		  // [pushContext]
		  //
		  // On stack, before: ...
		  // On stack, after: currentContext, ...
		  //
		  // Pushes the value of the current context onto the stack.
		  pushContext: function pushContext() {
		    this.pushStackLiteral(this.contextName(this.lastContext));
		  },

		  // [lookupOnContext]
		  //
		  // On stack, before: ...
		  // On stack, after: currentContext[name], ...
		  //
		  // Looks up the value of `name` on the current context and pushes
		  // it onto the stack.
		  lookupOnContext: function lookupOnContext(parts, falsy, scoped) {
		    var i = 0;

		    if (!scoped && this.options.compat && !this.lastContext) {
		      // The depthed query is expected to handle the undefined logic for the root level that
		      // is implemented below, so we evaluate that directly in compat mode
		      this.push(this.depthedLookup(parts[i++]));
		    } else {
		      this.pushContext();
		    }

		    this.resolvePath('context', parts, i, falsy);
		  },

		  // [lookupBlockParam]
		  //
		  // On stack, before: ...
		  // On stack, after: blockParam[name], ...
		  //
		  // Looks up the value of `parts` on the given block param and pushes
		  // it onto the stack.
		  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
		    this.useBlockParams = true;

		    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);
		    this.resolvePath('context', parts, 1);
		  },

		  // [lookupData]
		  //
		  // On stack, before: ...
		  // On stack, after: data, ...
		  //
		  // Push the data lookup operator
		  lookupData: function lookupData(depth, parts) {
		    if (!depth) {
		      this.pushStackLiteral('data');
		    } else {
		      this.pushStackLiteral('this.data(data, ' + depth + ')');
		    }

		    this.resolvePath('data', parts, 0, true);
		  },

		  resolvePath: function resolvePath(type, parts, i, falsy) {
		    var _this = this;

		    if (this.options.strict || this.options.assumeObjects) {
		      this.push(strictLookup(this.options.strict, this, parts, type));
		      return;
		    }

		    var len = parts.length;
		    for (; i < len; i++) {
		      /*eslint-disable no-loop-func */
		      this.replaceStack(function (current) {
		        var lookup = _this.nameLookup(current, parts[i], type);
		        // We want to ensure that zero and false are handled properly if the context (falsy flag)
		        // needs to have the special handling for these values.
		        if (!falsy) {
		          return [' != null ? ', lookup, ' : ', current];
		        } else {
		          // Otherwise we can use generic falsy handling
		          return [' && ', lookup];
		        }
		      });
		      /*eslint-enable no-loop-func */
		    }
		  },

		  // [resolvePossibleLambda]
		  //
		  // On stack, before: value, ...
		  // On stack, after: resolved value, ...
		  //
		  // If the `value` is a lambda, replace it on the stack by
		  // the return value of the lambda
		  resolvePossibleLambda: function resolvePossibleLambda() {
		    this.push([this.aliasable('this.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);
		  },

		  // [pushStringParam]
		  //
		  // On stack, before: ...
		  // On stack, after: string, currentContext, ...
		  //
		  // This opcode is designed for use in string mode, which
		  // provides the string value of a parameter along with its
		  // depth rather than resolving it immediately.
		  pushStringParam: function pushStringParam(string, type) {
		    this.pushContext();
		    this.pushString(type);

		    // If it's a subexpression, the string result
		    // will be pushed after this opcode.
		    if (type !== 'SubExpression') {
		      if (typeof string === 'string') {
		        this.pushString(string);
		      } else {
		        this.pushStackLiteral(string);
		      }
		    }
		  },

		  emptyHash: function emptyHash(omitEmpty) {
		    if (this.trackIds) {
		      this.push('{}'); // hashIds
		    }
		    if (this.stringParams) {
		      this.push('{}'); // hashContexts
		      this.push('{}'); // hashTypes
		    }
		    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
		  },
		  pushHash: function pushHash() {
		    if (this.hash) {
		      this.hashes.push(this.hash);
		    }
		    this.hash = { values: [], types: [], contexts: [], ids: [] };
		  },
		  popHash: function popHash() {
		    var hash = this.hash;
		    this.hash = this.hashes.pop();

		    if (this.trackIds) {
		      this.push(this.objectLiteral(hash.ids));
		    }
		    if (this.stringParams) {
		      this.push(this.objectLiteral(hash.contexts));
		      this.push(this.objectLiteral(hash.types));
		    }

		    this.push(this.objectLiteral(hash.values));
		  },

		  // [pushString]
		  //
		  // On stack, before: ...
		  // On stack, after: quotedString(string), ...
		  //
		  // Push a quoted version of `string` onto the stack
		  pushString: function pushString(string) {
		    this.pushStackLiteral(this.quotedString(string));
		  },

		  // [pushLiteral]
		  //
		  // On stack, before: ...
		  // On stack, after: value, ...
		  //
		  // Pushes a value onto the stack. This operation prevents
		  // the compiler from creating a temporary variable to hold
		  // it.
		  pushLiteral: function pushLiteral(value) {
		    this.pushStackLiteral(value);
		  },

		  // [pushProgram]
		  //
		  // On stack, before: ...
		  // On stack, after: program(guid), ...
		  //
		  // Push a program expression onto the stack. This takes
		  // a compile-time guid and converts it into a runtime-accessible
		  // expression.
		  pushProgram: function pushProgram(guid) {
		    if (guid != null) {
		      this.pushStackLiteral(this.programExpression(guid));
		    } else {
		      this.pushStackLiteral(null);
		    }
		  },

		  // [invokeHelper]
		  //
		  // On stack, before: hash, inverse, program, params..., ...
		  // On stack, after: result of helper invocation
		  //
		  // Pops off the helper's parameters, invokes the helper,
		  // and pushes the helper's return value onto the stack.
		  //
		  // If the helper is not found, `helperMissing` is called.
		  invokeHelper: function invokeHelper(paramSize, name, isSimple) {
		    var nonHelper = this.popStack(),
		        helper = this.setupHelper(paramSize, name),
		        simple = isSimple ? [helper.name, ' || '] : '';

		    var lookup = ['('].concat(simple, nonHelper);
		    if (!this.options.strict) {
		      lookup.push(' || ', this.aliasable('helpers.helperMissing'));
		    }
		    lookup.push(')');

		    this.push(this.source.functionCall(lookup, 'call', helper.callParams));
		  },

		  // [invokeKnownHelper]
		  //
		  // On stack, before: hash, inverse, program, params..., ...
		  // On stack, after: result of helper invocation
		  //
		  // This operation is used when the helper is known to exist,
		  // so a `helperMissing` fallback is not required.
		  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
		    var helper = this.setupHelper(paramSize, name);
		    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));
		  },

		  // [invokeAmbiguous]
		  //
		  // On stack, before: hash, inverse, program, params..., ...
		  // On stack, after: result of disambiguation
		  //
		  // This operation is used when an expression like `{{foo}}`
		  // is provided, but we don't know at compile-time whether it
		  // is a helper or a path.
		  //
		  // This operation emits more code than the other options,
		  // and can be avoided by passing the `knownHelpers` and
		  // `knownHelpersOnly` flags at compile-time.
		  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
		    this.useRegister('helper');

		    var nonHelper = this.popStack();

		    this.emptyHash();
		    var helper = this.setupHelper(0, name, helperCall);

		    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');

		    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];
		    if (!this.options.strict) {
		      lookup[0] = '(helper = ';
		      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));
		    }

		    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('"function"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);
		  },

		  // [invokePartial]
		  //
		  // On stack, before: context, ...
		  // On stack after: result of partial invocation
		  //
		  // This operation pops off a context, invokes a partial with that context,
		  // and pushes the result of the invocation back.
		  invokePartial: function invokePartial(isDynamic, name, indent) {
		    var params = [],
		        options = this.setupParams(name, 1, params, false);

		    if (isDynamic) {
		      name = this.popStack();
		      delete options.name;
		    }

		    if (indent) {
		      options.indent = JSON.stringify(indent);
		    }
		    options.helpers = 'helpers';
		    options.partials = 'partials';

		    if (!isDynamic) {
		      params.unshift(this.nameLookup('partials', name, 'partial'));
		    } else {
		      params.unshift(name);
		    }

		    if (this.options.compat) {
		      options.depths = 'depths';
		    }
		    options = this.objectLiteral(options);
		    params.push(options);

		    this.push(this.source.functionCall('this.invokePartial', '', params));
		  },

		  // [assignToHash]
		  //
		  // On stack, before: value, ..., hash, ...
		  // On stack, after: ..., hash, ...
		  //
		  // Pops a value off the stack and assigns it to the current hash
		  assignToHash: function assignToHash(key) {
		    var value = this.popStack(),
		        context = undefined,
		        type = undefined,
		        id = undefined;

		    if (this.trackIds) {
		      id = this.popStack();
		    }
		    if (this.stringParams) {
		      type = this.popStack();
		      context = this.popStack();
		    }

		    var hash = this.hash;
		    if (context) {
		      hash.contexts[key] = context;
		    }
		    if (type) {
		      hash.types[key] = type;
		    }
		    if (id) {
		      hash.ids[key] = id;
		    }
		    hash.values[key] = value;
		  },

		  pushId: function pushId(type, name, child) {
		    if (type === 'BlockParam') {
		      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));
		    } else if (type === 'PathExpression') {
		      this.pushString(name);
		    } else if (type === 'SubExpression') {
		      this.pushStackLiteral('true');
		    } else {
		      this.pushStackLiteral('null');
		    }
		  },

		  // HELPERS

		  compiler: JavaScriptCompiler,

		  compileChildren: function compileChildren(environment, options) {
		    var children = environment.children,
		        child = undefined,
		        compiler = undefined;

		    for (var i = 0, l = children.length; i < l; i++) {
		      child = children[i];
		      compiler = new this.compiler(); // eslint-disable-line new-cap

		      var index = this.matchExistingProgram(child);

		      if (index == null) {
		        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
		        index = this.context.programs.length;
		        child.index = index;
		        child.name = 'program' + index;
		        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);
		        this.context.environments[index] = child;

		        this.useDepths = this.useDepths || compiler.useDepths;
		        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;
		      } else {
		        child.index = index;
		        child.name = 'program' + index;

		        this.useDepths = this.useDepths || child.useDepths;
		        this.useBlockParams = this.useBlockParams || child.useBlockParams;
		      }
		    }
		  },
		  matchExistingProgram: function matchExistingProgram(child) {
		    for (var i = 0, len = this.context.environments.length; i < len; i++) {
		      var environment = this.context.environments[i];
		      if (environment && environment.equals(child)) {
		        return i;
		      }
		    }
		  },

		  programExpression: function programExpression(guid) {
		    var child = this.environment.children[guid],
		        programParams = [child.index, 'data', child.blockParams];

		    if (this.useBlockParams || this.useDepths) {
		      programParams.push('blockParams');
		    }
		    if (this.useDepths) {
		      programParams.push('depths');
		    }

		    return 'this.program(' + programParams.join(', ') + ')';
		  },

		  useRegister: function useRegister(name) {
		    if (!this.registers[name]) {
		      this.registers[name] = true;
		      this.registers.list.push(name);
		    }
		  },

		  push: function push(expr) {
		    if (!(expr instanceof Literal)) {
		      expr = this.source.wrap(expr);
		    }

		    this.inlineStack.push(expr);
		    return expr;
		  },

		  pushStackLiteral: function pushStackLiteral(item) {
		    this.push(new Literal(item));
		  },

		  pushSource: function pushSource(source) {
		    if (this.pendingContent) {
		      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
		      this.pendingContent = undefined;
		    }

		    if (source) {
		      this.source.push(source);
		    }
		  },

		  replaceStack: function replaceStack(callback) {
		    var prefix = ['('],
		        stack = undefined,
		        createdStack = undefined,
		        usedLiteral = undefined;

		    /* istanbul ignore next */
		    if (!this.isInline()) {
		      throw new _Exception2['default']('replaceStack on non-inline');
		    }

		    // We want to merge the inline statement into the replacement statement via ','
		    var top = this.popStack(true);

		    if (top instanceof Literal) {
		      // Literals do not need to be inlined
		      stack = [top.value];
		      prefix = ['(', stack];
		      usedLiteral = true;
		    } else {
		      // Get or create the current stack name for use by the inline
		      createdStack = true;
		      var _name = this.incrStack();

		      prefix = ['((', this.push(_name), ' = ', top, ')'];
		      stack = this.topStack();
		    }

		    var item = callback.call(this, stack);

		    if (!usedLiteral) {
		      this.popStack();
		    }
		    if (createdStack) {
		      this.stackSlot--;
		    }
		    this.push(prefix.concat(item, ')'));
		  },

		  incrStack: function incrStack() {
		    this.stackSlot++;
		    if (this.stackSlot > this.stackVars.length) {
		      this.stackVars.push('stack' + this.stackSlot);
		    }
		    return this.topStackName();
		  },
		  topStackName: function topStackName() {
		    return 'stack' + this.stackSlot;
		  },
		  flushInline: function flushInline() {
		    var inlineStack = this.inlineStack;
		    this.inlineStack = [];
		    for (var i = 0, len = inlineStack.length; i < len; i++) {
		      var entry = inlineStack[i];
		      /* istanbul ignore if */
		      if (entry instanceof Literal) {
		        this.compileStack.push(entry);
		      } else {
		        var stack = this.incrStack();
		        this.pushSource([stack, ' = ', entry, ';']);
		        this.compileStack.push(stack);
		      }
		    }
		  },
		  isInline: function isInline() {
		    return this.inlineStack.length;
		  },

		  popStack: function popStack(wrapped) {
		    var inline = this.isInline(),
		        item = (inline ? this.inlineStack : this.compileStack).pop();

		    if (!wrapped && item instanceof Literal) {
		      return item.value;
		    } else {
		      if (!inline) {
		        /* istanbul ignore next */
		        if (!this.stackSlot) {
		          throw new _Exception2['default']('Invalid stack pop');
		        }
		        this.stackSlot--;
		      }
		      return item;
		    }
		  },

		  topStack: function topStack() {
		    var stack = this.isInline() ? this.inlineStack : this.compileStack,
		        item = stack[stack.length - 1];

		    /* istanbul ignore if */
		    if (item instanceof Literal) {
		      return item.value;
		    } else {
		      return item;
		    }
		  },

		  contextName: function contextName(context) {
		    if (this.useDepths && context) {
		      return 'depths[' + context + ']';
		    } else {
		      return 'depth' + context;
		    }
		  },

		  quotedString: function quotedString(str) {
		    return this.source.quotedString(str);
		  },

		  objectLiteral: function objectLiteral(obj) {
		    return this.source.objectLiteral(obj);
		  },

		  aliasable: function aliasable(name) {
		    var ret = this.aliases[name];
		    if (ret) {
		      ret.referenceCount++;
		      return ret;
		    }

		    ret = this.aliases[name] = this.source.wrap(name);
		    ret.aliasable = true;
		    ret.referenceCount = 1;

		    return ret;
		  },

		  setupHelper: function setupHelper(paramSize, name, blockHelper) {
		    var params = [],
		        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);
		    var foundHelper = this.nameLookup('helpers', name, 'helper');

		    return {
		      params: params,
		      paramsInit: paramsInit,
		      name: foundHelper,
		      callParams: [this.contextName(0)].concat(params)
		    };
		  },

		  setupParams: function setupParams(helper, paramSize, params) {
		    var options = {},
		        contexts = [],
		        types = [],
		        ids = [],
		        param = undefined;

		    options.name = this.quotedString(helper);
		    options.hash = this.popStack();

		    if (this.trackIds) {
		      options.hashIds = this.popStack();
		    }
		    if (this.stringParams) {
		      options.hashTypes = this.popStack();
		      options.hashContexts = this.popStack();
		    }

		    var inverse = this.popStack(),
		        program = this.popStack();

		    // Avoid setting fn and inverse if neither are set. This allows
		    // helpers to do a check for `if (options.fn)`
		    if (program || inverse) {
		      options.fn = program || 'this.noop';
		      options.inverse = inverse || 'this.noop';
		    }

		    // The parameters go on to the stack in order (making sure that they are evaluated in order)
		    // so we need to pop them off the stack in reverse order
		    var i = paramSize;
		    while (i--) {
		      param = this.popStack();
		      params[i] = param;

		      if (this.trackIds) {
		        ids[i] = this.popStack();
		      }
		      if (this.stringParams) {
		        types[i] = this.popStack();
		        contexts[i] = this.popStack();
		      }
		    }

		    if (this.trackIds) {
		      options.ids = this.source.generateArray(ids);
		    }
		    if (this.stringParams) {
		      options.types = this.source.generateArray(types);
		      options.contexts = this.source.generateArray(contexts);
		    }

		    if (this.options.data) {
		      options.data = 'data';
		    }
		    if (this.useBlockParams) {
		      options.blockParams = 'blockParams';
		    }
		    return options;
		  },

		  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {
		    var options = this.setupParams(helper, paramSize, params, true);
		    options = this.objectLiteral(options);
		    if (useRegister) {
		      this.useRegister('options');
		      params.push('options');
		      return ['options=', options];
		    } else {
		      params.push(options);
		      return '';
		    }
		  }
		};

		(function () {
		  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');

		  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

		  for (var i = 0, l = reservedWords.length; i < l; i++) {
		    compilerWords[reservedWords[i]] = true;
		  }
		})();

		JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
		  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);
		};

		function strictLookup(requireTerminal, compiler, parts, type) {
		  var stack = compiler.popStack(),
		      i = 0,
		      len = parts.length;
		  if (requireTerminal) {
		    len--;
		  }

		  for (; i < len; i++) {
		    stack = compiler.nameLookup(stack, parts[i], type);
		  }

		  if (requireTerminal) {
		    return [compiler.aliasable('this.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];
		  } else {
		    return stack;
		  }
		}

		exports['default'] = JavaScriptCompiler;
		module.exports = exports['default'];

	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var _AST = __webpack_require__(2);

		var _AST2 = _interopRequireDefault(_AST);

		function Visitor() {
		  this.parents = [];
		}

		Visitor.prototype = {
		  constructor: Visitor,
		  mutating: false,

		  // Visits a given value. If mutating, will replace the value if necessary.
		  acceptKey: function acceptKey(node, name) {
		    var value = this.accept(node[name]);
		    if (this.mutating) {
		      // Hacky sanity check:
		      if (value && (!value.type || !_AST2['default'][value.type])) {
		        throw new _Exception2['default']('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
		      }
		      node[name] = value;
		    }
		  },

		  // Performs an accept operation with added sanity check to ensure
		  // required keys are not removed.
		  acceptRequired: function acceptRequired(node, name) {
		    this.acceptKey(node, name);

		    if (!node[name]) {
		      throw new _Exception2['default'](node.type + ' requires ' + name);
		    }
		  },

		  // Traverses a given array. If mutating, empty respnses will be removed
		  // for child elements.
		  acceptArray: function acceptArray(array) {
		    for (var i = 0, l = array.length; i < l; i++) {
		      this.acceptKey(array, i);

		      if (!array[i]) {
		        array.splice(i, 1);
		        i--;
		        l--;
		      }
		    }
		  },

		  accept: function accept(object) {
		    if (!object) {
		      return;
		    }

		    if (this.current) {
		      this.parents.unshift(this.current);
		    }
		    this.current = object;

		    var ret = this[object.type](object);

		    this.current = this.parents.shift();

		    if (!this.mutating || ret) {
		      return ret;
		    } else if (ret !== false) {
		      return object;
		    }
		  },

		  Program: function Program(program) {
		    this.acceptArray(program.body);
		  },

		  MustacheStatement: function MustacheStatement(mustache) {
		    this.acceptRequired(mustache, 'path');
		    this.acceptArray(mustache.params);
		    this.acceptKey(mustache, 'hash');
		  },

		  BlockStatement: function BlockStatement(block) {
		    this.acceptRequired(block, 'path');
		    this.acceptArray(block.params);
		    this.acceptKey(block, 'hash');

		    this.acceptKey(block, 'program');
		    this.acceptKey(block, 'inverse');
		  },

		  PartialStatement: function PartialStatement(partial) {
		    this.acceptRequired(partial, 'name');
		    this.acceptArray(partial.params);
		    this.acceptKey(partial, 'hash');
		  },

		  ContentStatement: function ContentStatement() {},
		  CommentStatement: function CommentStatement() {},

		  SubExpression: function SubExpression(sexpr) {
		    this.acceptRequired(sexpr, 'path');
		    this.acceptArray(sexpr.params);
		    this.acceptKey(sexpr, 'hash');
		  },

		  PathExpression: function PathExpression() {},

		  StringLiteral: function StringLiteral() {},
		  NumberLiteral: function NumberLiteral() {},
		  BooleanLiteral: function BooleanLiteral() {},
		  UndefinedLiteral: function UndefinedLiteral() {},
		  NullLiteral: function NullLiteral() {},

		  Hash: function Hash(hash) {
		    this.acceptArray(hash.pairs);
		  },
		  HashPair: function HashPair(pair) {
		    this.acceptRequired(pair, 'value');
		  }
		};

		exports['default'] = Visitor;
		module.exports = exports['default'];
		/* content */ /* comment */ /* path */ /* string */ /* number */ /* bool */ /* literal */ /* literal */

	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(global) {'use strict';

		exports.__esModule = true;
		/*global window */

		exports['default'] = function (Handlebars) {
		  /* istanbul ignore next */
		  var root = typeof global !== 'undefined' ? global : window,
		      $Handlebars = root.Handlebars;
		  /* istanbul ignore next */
		  Handlebars.noConflict = function () {
		    if (root.Handlebars === Handlebars) {
		      root.Handlebars = $Handlebars;
		    }
		  };
		};

		module.exports = exports['default'];
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";

		exports["default"] = function (obj) {
		  return obj && obj.__esModule ? obj : {
		    "default": obj
		  };
		};

		exports.__esModule = true;

	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";

		exports["default"] = function (obj) {
		  if (obj && obj.__esModule) {
		    return obj;
		  } else {
		    var newObj = {};

		    if (typeof obj === "object" && obj !== null) {
		      for (var key in obj) {
		        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
		      }
		    }

		    newObj["default"] = obj;
		    return newObj;
		  }
		};

		exports.__esModule = true;

	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireWildcard = __webpack_require__(9)['default'];

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;
		exports.HandlebarsEnvironment = HandlebarsEnvironment;
		exports.createFrame = createFrame;

		var _import = __webpack_require__(13);

		var Utils = _interopRequireWildcard(_import);

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var VERSION = '3.0.1';
		exports.VERSION = VERSION;
		var COMPILER_REVISION = 6;

		exports.COMPILER_REVISION = COMPILER_REVISION;
		var REVISION_CHANGES = {
		  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
		  2: '== 1.0.0-rc.3',
		  3: '== 1.0.0-rc.4',
		  4: '== 1.x.x',
		  5: '== 2.0.0-alpha.x',
		  6: '>= 2.0.0-beta.1'
		};

		exports.REVISION_CHANGES = REVISION_CHANGES;
		var isArray = Utils.isArray,
		    isFunction = Utils.isFunction,
		    toString = Utils.toString,
		    objectType = '[object Object]';

		function HandlebarsEnvironment(helpers, partials) {
		  this.helpers = helpers || {};
		  this.partials = partials || {};

		  registerDefaultHelpers(this);
		}

		HandlebarsEnvironment.prototype = {
		  constructor: HandlebarsEnvironment,

		  logger: logger,
		  log: log,

		  registerHelper: function registerHelper(name, fn) {
		    if (toString.call(name) === objectType) {
		      if (fn) {
		        throw new _Exception2['default']('Arg not supported with multiple helpers');
		      }
		      Utils.extend(this.helpers, name);
		    } else {
		      this.helpers[name] = fn;
		    }
		  },
		  unregisterHelper: function unregisterHelper(name) {
		    delete this.helpers[name];
		  },

		  registerPartial: function registerPartial(name, partial) {
		    if (toString.call(name) === objectType) {
		      Utils.extend(this.partials, name);
		    } else {
		      if (typeof partial === 'undefined') {
		        throw new _Exception2['default']('Attempting to register a partial as undefined');
		      }
		      this.partials[name] = partial;
		    }
		  },
		  unregisterPartial: function unregisterPartial(name) {
		    delete this.partials[name];
		  }
		};

		function registerDefaultHelpers(instance) {
		  instance.registerHelper('helperMissing', function () {
		    if (arguments.length === 1) {
		      // A missing field in a {{foo}} constuct.
		      return undefined;
		    } else {
		      // Someone is actually trying to call something, blow up.
		      throw new _Exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
		    }
		  });

		  instance.registerHelper('blockHelperMissing', function (context, options) {
		    var inverse = options.inverse,
		        fn = options.fn;

		    if (context === true) {
		      return fn(this);
		    } else if (context === false || context == null) {
		      return inverse(this);
		    } else if (isArray(context)) {
		      if (context.length > 0) {
		        if (options.ids) {
		          options.ids = [options.name];
		        }

		        return instance.helpers.each(context, options);
		      } else {
		        return inverse(this);
		      }
		    } else {
		      if (options.data && options.ids) {
		        var data = createFrame(options.data);
		        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);
		        options = { data: data };
		      }

		      return fn(context, options);
		    }
		  });

		  instance.registerHelper('each', function (context, options) {
		    if (!options) {
		      throw new _Exception2['default']('Must pass iterator to #each');
		    }

		    var fn = options.fn,
		        inverse = options.inverse,
		        i = 0,
		        ret = '',
		        data = undefined,
		        contextPath = undefined;

		    if (options.data && options.ids) {
		      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
		    }

		    if (isFunction(context)) {
		      context = context.call(this);
		    }

		    if (options.data) {
		      data = createFrame(options.data);
		    }

		    function execIteration(field, index, last) {
		      if (data) {
		        data.key = field;
		        data.index = index;
		        data.first = index === 0;
		        data.last = !!last;

		        if (contextPath) {
		          data.contextPath = contextPath + field;
		        }
		      }

		      ret = ret + fn(context[field], {
		        data: data,
		        blockParams: Utils.blockParams([context[field], field], [contextPath + field, null])
		      });
		    }

		    if (context && typeof context === 'object') {
		      if (isArray(context)) {
		        for (var j = context.length; i < j; i++) {
		          execIteration(i, i, i === context.length - 1);
		        }
		      } else {
		        var priorKey = undefined;

		        for (var key in context) {
		          if (context.hasOwnProperty(key)) {
		            // We're running the iterations one step out of sync so we can detect
		            // the last iteration without have to scan the object twice and create
		            // an itermediate keys array.
		            if (priorKey) {
		              execIteration(priorKey, i - 1);
		            }
		            priorKey = key;
		            i++;
		          }
		        }
		        if (priorKey) {
		          execIteration(priorKey, i - 1, true);
		        }
		      }
		    }

		    if (i === 0) {
		      ret = inverse(this);
		    }

		    return ret;
		  });

		  instance.registerHelper('if', function (conditional, options) {
		    if (isFunction(conditional)) {
		      conditional = conditional.call(this);
		    }

		    // Default behavior is to render the positive path if the value is truthy and not empty.
		    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
		    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
		    if (!options.hash.includeZero && !conditional || Utils.isEmpty(conditional)) {
		      return options.inverse(this);
		    } else {
		      return options.fn(this);
		    }
		  });

		  instance.registerHelper('unless', function (conditional, options) {
		    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
		  });

		  instance.registerHelper('with', function (context, options) {
		    if (isFunction(context)) {
		      context = context.call(this);
		    }

		    var fn = options.fn;

		    if (!Utils.isEmpty(context)) {
		      if (options.data && options.ids) {
		        var data = createFrame(options.data);
		        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);
		        options = { data: data };
		      }

		      return fn(context, options);
		    } else {
		      return options.inverse(this);
		    }
		  });

		  instance.registerHelper('log', function (message, options) {
		    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
		    instance.log(level, message);
		  });

		  instance.registerHelper('lookup', function (obj, field) {
		    return obj && obj[field];
		  });
		}

		var logger = {
		  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

		  // State enum
		  DEBUG: 0,
		  INFO: 1,
		  WARN: 2,
		  ERROR: 3,
		  level: 1,

		  // Can be overridden in the host environment
		  log: function log(level, message) {
		    if (typeof console !== 'undefined' && logger.level <= level) {
		      var method = logger.methodMap[level];
		      (console[method] || console.log).call(console, message); // eslint-disable-line no-console
		    }
		  }
		};

		exports.logger = logger;
		var log = logger.log;

		exports.log = log;

		function createFrame(object) {
		  var frame = Utils.extend({}, object);
		  frame._parent = object;
		  return frame;
		}

		/* [args, ]options */

	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;
		// Build out our basic SafeString type
		function SafeString(string) {
		  this.string = string;
		}

		SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
		  return '' + this.string;
		};

		exports['default'] = SafeString;
		module.exports = exports['default'];

	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;

		var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

		function Exception(message, node) {
		  var loc = node && node.loc,
		      line = undefined,
		      column = undefined;
		  if (loc) {
		    line = loc.start.line;
		    column = loc.start.column;

		    message += ' - ' + line + ':' + column;
		  }

		  var tmp = Error.prototype.constructor.call(this, message);

		  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
		  for (var idx = 0; idx < errorProps.length; idx++) {
		    this[errorProps[idx]] = tmp[errorProps[idx]];
		  }

		  if (Error.captureStackTrace) {
		    Error.captureStackTrace(this, Exception);
		  }

		  if (loc) {
		    this.lineNumber = line;
		    this.column = column;
		  }
		}

		Exception.prototype = new Error();

		exports['default'] = Exception;
		module.exports = exports['default'];

	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;
		exports.extend = extend;

		// Older IE versions do not directly support indexOf so we must implement our own, sadly.
		exports.indexOf = indexOf;
		exports.escapeExpression = escapeExpression;
		exports.isEmpty = isEmpty;
		exports.blockParams = blockParams;
		exports.appendContextPath = appendContextPath;
		var escape = {
		  '&': '&amp;',
		  '<': '&lt;',
		  '>': '&gt;',
		  '"': '&quot;',
		  '\'': '&#x27;',
		  '`': '&#x60;'
		};

		var badChars = /[&<>"'`]/g,
		    possible = /[&<>"'`]/;

		function escapeChar(chr) {
		  return escape[chr];
		}

		function extend(obj /* , ...source */) {
		  for (var i = 1; i < arguments.length; i++) {
		    for (var key in arguments[i]) {
		      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
		        obj[key] = arguments[i][key];
		      }
		    }
		  }

		  return obj;
		}

		var toString = Object.prototype.toString;

		exports.toString = toString;
		// Sourced from lodash
		// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
		/*eslint-disable func-style, no-var */
		var isFunction = function isFunction(value) {
		  return typeof value === 'function';
		};
		// fallback for older versions of Chrome and Safari
		/* istanbul ignore next */
		if (isFunction(/x/)) {
		  exports.isFunction = isFunction = function (value) {
		    return typeof value === 'function' && toString.call(value) === '[object Function]';
		  };
		}
		var isFunction;
		exports.isFunction = isFunction;
		/*eslint-enable func-style, no-var */

		/* istanbul ignore next */
		var isArray = Array.isArray || function (value) {
		  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
		};exports.isArray = isArray;

		function indexOf(array, value) {
		  for (var i = 0, len = array.length; i < len; i++) {
		    if (array[i] === value) {
		      return i;
		    }
		  }
		  return -1;
		}

		function escapeExpression(string) {
		  if (typeof string !== 'string') {
		    // don't escape SafeStrings, since they're already safe
		    if (string && string.toHTML) {
		      return string.toHTML();
		    } else if (string == null) {
		      return '';
		    } else if (!string) {
		      return string + '';
		    }

		    // Force a string conversion as this will be done by the append regardless and
		    // the regex test will do this transparently behind the scenes, causing issues if
		    // an object's to string has escaped characters in it.
		    string = '' + string;
		  }

		  if (!possible.test(string)) {
		    return string;
		  }
		  return string.replace(badChars, escapeChar);
		}

		function isEmpty(value) {
		  if (!value && value !== 0) {
		    return true;
		  } else if (isArray(value) && value.length === 0) {
		    return true;
		  } else {
		    return false;
		  }
		}

		function blockParams(params, ids) {
		  params.path = ids;
		  return params;
		}

		function appendContextPath(contextPath, id) {
		  return (contextPath ? contextPath + '.' : '') + id;
		}

	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireWildcard = __webpack_require__(9)['default'];

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;
		exports.checkRevision = checkRevision;

		// TODO: Remove this line and break up compilePartial

		exports.template = template;
		exports.wrapProgram = wrapProgram;
		exports.resolvePartial = resolvePartial;
		exports.invokePartial = invokePartial;
		exports.noop = noop;

		var _import = __webpack_require__(13);

		var Utils = _interopRequireWildcard(_import);

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		var _COMPILER_REVISION$REVISION_CHANGES$createFrame = __webpack_require__(10);

		function checkRevision(compilerInfo) {
		  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
		      currentRevision = _COMPILER_REVISION$REVISION_CHANGES$createFrame.COMPILER_REVISION;

		  if (compilerRevision !== currentRevision) {
		    if (compilerRevision < currentRevision) {
		      var runtimeVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[currentRevision],
		          compilerVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[compilerRevision];
		      throw new _Exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
		    } else {
		      // Use the embedded version info since the runtime doesn't know about this revision yet
		      throw new _Exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
		    }
		  }
		}

		function template(templateSpec, env) {
		  /* istanbul ignore next */
		  if (!env) {
		    throw new _Exception2['default']('No environment passed to template');
		  }
		  if (!templateSpec || !templateSpec.main) {
		    throw new _Exception2['default']('Unknown template object: ' + typeof templateSpec);
		  }

		  // Note: Using env.VM references rather than local var references throughout this section to allow
		  // for external users to override these as psuedo-supported APIs.
		  env.VM.checkRevision(templateSpec.compiler);

		  function invokePartialWrapper(partial, context, options) {
		    if (options.hash) {
		      context = Utils.extend({}, context, options.hash);
		    }

		    partial = env.VM.resolvePartial.call(this, partial, context, options);
		    var result = env.VM.invokePartial.call(this, partial, context, options);

		    if (result == null && env.compile) {
		      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
		      result = options.partials[options.name](context, options);
		    }
		    if (result != null) {
		      if (options.indent) {
		        var lines = result.split('\n');
		        for (var i = 0, l = lines.length; i < l; i++) {
		          if (!lines[i] && i + 1 === l) {
		            break;
		          }

		          lines[i] = options.indent + lines[i];
		        }
		        result = lines.join('\n');
		      }
		      return result;
		    } else {
		      throw new _Exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
		    }
		  }

		  // Just add water
		  var container = {
		    strict: function strict(obj, name) {
		      if (!(name in obj)) {
		        throw new _Exception2['default']('"' + name + '" not defined in ' + obj);
		      }
		      return obj[name];
		    },
		    lookup: function lookup(depths, name) {
		      var len = depths.length;
		      for (var i = 0; i < len; i++) {
		        if (depths[i] && depths[i][name] != null) {
		          return depths[i][name];
		        }
		      }
		    },
		    lambda: function lambda(current, context) {
		      return typeof current === 'function' ? current.call(context) : current;
		    },

		    escapeExpression: Utils.escapeExpression,
		    invokePartial: invokePartialWrapper,

		    fn: function fn(i) {
		      return templateSpec[i];
		    },

		    programs: [],
		    program: function program(i, data, declaredBlockParams, blockParams, depths) {
		      var programWrapper = this.programs[i],
		          fn = this.fn(i);
		      if (data || depths || blockParams || declaredBlockParams) {
		        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
		      } else if (!programWrapper) {
		        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
		      }
		      return programWrapper;
		    },

		    data: function data(value, depth) {
		      while (value && depth--) {
		        value = value._parent;
		      }
		      return value;
		    },
		    merge: function merge(param, common) {
		      var obj = param || common;

		      if (param && common && param !== common) {
		        obj = Utils.extend({}, common, param);
		      }

		      return obj;
		    },

		    noop: env.VM.noop,
		    compilerInfo: templateSpec.compiler
		  };

		  function ret(context) {
		    var options = arguments[1] === undefined ? {} : arguments[1];

		    var data = options.data;

		    ret._setup(options);
		    if (!options.partial && templateSpec.useData) {
		      data = initData(context, data);
		    }
		    var depths = undefined,
		        blockParams = templateSpec.useBlockParams ? [] : undefined;
		    if (templateSpec.useDepths) {
		      depths = options.depths ? [context].concat(options.depths) : [context];
		    }

		    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);
		  }
		  ret.isTop = true;

		  ret._setup = function (options) {
		    if (!options.partial) {
		      container.helpers = container.merge(options.helpers, env.helpers);

		      if (templateSpec.usePartial) {
		        container.partials = container.merge(options.partials, env.partials);
		      }
		    } else {
		      container.helpers = options.helpers;
		      container.partials = options.partials;
		    }
		  };

		  ret._child = function (i, data, blockParams, depths) {
		    if (templateSpec.useBlockParams && !blockParams) {
		      throw new _Exception2['default']('must pass block params');
		    }
		    if (templateSpec.useDepths && !depths) {
		      throw new _Exception2['default']('must pass parent depths');
		    }

		    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
		  };
		  return ret;
		}

		function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
		  function prog(context) {
		    var options = arguments[1] === undefined ? {} : arguments[1];

		    return fn.call(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), depths && [context].concat(depths));
		  }
		  prog.program = i;
		  prog.depth = depths ? depths.length : 0;
		  prog.blockParams = declaredBlockParams || 0;
		  return prog;
		}

		function resolvePartial(partial, context, options) {
		  if (!partial) {
		    partial = options.partials[options.name];
		  } else if (!partial.call && !options.name) {
		    // This is a dynamic partial that returned a string
		    options.name = partial;
		    partial = options.partials[partial];
		  }
		  return partial;
		}

		function invokePartial(partial, context, options) {
		  options.partial = true;

		  if (partial === undefined) {
		    throw new _Exception2['default']('The partial ' + options.name + ' could not be found');
		  } else if (partial instanceof Function) {
		    return partial(context, options);
		  }
		}

		function noop() {
		  return '';
		}

		function initData(context, data) {
		  if (!data || !('root' in data)) {
		    data = data ? _COMPILER_REVISION$REVISION_CHANGES$createFrame.createFrame(data) : {};
		    data.root = context;
		  }
		  return data;
		}

	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";

		exports.__esModule = true;
		/* istanbul ignore next */
		/* Jison generated parser */
		var handlebars = (function () {
		    var parser = { trace: function trace() {},
		        yy: {},
		        symbols_: { error: 2, root: 3, program: 4, EOF: 5, program_repetition0: 6, statement: 7, mustache: 8, block: 9, rawBlock: 10, partial: 11, content: 12, COMMENT: 13, CONTENT: 14, openRawBlock: 15, END_RAW_BLOCK: 16, OPEN_RAW_BLOCK: 17, helperName: 18, openRawBlock_repetition0: 19, openRawBlock_option0: 20, CLOSE_RAW_BLOCK: 21, openBlock: 22, block_option0: 23, closeBlock: 24, openInverse: 25, block_option1: 26, OPEN_BLOCK: 27, openBlock_repetition0: 28, openBlock_option0: 29, openBlock_option1: 30, CLOSE: 31, OPEN_INVERSE: 32, openInverse_repetition0: 33, openInverse_option0: 34, openInverse_option1: 35, openInverseChain: 36, OPEN_INVERSE_CHAIN: 37, openInverseChain_repetition0: 38, openInverseChain_option0: 39, openInverseChain_option1: 40, inverseAndProgram: 41, INVERSE: 42, inverseChain: 43, inverseChain_option0: 44, OPEN_ENDBLOCK: 45, OPEN: 46, mustache_repetition0: 47, mustache_option0: 48, OPEN_UNESCAPED: 49, mustache_repetition1: 50, mustache_option1: 51, CLOSE_UNESCAPED: 52, OPEN_PARTIAL: 53, partialName: 54, partial_repetition0: 55, partial_option0: 56, param: 57, sexpr: 58, OPEN_SEXPR: 59, sexpr_repetition0: 60, sexpr_option0: 61, CLOSE_SEXPR: 62, hash: 63, hash_repetition_plus0: 64, hashSegment: 65, ID: 66, EQUALS: 67, blockParams: 68, OPEN_BLOCK_PARAMS: 69, blockParams_repetition_plus0: 70, CLOSE_BLOCK_PARAMS: 71, path: 72, dataName: 73, STRING: 74, NUMBER: 75, BOOLEAN: 76, UNDEFINED: 77, NULL: 78, DATA: 79, pathSegments: 80, SEP: 81, $accept: 0, $end: 1 },
		        terminals_: { 2: "error", 5: "EOF", 13: "COMMENT", 14: "CONTENT", 16: "END_RAW_BLOCK", 17: "OPEN_RAW_BLOCK", 21: "CLOSE_RAW_BLOCK", 27: "OPEN_BLOCK", 31: "CLOSE", 32: "OPEN_INVERSE", 37: "OPEN_INVERSE_CHAIN", 42: "INVERSE", 45: "OPEN_ENDBLOCK", 46: "OPEN", 49: "OPEN_UNESCAPED", 52: "CLOSE_UNESCAPED", 53: "OPEN_PARTIAL", 59: "OPEN_SEXPR", 62: "CLOSE_SEXPR", 66: "ID", 67: "EQUALS", 69: "OPEN_BLOCK_PARAMS", 71: "CLOSE_BLOCK_PARAMS", 74: "STRING", 75: "NUMBER", 76: "BOOLEAN", 77: "UNDEFINED", 78: "NULL", 79: "DATA", 81: "SEP" },
		        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [12, 1], [10, 3], [15, 5], [9, 4], [9, 4], [22, 6], [25, 6], [36, 6], [41, 2], [43, 3], [43, 1], [24, 3], [8, 5], [8, 5], [11, 5], [57, 1], [57, 1], [58, 5], [63, 1], [65, 3], [68, 3], [18, 1], [18, 1], [18, 1], [18, 1], [18, 1], [18, 1], [18, 1], [54, 1], [54, 1], [73, 2], [72, 1], [80, 3], [80, 1], [6, 0], [6, 2], [19, 0], [19, 2], [20, 0], [20, 1], [23, 0], [23, 1], [26, 0], [26, 1], [28, 0], [28, 2], [29, 0], [29, 1], [30, 0], [30, 1], [33, 0], [33, 2], [34, 0], [34, 1], [35, 0], [35, 1], [38, 0], [38, 2], [39, 0], [39, 1], [40, 0], [40, 1], [44, 0], [44, 1], [47, 0], [47, 2], [48, 0], [48, 1], [50, 0], [50, 2], [51, 0], [51, 1], [55, 0], [55, 2], [56, 0], [56, 1], [60, 0], [60, 2], [61, 0], [61, 1], [64, 1], [64, 2], [70, 1], [70, 2]],
		        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {

		            var $0 = $$.length - 1;
		            switch (yystate) {
		                case 1:
		                    return $$[$0 - 1];
		                    break;
		                case 2:
		                    this.$ = new yy.Program($$[$0], null, {}, yy.locInfo(this._$));
		                    break;
		                case 3:
		                    this.$ = $$[$0];
		                    break;
		                case 4:
		                    this.$ = $$[$0];
		                    break;
		                case 5:
		                    this.$ = $$[$0];
		                    break;
		                case 6:
		                    this.$ = $$[$0];
		                    break;
		                case 7:
		                    this.$ = $$[$0];
		                    break;
		                case 8:
		                    this.$ = new yy.CommentStatement(yy.stripComment($$[$0]), yy.stripFlags($$[$0], $$[$0]), yy.locInfo(this._$));
		                    break;
		                case 9:
		                    this.$ = new yy.ContentStatement($$[$0], yy.locInfo(this._$));
		                    break;
		                case 10:
		                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
		                    break;
		                case 11:
		                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
		                    break;
		                case 12:
		                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
		                    break;
		                case 13:
		                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
		                    break;
		                case 14:
		                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
		                    break;
		                case 15:
		                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
		                    break;
		                case 16:
		                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
		                    break;
		                case 17:
		                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
		                    break;
		                case 18:
		                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
		                        program = new yy.Program([inverse], null, {}, yy.locInfo(this._$));
		                    program.chained = true;

		                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

		                    break;
		                case 19:
		                    this.$ = $$[$0];
		                    break;
		                case 20:
		                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
		                    break;
		                case 21:
		                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
		                    break;
		                case 22:
		                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
		                    break;
		                case 23:
		                    this.$ = new yy.PartialStatement($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], yy.stripFlags($$[$0 - 4], $$[$0]), yy.locInfo(this._$));
		                    break;
		                case 24:
		                    this.$ = $$[$0];
		                    break;
		                case 25:
		                    this.$ = $$[$0];
		                    break;
		                case 26:
		                    this.$ = new yy.SubExpression($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], yy.locInfo(this._$));
		                    break;
		                case 27:
		                    this.$ = new yy.Hash($$[$0], yy.locInfo(this._$));
		                    break;
		                case 28:
		                    this.$ = new yy.HashPair(yy.id($$[$0 - 2]), $$[$0], yy.locInfo(this._$));
		                    break;
		                case 29:
		                    this.$ = yy.id($$[$0 - 1]);
		                    break;
		                case 30:
		                    this.$ = $$[$0];
		                    break;
		                case 31:
		                    this.$ = $$[$0];
		                    break;
		                case 32:
		                    this.$ = new yy.StringLiteral($$[$0], yy.locInfo(this._$));
		                    break;
		                case 33:
		                    this.$ = new yy.NumberLiteral($$[$0], yy.locInfo(this._$));
		                    break;
		                case 34:
		                    this.$ = new yy.BooleanLiteral($$[$0], yy.locInfo(this._$));
		                    break;
		                case 35:
		                    this.$ = new yy.UndefinedLiteral(yy.locInfo(this._$));
		                    break;
		                case 36:
		                    this.$ = new yy.NullLiteral(yy.locInfo(this._$));
		                    break;
		                case 37:
		                    this.$ = $$[$0];
		                    break;
		                case 38:
		                    this.$ = $$[$0];
		                    break;
		                case 39:
		                    this.$ = yy.preparePath(true, $$[$0], this._$);
		                    break;
		                case 40:
		                    this.$ = yy.preparePath(false, $$[$0], this._$);
		                    break;
		                case 41:
		                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
		                    break;
		                case 42:
		                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
		                    break;
		                case 43:
		                    this.$ = [];
		                    break;
		                case 44:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 45:
		                    this.$ = [];
		                    break;
		                case 46:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 53:
		                    this.$ = [];
		                    break;
		                case 54:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 59:
		                    this.$ = [];
		                    break;
		                case 60:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 65:
		                    this.$ = [];
		                    break;
		                case 66:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 73:
		                    this.$ = [];
		                    break;
		                case 74:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 77:
		                    this.$ = [];
		                    break;
		                case 78:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 81:
		                    this.$ = [];
		                    break;
		                case 82:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 85:
		                    this.$ = [];
		                    break;
		                case 86:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 89:
		                    this.$ = [$$[$0]];
		                    break;
		                case 90:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		                case 91:
		                    this.$ = [$$[$0]];
		                    break;
		                case 92:
		                    $$[$0 - 1].push($$[$0]);
		                    break;
		            }
		        },
		        table: [{ 3: 1, 4: 2, 5: [2, 43], 6: 3, 13: [2, 43], 14: [2, 43], 17: [2, 43], 27: [2, 43], 32: [2, 43], 46: [2, 43], 49: [2, 43], 53: [2, 43] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: [1, 11], 14: [1, 18], 15: 16, 17: [1, 21], 22: 14, 25: 15, 27: [1, 19], 32: [1, 20], 37: [2, 2], 42: [2, 2], 45: [2, 2], 46: [1, 12], 49: [1, 13], 53: [1, 17] }, { 1: [2, 1] }, { 5: [2, 44], 13: [2, 44], 14: [2, 44], 17: [2, 44], 27: [2, 44], 32: [2, 44], 37: [2, 44], 42: [2, 44], 45: [2, 44], 46: [2, 44], 49: [2, 44], 53: [2, 44] }, { 5: [2, 3], 13: [2, 3], 14: [2, 3], 17: [2, 3], 27: [2, 3], 32: [2, 3], 37: [2, 3], 42: [2, 3], 45: [2, 3], 46: [2, 3], 49: [2, 3], 53: [2, 3] }, { 5: [2, 4], 13: [2, 4], 14: [2, 4], 17: [2, 4], 27: [2, 4], 32: [2, 4], 37: [2, 4], 42: [2, 4], 45: [2, 4], 46: [2, 4], 49: [2, 4], 53: [2, 4] }, { 5: [2, 5], 13: [2, 5], 14: [2, 5], 17: [2, 5], 27: [2, 5], 32: [2, 5], 37: [2, 5], 42: [2, 5], 45: [2, 5], 46: [2, 5], 49: [2, 5], 53: [2, 5] }, { 5: [2, 6], 13: [2, 6], 14: [2, 6], 17: [2, 6], 27: [2, 6], 32: [2, 6], 37: [2, 6], 42: [2, 6], 45: [2, 6], 46: [2, 6], 49: [2, 6], 53: [2, 6] }, { 5: [2, 7], 13: [2, 7], 14: [2, 7], 17: [2, 7], 27: [2, 7], 32: [2, 7], 37: [2, 7], 42: [2, 7], 45: [2, 7], 46: [2, 7], 49: [2, 7], 53: [2, 7] }, { 5: [2, 8], 13: [2, 8], 14: [2, 8], 17: [2, 8], 27: [2, 8], 32: [2, 8], 37: [2, 8], 42: [2, 8], 45: [2, 8], 46: [2, 8], 49: [2, 8], 53: [2, 8] }, { 18: 22, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 18: 33, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 4: 34, 6: 3, 13: [2, 43], 14: [2, 43], 17: [2, 43], 27: [2, 43], 32: [2, 43], 37: [2, 43], 42: [2, 43], 45: [2, 43], 46: [2, 43], 49: [2, 43], 53: [2, 43] }, { 4: 35, 6: 3, 13: [2, 43], 14: [2, 43], 17: [2, 43], 27: [2, 43], 32: [2, 43], 42: [2, 43], 45: [2, 43], 46: [2, 43], 49: [2, 43], 53: [2, 43] }, { 12: 36, 14: [1, 18] }, { 18: 38, 54: 37, 58: 39, 59: [1, 40], 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 5: [2, 9], 13: [2, 9], 14: [2, 9], 16: [2, 9], 17: [2, 9], 27: [2, 9], 32: [2, 9], 37: [2, 9], 42: [2, 9], 45: [2, 9], 46: [2, 9], 49: [2, 9], 53: [2, 9] }, { 18: 41, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 18: 42, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 18: 43, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 31: [2, 73], 47: 44, 59: [2, 73], 66: [2, 73], 74: [2, 73], 75: [2, 73], 76: [2, 73], 77: [2, 73], 78: [2, 73], 79: [2, 73] }, { 21: [2, 30], 31: [2, 30], 52: [2, 30], 59: [2, 30], 62: [2, 30], 66: [2, 30], 69: [2, 30], 74: [2, 30], 75: [2, 30], 76: [2, 30], 77: [2, 30], 78: [2, 30], 79: [2, 30] }, { 21: [2, 31], 31: [2, 31], 52: [2, 31], 59: [2, 31], 62: [2, 31], 66: [2, 31], 69: [2, 31], 74: [2, 31], 75: [2, 31], 76: [2, 31], 77: [2, 31], 78: [2, 31], 79: [2, 31] }, { 21: [2, 32], 31: [2, 32], 52: [2, 32], 59: [2, 32], 62: [2, 32], 66: [2, 32], 69: [2, 32], 74: [2, 32], 75: [2, 32], 76: [2, 32], 77: [2, 32], 78: [2, 32], 79: [2, 32] }, { 21: [2, 33], 31: [2, 33], 52: [2, 33], 59: [2, 33], 62: [2, 33], 66: [2, 33], 69: [2, 33], 74: [2, 33], 75: [2, 33], 76: [2, 33], 77: [2, 33], 78: [2, 33], 79: [2, 33] }, { 21: [2, 34], 31: [2, 34], 52: [2, 34], 59: [2, 34], 62: [2, 34], 66: [2, 34], 69: [2, 34], 74: [2, 34], 75: [2, 34], 76: [2, 34], 77: [2, 34], 78: [2, 34], 79: [2, 34] }, { 21: [2, 35], 31: [2, 35], 52: [2, 35], 59: [2, 35], 62: [2, 35], 66: [2, 35], 69: [2, 35], 74: [2, 35], 75: [2, 35], 76: [2, 35], 77: [2, 35], 78: [2, 35], 79: [2, 35] }, { 21: [2, 36], 31: [2, 36], 52: [2, 36], 59: [2, 36], 62: [2, 36], 66: [2, 36], 69: [2, 36], 74: [2, 36], 75: [2, 36], 76: [2, 36], 77: [2, 36], 78: [2, 36], 79: [2, 36] }, { 21: [2, 40], 31: [2, 40], 52: [2, 40], 59: [2, 40], 62: [2, 40], 66: [2, 40], 69: [2, 40], 74: [2, 40], 75: [2, 40], 76: [2, 40], 77: [2, 40], 78: [2, 40], 79: [2, 40], 81: [1, 45] }, { 66: [1, 32], 80: 46 }, { 21: [2, 42], 31: [2, 42], 52: [2, 42], 59: [2, 42], 62: [2, 42], 66: [2, 42], 69: [2, 42], 74: [2, 42], 75: [2, 42], 76: [2, 42], 77: [2, 42], 78: [2, 42], 79: [2, 42], 81: [2, 42] }, { 50: 47, 52: [2, 77], 59: [2, 77], 66: [2, 77], 74: [2, 77], 75: [2, 77], 76: [2, 77], 77: [2, 77], 78: [2, 77], 79: [2, 77] }, { 23: 48, 36: 50, 37: [1, 52], 41: 51, 42: [1, 53], 43: 49, 45: [2, 49] }, { 26: 54, 41: 55, 42: [1, 53], 45: [2, 51] }, { 16: [1, 56] }, { 31: [2, 81], 55: 57, 59: [2, 81], 66: [2, 81], 74: [2, 81], 75: [2, 81], 76: [2, 81], 77: [2, 81], 78: [2, 81], 79: [2, 81] }, { 31: [2, 37], 59: [2, 37], 66: [2, 37], 74: [2, 37], 75: [2, 37], 76: [2, 37], 77: [2, 37], 78: [2, 37], 79: [2, 37] }, { 31: [2, 38], 59: [2, 38], 66: [2, 38], 74: [2, 38], 75: [2, 38], 76: [2, 38], 77: [2, 38], 78: [2, 38], 79: [2, 38] }, { 18: 58, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 28: 59, 31: [2, 53], 59: [2, 53], 66: [2, 53], 69: [2, 53], 74: [2, 53], 75: [2, 53], 76: [2, 53], 77: [2, 53], 78: [2, 53], 79: [2, 53] }, { 31: [2, 59], 33: 60, 59: [2, 59], 66: [2, 59], 69: [2, 59], 74: [2, 59], 75: [2, 59], 76: [2, 59], 77: [2, 59], 78: [2, 59], 79: [2, 59] }, { 19: 61, 21: [2, 45], 59: [2, 45], 66: [2, 45], 74: [2, 45], 75: [2, 45], 76: [2, 45], 77: [2, 45], 78: [2, 45], 79: [2, 45] }, { 18: 65, 31: [2, 75], 48: 62, 57: 63, 58: 66, 59: [1, 40], 63: 64, 64: 67, 65: 68, 66: [1, 69], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 66: [1, 70] }, { 21: [2, 39], 31: [2, 39], 52: [2, 39], 59: [2, 39], 62: [2, 39], 66: [2, 39], 69: [2, 39], 74: [2, 39], 75: [2, 39], 76: [2, 39], 77: [2, 39], 78: [2, 39], 79: [2, 39], 81: [1, 45] }, { 18: 65, 51: 71, 52: [2, 79], 57: 72, 58: 66, 59: [1, 40], 63: 73, 64: 67, 65: 68, 66: [1, 69], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 24: 74, 45: [1, 75] }, { 45: [2, 50] }, { 4: 76, 6: 3, 13: [2, 43], 14: [2, 43], 17: [2, 43], 27: [2, 43], 32: [2, 43], 37: [2, 43], 42: [2, 43], 45: [2, 43], 46: [2, 43], 49: [2, 43], 53: [2, 43] }, { 45: [2, 19] }, { 18: 77, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 4: 78, 6: 3, 13: [2, 43], 14: [2, 43], 17: [2, 43], 27: [2, 43], 32: [2, 43], 45: [2, 43], 46: [2, 43], 49: [2, 43], 53: [2, 43] }, { 24: 79, 45: [1, 75] }, { 45: [2, 52] }, { 5: [2, 10], 13: [2, 10], 14: [2, 10], 17: [2, 10], 27: [2, 10], 32: [2, 10], 37: [2, 10], 42: [2, 10], 45: [2, 10], 46: [2, 10], 49: [2, 10], 53: [2, 10] }, { 18: 65, 31: [2, 83], 56: 80, 57: 81, 58: 66, 59: [1, 40], 63: 82, 64: 67, 65: 68, 66: [1, 69], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 59: [2, 85], 60: 83, 62: [2, 85], 66: [2, 85], 74: [2, 85], 75: [2, 85], 76: [2, 85], 77: [2, 85], 78: [2, 85], 79: [2, 85] }, { 18: 65, 29: 84, 31: [2, 55], 57: 85, 58: 66, 59: [1, 40], 63: 86, 64: 67, 65: 68, 66: [1, 69], 69: [2, 55], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 18: 65, 31: [2, 61], 34: 87, 57: 88, 58: 66, 59: [1, 40], 63: 89, 64: 67, 65: 68, 66: [1, 69], 69: [2, 61], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 18: 65, 20: 90, 21: [2, 47], 57: 91, 58: 66, 59: [1, 40], 63: 92, 64: 67, 65: 68, 66: [1, 69], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 31: [1, 93] }, { 31: [2, 74], 59: [2, 74], 66: [2, 74], 74: [2, 74], 75: [2, 74], 76: [2, 74], 77: [2, 74], 78: [2, 74], 79: [2, 74] }, { 31: [2, 76] }, { 21: [2, 24], 31: [2, 24], 52: [2, 24], 59: [2, 24], 62: [2, 24], 66: [2, 24], 69: [2, 24], 74: [2, 24], 75: [2, 24], 76: [2, 24], 77: [2, 24], 78: [2, 24], 79: [2, 24] }, { 21: [2, 25], 31: [2, 25], 52: [2, 25], 59: [2, 25], 62: [2, 25], 66: [2, 25], 69: [2, 25], 74: [2, 25], 75: [2, 25], 76: [2, 25], 77: [2, 25], 78: [2, 25], 79: [2, 25] }, { 21: [2, 27], 31: [2, 27], 52: [2, 27], 62: [2, 27], 65: 94, 66: [1, 95], 69: [2, 27] }, { 21: [2, 89], 31: [2, 89], 52: [2, 89], 62: [2, 89], 66: [2, 89], 69: [2, 89] }, { 21: [2, 42], 31: [2, 42], 52: [2, 42], 59: [2, 42], 62: [2, 42], 66: [2, 42], 67: [1, 96], 69: [2, 42], 74: [2, 42], 75: [2, 42], 76: [2, 42], 77: [2, 42], 78: [2, 42], 79: [2, 42], 81: [2, 42] }, { 21: [2, 41], 31: [2, 41], 52: [2, 41], 59: [2, 41], 62: [2, 41], 66: [2, 41], 69: [2, 41], 74: [2, 41], 75: [2, 41], 76: [2, 41], 77: [2, 41], 78: [2, 41], 79: [2, 41], 81: [2, 41] }, { 52: [1, 97] }, { 52: [2, 78], 59: [2, 78], 66: [2, 78], 74: [2, 78], 75: [2, 78], 76: [2, 78], 77: [2, 78], 78: [2, 78], 79: [2, 78] }, { 52: [2, 80] }, { 5: [2, 12], 13: [2, 12], 14: [2, 12], 17: [2, 12], 27: [2, 12], 32: [2, 12], 37: [2, 12], 42: [2, 12], 45: [2, 12], 46: [2, 12], 49: [2, 12], 53: [2, 12] }, { 18: 98, 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 36: 50, 37: [1, 52], 41: 51, 42: [1, 53], 43: 100, 44: 99, 45: [2, 71] }, { 31: [2, 65], 38: 101, 59: [2, 65], 66: [2, 65], 69: [2, 65], 74: [2, 65], 75: [2, 65], 76: [2, 65], 77: [2, 65], 78: [2, 65], 79: [2, 65] }, { 45: [2, 17] }, { 5: [2, 13], 13: [2, 13], 14: [2, 13], 17: [2, 13], 27: [2, 13], 32: [2, 13], 37: [2, 13], 42: [2, 13], 45: [2, 13], 46: [2, 13], 49: [2, 13], 53: [2, 13] }, { 31: [1, 102] }, { 31: [2, 82], 59: [2, 82], 66: [2, 82], 74: [2, 82], 75: [2, 82], 76: [2, 82], 77: [2, 82], 78: [2, 82], 79: [2, 82] }, { 31: [2, 84] }, { 18: 65, 57: 104, 58: 66, 59: [1, 40], 61: 103, 62: [2, 87], 63: 105, 64: 67, 65: 68, 66: [1, 69], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 30: 106, 31: [2, 57], 68: 107, 69: [1, 108] }, { 31: [2, 54], 59: [2, 54], 66: [2, 54], 69: [2, 54], 74: [2, 54], 75: [2, 54], 76: [2, 54], 77: [2, 54], 78: [2, 54], 79: [2, 54] }, { 31: [2, 56], 69: [2, 56] }, { 31: [2, 63], 35: 109, 68: 110, 69: [1, 108] }, { 31: [2, 60], 59: [2, 60], 66: [2, 60], 69: [2, 60], 74: [2, 60], 75: [2, 60], 76: [2, 60], 77: [2, 60], 78: [2, 60], 79: [2, 60] }, { 31: [2, 62], 69: [2, 62] }, { 21: [1, 111] }, { 21: [2, 46], 59: [2, 46], 66: [2, 46], 74: [2, 46], 75: [2, 46], 76: [2, 46], 77: [2, 46], 78: [2, 46], 79: [2, 46] }, { 21: [2, 48] }, { 5: [2, 21], 13: [2, 21], 14: [2, 21], 17: [2, 21], 27: [2, 21], 32: [2, 21], 37: [2, 21], 42: [2, 21], 45: [2, 21], 46: [2, 21], 49: [2, 21], 53: [2, 21] }, { 21: [2, 90], 31: [2, 90], 52: [2, 90], 62: [2, 90], 66: [2, 90], 69: [2, 90] }, { 67: [1, 96] }, { 18: 65, 57: 112, 58: 66, 59: [1, 40], 66: [1, 32], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 5: [2, 22], 13: [2, 22], 14: [2, 22], 17: [2, 22], 27: [2, 22], 32: [2, 22], 37: [2, 22], 42: [2, 22], 45: [2, 22], 46: [2, 22], 49: [2, 22], 53: [2, 22] }, { 31: [1, 113] }, { 45: [2, 18] }, { 45: [2, 72] }, { 18: 65, 31: [2, 67], 39: 114, 57: 115, 58: 66, 59: [1, 40], 63: 116, 64: 67, 65: 68, 66: [1, 69], 69: [2, 67], 72: 23, 73: 24, 74: [1, 25], 75: [1, 26], 76: [1, 27], 77: [1, 28], 78: [1, 29], 79: [1, 31], 80: 30 }, { 5: [2, 23], 13: [2, 23], 14: [2, 23], 17: [2, 23], 27: [2, 23], 32: [2, 23], 37: [2, 23], 42: [2, 23], 45: [2, 23], 46: [2, 23], 49: [2, 23], 53: [2, 23] }, { 62: [1, 117] }, { 59: [2, 86], 62: [2, 86], 66: [2, 86], 74: [2, 86], 75: [2, 86], 76: [2, 86], 77: [2, 86], 78: [2, 86], 79: [2, 86] }, { 62: [2, 88] }, { 31: [1, 118] }, { 31: [2, 58] }, { 66: [1, 120], 70: 119 }, { 31: [1, 121] }, { 31: [2, 64] }, { 14: [2, 11] }, { 21: [2, 28], 31: [2, 28], 52: [2, 28], 62: [2, 28], 66: [2, 28], 69: [2, 28] }, { 5: [2, 20], 13: [2, 20], 14: [2, 20], 17: [2, 20], 27: [2, 20], 32: [2, 20], 37: [2, 20], 42: [2, 20], 45: [2, 20], 46: [2, 20], 49: [2, 20], 53: [2, 20] }, { 31: [2, 69], 40: 122, 68: 123, 69: [1, 108] }, { 31: [2, 66], 59: [2, 66], 66: [2, 66], 69: [2, 66], 74: [2, 66], 75: [2, 66], 76: [2, 66], 77: [2, 66], 78: [2, 66], 79: [2, 66] }, { 31: [2, 68], 69: [2, 68] }, { 21: [2, 26], 31: [2, 26], 52: [2, 26], 59: [2, 26], 62: [2, 26], 66: [2, 26], 69: [2, 26], 74: [2, 26], 75: [2, 26], 76: [2, 26], 77: [2, 26], 78: [2, 26], 79: [2, 26] }, { 13: [2, 14], 14: [2, 14], 17: [2, 14], 27: [2, 14], 32: [2, 14], 37: [2, 14], 42: [2, 14], 45: [2, 14], 46: [2, 14], 49: [2, 14], 53: [2, 14] }, { 66: [1, 125], 71: [1, 124] }, { 66: [2, 91], 71: [2, 91] }, { 13: [2, 15], 14: [2, 15], 17: [2, 15], 27: [2, 15], 32: [2, 15], 42: [2, 15], 45: [2, 15], 46: [2, 15], 49: [2, 15], 53: [2, 15] }, { 31: [1, 126] }, { 31: [2, 70] }, { 31: [2, 29] }, { 66: [2, 92], 71: [2, 92] }, { 13: [2, 16], 14: [2, 16], 17: [2, 16], 27: [2, 16], 32: [2, 16], 37: [2, 16], 42: [2, 16], 45: [2, 16], 46: [2, 16], 49: [2, 16], 53: [2, 16] }],
		        defaultActions: { 4: [2, 1], 49: [2, 50], 51: [2, 19], 55: [2, 52], 64: [2, 76], 73: [2, 80], 78: [2, 17], 82: [2, 84], 92: [2, 48], 99: [2, 18], 100: [2, 72], 105: [2, 88], 107: [2, 58], 110: [2, 64], 111: [2, 11], 123: [2, 70], 124: [2, 29] },
		        parseError: function parseError(str, hash) {
		            throw new Error(str);
		        },
		        parse: function parse(input) {
		            var self = this,
		                stack = [0],
		                vstack = [null],
		                lstack = [],
		                table = this.table,
		                yytext = "",
		                yylineno = 0,
		                yyleng = 0,
		                recovering = 0,
		                TERROR = 2,
		                EOF = 1;
		            this.lexer.setInput(input);
		            this.lexer.yy = this.yy;
		            this.yy.lexer = this.lexer;
		            this.yy.parser = this;
		            if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
		            var yyloc = this.lexer.yylloc;
		            lstack.push(yyloc);
		            var ranges = this.lexer.options && this.lexer.options.ranges;
		            if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
		            function popStack(n) {
		                stack.length = stack.length - 2 * n;
		                vstack.length = vstack.length - n;
		                lstack.length = lstack.length - n;
		            }
		            function lex() {
		                var token;
		                token = self.lexer.lex() || 1;
		                if (typeof token !== "number") {
		                    token = self.symbols_[token] || token;
		                }
		                return token;
		            }
		            var symbol,
		                preErrorSymbol,
		                state,
		                action,
		                a,
		                r,
		                yyval = {},
		                p,
		                len,
		                newState,
		                expected;
		            while (true) {
		                state = stack[stack.length - 1];
		                if (this.defaultActions[state]) {
		                    action = this.defaultActions[state];
		                } else {
		                    if (symbol === null || typeof symbol == "undefined") {
		                        symbol = lex();
		                    }
		                    action = table[state] && table[state][symbol];
		                }
		                if (typeof action === "undefined" || !action.length || !action[0]) {
		                    var errStr = "";
		                    if (!recovering) {
		                        expected = [];
		                        for (p in table[state]) if (this.terminals_[p] && p > 2) {
		                            expected.push("'" + this.terminals_[p] + "'");
		                        }
		                        if (this.lexer.showPosition) {
		                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
		                        } else {
		                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
		                        }
		                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
		                    }
		                }
		                if (action[0] instanceof Array && action.length > 1) {
		                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
		                }
		                switch (action[0]) {
		                    case 1:
		                        stack.push(symbol);
		                        vstack.push(this.lexer.yytext);
		                        lstack.push(this.lexer.yylloc);
		                        stack.push(action[1]);
		                        symbol = null;
		                        if (!preErrorSymbol) {
		                            yyleng = this.lexer.yyleng;
		                            yytext = this.lexer.yytext;
		                            yylineno = this.lexer.yylineno;
		                            yyloc = this.lexer.yylloc;
		                            if (recovering > 0) recovering--;
		                        } else {
		                            symbol = preErrorSymbol;
		                            preErrorSymbol = null;
		                        }
		                        break;
		                    case 2:
		                        len = this.productions_[action[1]][1];
		                        yyval.$ = vstack[vstack.length - len];
		                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
		                        if (ranges) {
		                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
		                        }
		                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
		                        if (typeof r !== "undefined") {
		                            return r;
		                        }
		                        if (len) {
		                            stack = stack.slice(0, -1 * len * 2);
		                            vstack = vstack.slice(0, -1 * len);
		                            lstack = lstack.slice(0, -1 * len);
		                        }
		                        stack.push(this.productions_[action[1]][0]);
		                        vstack.push(yyval.$);
		                        lstack.push(yyval._$);
		                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
		                        stack.push(newState);
		                        break;
		                    case 3:
		                        return true;
		                }
		            }
		            return true;
		        }
		    };
		    /* Jison generated lexer */
		    var lexer = (function () {
		        var lexer = { EOF: 1,
		            parseError: function parseError(str, hash) {
		                if (this.yy.parser) {
		                    this.yy.parser.parseError(str, hash);
		                } else {
		                    throw new Error(str);
		                }
		            },
		            setInput: function setInput(input) {
		                this._input = input;
		                this._more = this._less = this.done = false;
		                this.yylineno = this.yyleng = 0;
		                this.yytext = this.matched = this.match = "";
		                this.conditionStack = ["INITIAL"];
		                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
		                if (this.options.ranges) this.yylloc.range = [0, 0];
		                this.offset = 0;
		                return this;
		            },
		            input: function input() {
		                var ch = this._input[0];
		                this.yytext += ch;
		                this.yyleng++;
		                this.offset++;
		                this.match += ch;
		                this.matched += ch;
		                var lines = ch.match(/(?:\r\n?|\n).*/g);
		                if (lines) {
		                    this.yylineno++;
		                    this.yylloc.last_line++;
		                } else {
		                    this.yylloc.last_column++;
		                }
		                if (this.options.ranges) this.yylloc.range[1]++;

		                this._input = this._input.slice(1);
		                return ch;
		            },
		            unput: function unput(ch) {
		                var len = ch.length;
		                var lines = ch.split(/(?:\r\n?|\n)/g);

		                this._input = ch + this._input;
		                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
		                //this.yyleng -= len;
		                this.offset -= len;
		                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
		                this.match = this.match.substr(0, this.match.length - 1);
		                this.matched = this.matched.substr(0, this.matched.length - 1);

		                if (lines.length - 1) this.yylineno -= lines.length - 1;
		                var r = this.yylloc.range;

		                this.yylloc = { first_line: this.yylloc.first_line,
		                    last_line: this.yylineno + 1,
		                    first_column: this.yylloc.first_column,
		                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
		                };

		                if (this.options.ranges) {
		                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
		                }
		                return this;
		            },
		            more: function more() {
		                this._more = true;
		                return this;
		            },
		            less: function less(n) {
		                this.unput(this.match.slice(n));
		            },
		            pastInput: function pastInput() {
		                var past = this.matched.substr(0, this.matched.length - this.match.length);
		                return (past.length > 20 ? "..." : "") + past.substr(-20).replace(/\n/g, "");
		            },
		            upcomingInput: function upcomingInput() {
		                var next = this.match;
		                if (next.length < 20) {
		                    next += this._input.substr(0, 20 - next.length);
		                }
		                return (next.substr(0, 20) + (next.length > 20 ? "..." : "")).replace(/\n/g, "");
		            },
		            showPosition: function showPosition() {
		                var pre = this.pastInput();
		                var c = new Array(pre.length + 1).join("-");
		                return pre + this.upcomingInput() + "\n" + c + "^";
		            },
		            next: function next() {
		                if (this.done) {
		                    return this.EOF;
		                }
		                if (!this._input) this.done = true;

		                var token, match, tempMatch, index, col, lines;
		                if (!this._more) {
		                    this.yytext = "";
		                    this.match = "";
		                }
		                var rules = this._currentRules();
		                for (var i = 0; i < rules.length; i++) {
		                    tempMatch = this._input.match(this.rules[rules[i]]);
		                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
		                        match = tempMatch;
		                        index = i;
		                        if (!this.options.flex) break;
		                    }
		                }
		                if (match) {
		                    lines = match[0].match(/(?:\r\n?|\n).*/g);
		                    if (lines) this.yylineno += lines.length;
		                    this.yylloc = { first_line: this.yylloc.last_line,
		                        last_line: this.yylineno + 1,
		                        first_column: this.yylloc.last_column,
		                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
		                    this.yytext += match[0];
		                    this.match += match[0];
		                    this.matches = match;
		                    this.yyleng = this.yytext.length;
		                    if (this.options.ranges) {
		                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
		                    }
		                    this._more = false;
		                    this._input = this._input.slice(match[0].length);
		                    this.matched += match[0];
		                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
		                    if (this.done && this._input) this.done = false;
		                    if (token) {
		                        return token;
		                    } else {
		                        return;
		                    }
		                }
		                if (this._input === "") {
		                    return this.EOF;
		                } else {
		                    return this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), { text: "", token: null, line: this.yylineno });
		                }
		            },
		            lex: function lex() {
		                var r = this.next();
		                if (typeof r !== "undefined") {
		                    return r;
		                } else {
		                    return this.lex();
		                }
		            },
		            begin: function begin(condition) {
		                this.conditionStack.push(condition);
		            },
		            popState: function popState() {
		                return this.conditionStack.pop();
		            },
		            _currentRules: function _currentRules() {
		                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
		            },
		            topState: function topState() {
		                return this.conditionStack[this.conditionStack.length - 2];
		            },
		            pushState: function begin(condition) {
		                this.begin(condition);
		            } };
		        lexer.options = {};
		        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {

		            function strip(start, end) {
		                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);
		            }

		            var YYSTATE = YY_START;
		            switch ($avoiding_name_collisions) {
		                case 0:
		                    if (yy_.yytext.slice(-2) === "\\\\") {
		                        strip(0, 1);
		                        this.begin("mu");
		                    } else if (yy_.yytext.slice(-1) === "\\") {
		                        strip(0, 1);
		                        this.begin("emu");
		                    } else {
		                        this.begin("mu");
		                    }
		                    if (yy_.yytext) {
		                        return 14;
		                    }break;
		                case 1:
		                    return 14;
		                    break;
		                case 2:
		                    this.popState();
		                    return 14;

		                    break;
		                case 3:
		                    yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);
		                    this.popState();
		                    return 16;

		                    break;
		                case 4:
		                    return 14;
		                    break;
		                case 5:
		                    this.popState();
		                    return 13;

		                    break;
		                case 6:
		                    return 59;
		                    break;
		                case 7:
		                    return 62;
		                    break;
		                case 8:
		                    return 17;
		                    break;
		                case 9:
		                    this.popState();
		                    this.begin("raw");
		                    return 21;

		                    break;
		                case 10:
		                    return 53;
		                    break;
		                case 11:
		                    return 27;
		                    break;
		                case 12:
		                    return 45;
		                    break;
		                case 13:
		                    this.popState();return 42;
		                    break;
		                case 14:
		                    this.popState();return 42;
		                    break;
		                case 15:
		                    return 32;
		                    break;
		                case 16:
		                    return 37;
		                    break;
		                case 17:
		                    return 49;
		                    break;
		                case 18:
		                    return 46;
		                    break;
		                case 19:
		                    this.unput(yy_.yytext);
		                    this.popState();
		                    this.begin("com");

		                    break;
		                case 20:
		                    this.popState();
		                    return 13;

		                    break;
		                case 21:
		                    return 46;
		                    break;
		                case 22:
		                    return 67;
		                    break;
		                case 23:
		                    return 66;
		                    break;
		                case 24:
		                    return 66;
		                    break;
		                case 25:
		                    return 81;
		                    break;
		                case 26:
		                    // ignore whitespace
		                    break;
		                case 27:
		                    this.popState();return 52;
		                    break;
		                case 28:
		                    this.popState();return 31;
		                    break;
		                case 29:
		                    yy_.yytext = strip(1, 2).replace(/\\"/g, "\"");return 74;
		                    break;
		                case 30:
		                    yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 74;
		                    break;
		                case 31:
		                    return 79;
		                    break;
		                case 32:
		                    return 76;
		                    break;
		                case 33:
		                    return 76;
		                    break;
		                case 34:
		                    return 77;
		                    break;
		                case 35:
		                    return 78;
		                    break;
		                case 36:
		                    return 75;
		                    break;
		                case 37:
		                    return 69;
		                    break;
		                case 38:
		                    return 71;
		                    break;
		                case 39:
		                    return 66;
		                    break;
		                case 40:
		                    return 66;
		                    break;
		                case 41:
		                    return "INVALID";
		                    break;
		                case 42:
		                    return 5;
		                    break;
		            }
		        };
		        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{\/)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[[^\]]*\])/, /^(?:.)/, /^(?:$)/];
		        lexer.conditions = { mu: { rules: [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], inclusive: false }, emu: { rules: [2], inclusive: false }, com: { rules: [5], inclusive: false }, raw: { rules: [3, 4], inclusive: false }, INITIAL: { rules: [0, 1, 42], inclusive: true } };
		        return lexer;
		    })();
		    parser.lexer = lexer;
		    function Parser() {
		        this.yy = {};
		    }Parser.prototype = parser;parser.Parser = Parser;
		    return new Parser();
		})();exports["default"] = handlebars;
		module.exports = exports["default"];

	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;

		var _Visitor = __webpack_require__(6);

		var _Visitor2 = _interopRequireDefault(_Visitor);

		function WhitespaceControl() {}
		WhitespaceControl.prototype = new _Visitor2['default']();

		WhitespaceControl.prototype.Program = function (program) {
		  var isRoot = !this.isRootSeen;
		  this.isRootSeen = true;

		  var body = program.body;
		  for (var i = 0, l = body.length; i < l; i++) {
		    var current = body[i],
		        strip = this.accept(current);

		    if (!strip) {
		      continue;
		    }

		    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
		        _isNextWhitespace = isNextWhitespace(body, i, isRoot),
		        openStandalone = strip.openStandalone && _isPrevWhitespace,
		        closeStandalone = strip.closeStandalone && _isNextWhitespace,
		        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

		    if (strip.close) {
		      omitRight(body, i, true);
		    }
		    if (strip.open) {
		      omitLeft(body, i, true);
		    }

		    if (inlineStandalone) {
		      omitRight(body, i);

		      if (omitLeft(body, i)) {
		        // If we are on a standalone node, save the indent info for partials
		        if (current.type === 'PartialStatement') {
		          // Pull out the whitespace from the final line
		          current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
		        }
		      }
		    }
		    if (openStandalone) {
		      omitRight((current.program || current.inverse).body);

		      // Strip out the previous content node if it's whitespace only
		      omitLeft(body, i);
		    }
		    if (closeStandalone) {
		      // Always strip the next node
		      omitRight(body, i);

		      omitLeft((current.inverse || current.program).body);
		    }
		  }

		  return program;
		};
		WhitespaceControl.prototype.BlockStatement = function (block) {
		  this.accept(block.program);
		  this.accept(block.inverse);

		  // Find the inverse program that is involed with whitespace stripping.
		  var program = block.program || block.inverse,
		      inverse = block.program && block.inverse,
		      firstInverse = inverse,
		      lastInverse = inverse;

		  if (inverse && inverse.chained) {
		    firstInverse = inverse.body[0].program;

		    // Walk the inverse chain to find the last inverse that is actually in the chain.
		    while (lastInverse.chained) {
		      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
		    }
		  }

		  var strip = {
		    open: block.openStrip.open,
		    close: block.closeStrip.close,

		    // Determine the standalone candiacy. Basically flag our content as being possibly standalone
		    // so our parent can determine if we actually are standalone
		    openStandalone: isNextWhitespace(program.body),
		    closeStandalone: isPrevWhitespace((firstInverse || program).body)
		  };

		  if (block.openStrip.close) {
		    omitRight(program.body, null, true);
		  }

		  if (inverse) {
		    var inverseStrip = block.inverseStrip;

		    if (inverseStrip.open) {
		      omitLeft(program.body, null, true);
		    }

		    if (inverseStrip.close) {
		      omitRight(firstInverse.body, null, true);
		    }
		    if (block.closeStrip.open) {
		      omitLeft(lastInverse.body, null, true);
		    }

		    // Find standalone else statments
		    if (isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
		      omitLeft(program.body);
		      omitRight(firstInverse.body);
		    }
		  } else if (block.closeStrip.open) {
		    omitLeft(program.body, null, true);
		  }

		  return strip;
		};

		WhitespaceControl.prototype.MustacheStatement = function (mustache) {
		  return mustache.strip;
		};

		WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
		  /* istanbul ignore next */
		  var strip = node.strip || {};
		  return {
		    inlineStandalone: true,
		    open: strip.open,
		    close: strip.close
		  };
		};

		function isPrevWhitespace(body, i, isRoot) {
		  if (i === undefined) {
		    i = body.length;
		  }

		  // Nodes that end with newlines are considered whitespace (but are special
		  // cased for strip operations)
		  var prev = body[i - 1],
		      sibling = body[i - 2];
		  if (!prev) {
		    return isRoot;
		  }

		  if (prev.type === 'ContentStatement') {
		    return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
		  }
		}
		function isNextWhitespace(body, i, isRoot) {
		  if (i === undefined) {
		    i = -1;
		  }

		  var next = body[i + 1],
		      sibling = body[i + 2];
		  if (!next) {
		    return isRoot;
		  }

		  if (next.type === 'ContentStatement') {
		    return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
		  }
		}

		// Marks the node to the right of the position as omitted.
		// I.e. {{foo}}' ' will mark the ' ' node as omitted.
		//
		// If i is undefined, then the first child will be marked as such.
		//
		// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
		// content is met.
		function omitRight(body, i, multiple) {
		  var current = body[i == null ? 0 : i + 1];
		  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
		    return;
		  }

		  var original = current.value;
		  current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
		  current.rightStripped = current.value !== original;
		}

		// Marks the node to the left of the position as omitted.
		// I.e. ' '{{foo}} will mark the ' ' node as omitted.
		//
		// If i is undefined then the last child will be marked as such.
		//
		// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
		// content is met.
		function omitLeft(body, i, multiple) {
		  var current = body[i == null ? body.length - 1 : i - 1];
		  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
		    return;
		  }

		  // We omit the last node if it's whitespace only and not preceeded by a non-content node.
		  var original = current.value;
		  current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
		  current.leftStripped = current.value !== original;
		  return current.leftStripped;
		}

		exports['default'] = WhitespaceControl;
		module.exports = exports['default'];

	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		var _interopRequireDefault = __webpack_require__(8)['default'];

		exports.__esModule = true;
		exports.SourceLocation = SourceLocation;
		exports.id = id;
		exports.stripFlags = stripFlags;
		exports.stripComment = stripComment;
		exports.preparePath = preparePath;
		exports.prepareMustache = prepareMustache;
		exports.prepareRawBlock = prepareRawBlock;
		exports.prepareBlock = prepareBlock;

		var _Exception = __webpack_require__(12);

		var _Exception2 = _interopRequireDefault(_Exception);

		function SourceLocation(source, locInfo) {
		  this.source = source;
		  this.start = {
		    line: locInfo.first_line,
		    column: locInfo.first_column
		  };
		  this.end = {
		    line: locInfo.last_line,
		    column: locInfo.last_column
		  };
		}

		function id(token) {
		  if (/^\[.*\]$/.test(token)) {
		    return token.substr(1, token.length - 2);
		  } else {
		    return token;
		  }
		}

		function stripFlags(open, close) {
		  return {
		    open: open.charAt(2) === '~',
		    close: close.charAt(close.length - 3) === '~'
		  };
		}

		function stripComment(comment) {
		  return comment.replace(/^\{\{~?\!-?-?/, '').replace(/-?-?~?\}\}$/, '');
		}

		function preparePath(data, parts, locInfo) {
		  locInfo = this.locInfo(locInfo);

		  var original = data ? '@' : '',
		      dig = [],
		      depth = 0,
		      depthString = '';

		  for (var i = 0, l = parts.length; i < l; i++) {
		    var part = parts[i].part,

		    // If we have [] syntax then we do not treat path references as operators,
		    // i.e. foo.[this] resolves to approximately context.foo['this']
		    isLiteral = parts[i].original !== part;
		    original += (parts[i].separator || '') + part;

		    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
		      if (dig.length > 0) {
		        throw new _Exception2['default']('Invalid path: ' + original, { loc: locInfo });
		      } else if (part === '..') {
		        depth++;
		        depthString += '../';
		      }
		    } else {
		      dig.push(part);
		    }
		  }

		  return new this.PathExpression(data, depth, dig, original, locInfo);
		}

		function prepareMustache(path, params, hash, open, strip, locInfo) {
		  // Must use charAt to support IE pre-10
		  var escapeFlag = open.charAt(3) || open.charAt(2),
		      escaped = escapeFlag !== '{' && escapeFlag !== '&';

		  return new this.MustacheStatement(path, params, hash, escaped, strip, this.locInfo(locInfo));
		}

		function prepareRawBlock(openRawBlock, content, close, locInfo) {
		  if (openRawBlock.path.original !== close) {
		    var errorNode = { loc: openRawBlock.path.loc };

		    throw new _Exception2['default'](openRawBlock.path.original + ' doesn\'t match ' + close, errorNode);
		  }

		  locInfo = this.locInfo(locInfo);
		  var program = new this.Program([content], null, {}, locInfo);

		  return new this.BlockStatement(openRawBlock.path, openRawBlock.params, openRawBlock.hash, program, undefined, {}, {}, {}, locInfo);
		}

		function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
		  // When we are chaining inverse calls, we will not have a close path
		  if (close && close.path && openBlock.path.original !== close.path.original) {
		    var errorNode = { loc: openBlock.path.loc };

		    throw new _Exception2['default'](openBlock.path.original + ' doesn\'t match ' + close.path.original, errorNode);
		  }

		  program.blockParams = openBlock.blockParams;

		  var inverse = undefined,
		      inverseStrip = undefined;

		  if (inverseAndProgram) {
		    if (inverseAndProgram.chain) {
		      inverseAndProgram.program.body[0].closeStrip = close.strip;
		    }

		    inverseStrip = inverseAndProgram.strip;
		    inverse = inverseAndProgram.program;
		  }

		  if (inverted) {
		    inverted = inverse;
		    inverse = program;
		    program = inverted;
		  }

		  return new this.BlockStatement(openBlock.path, openBlock.params, openBlock.hash, program, inverse, openBlock.strip, inverseStrip, close && close.strip, this.locInfo(locInfo));
		}

	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		exports.__esModule = true;
		/*global define */

		var _isArray = __webpack_require__(13);

		var SourceNode = undefined;

		try {
		  /* istanbul ignore next */
		  if (false) {
		    // We don't support this in AMD environments. For these environments, we asusme that
		    // they are running on the browser and thus have no need for the source-map library.
		    var SourceMap = require('source-map');
		    SourceNode = SourceMap.SourceNode;
		  }
		} catch (err) {}

		/* istanbul ignore if: tested but not covered in istanbul due to dist build  */
		if (!SourceNode) {
		  SourceNode = function (line, column, srcFile, chunks) {
		    this.src = '';
		    if (chunks) {
		      this.add(chunks);
		    }
		  };
		  /* istanbul ignore next */
		  SourceNode.prototype = {
		    add: function add(chunks) {
		      if (_isArray.isArray(chunks)) {
		        chunks = chunks.join('');
		      }
		      this.src += chunks;
		    },
		    prepend: function prepend(chunks) {
		      if (_isArray.isArray(chunks)) {
		        chunks = chunks.join('');
		      }
		      this.src = chunks + this.src;
		    },
		    toStringWithSourceMap: function toStringWithSourceMap() {
		      return { code: this.toString() };
		    },
		    toString: function toString() {
		      return this.src;
		    }
		  };
		}

		function castChunk(chunk, codeGen, loc) {
		  if (_isArray.isArray(chunk)) {
		    var ret = [];

		    for (var i = 0, len = chunk.length; i < len; i++) {
		      ret.push(codeGen.wrap(chunk[i], loc));
		    }
		    return ret;
		  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
		    // Handle primitives that the SourceNode will throw up on
		    return chunk + '';
		  }
		  return chunk;
		}

		function CodeGen(srcFile) {
		  this.srcFile = srcFile;
		  this.source = [];
		}

		CodeGen.prototype = {
		  prepend: function prepend(source, loc) {
		    this.source.unshift(this.wrap(source, loc));
		  },
		  push: function push(source, loc) {
		    this.source.push(this.wrap(source, loc));
		  },

		  merge: function merge() {
		    var source = this.empty();
		    this.each(function (line) {
		      source.add(['  ', line, '\n']);
		    });
		    return source;
		  },

		  each: function each(iter) {
		    for (var i = 0, len = this.source.length; i < len; i++) {
		      iter(this.source[i]);
		    }
		  },

		  empty: function empty() {
		    var loc = arguments[0] === undefined ? this.currentLocation || { start: {} } : arguments[0];

		    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);
		  },
		  wrap: function wrap(chunk) {
		    var loc = arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];

		    if (chunk instanceof SourceNode) {
		      return chunk;
		    }

		    chunk = castChunk(chunk, this, loc);

		    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);
		  },

		  functionCall: function functionCall(fn, type, params) {
		    params = this.generateList(params);
		    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
		  },

		  quotedString: function quotedString(str) {
		    return '"' + (str + '').replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
		    .replace(/\u2029/g, '\\u2029') + '"';
		  },

		  objectLiteral: function objectLiteral(obj) {
		    var pairs = [];

		    for (var key in obj) {
		      if (obj.hasOwnProperty(key)) {
		        var value = castChunk(obj[key], this);
		        if (value !== 'undefined') {
		          pairs.push([this.quotedString(key), ':', value]);
		        }
		      }
		    }

		    var ret = this.generateList(pairs);
		    ret.prepend('{');
		    ret.add('}');
		    return ret;
		  },

		  generateList: function generateList(entries, loc) {
		    var ret = this.empty(loc);

		    for (var i = 0, len = entries.length; i < len; i++) {
		      if (i) {
		        ret.add(',');
		      }

		      ret.add(castChunk(entries[i], this, loc));
		    }

		    return ret;
		  },

		  generateArray: function generateArray(entries, loc) {
		    var ret = this.generateList(entries, loc);
		    ret.prepend('[');
		    ret.add(']');

		    return ret;
		  }
		};

		exports['default'] = CodeGen;
		module.exports = exports['default'];

		/* NOP */

	/***/ }
	/******/ ])
	});
	;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 配置文件
	 * @type {Object}
	 */
	!(module.exports = {
		online: {
			host: 'http://wantv.me'
		},
		dev: {
			host: 'http://127.0.0.1:3000'
		},
		cdz: {
			host: 'http://10.0.0.27'
		}
	})

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(9)
		, __webpack_require__(25)
		, __webpack_require__(2)
		, __webpack_require__(1)
		, __webpack_require__(13)
		, __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (handlebar, dgshowTmpl, ajax, docCookies, logWindow, $) {
			function Dg (parent, data, options) {
				this.parent = parent;
				data.isQuote = options.isQuote?options.isQuote:false;
				data.showFav = options.showFav?options.showFav:false;
				this.body = $(handlebar.compile(dgshowTmpl)(data));
				this.dgData = options.dgData;
				this.dgId = options.dgId;
				this.onShow = options&&options.onShow?options.onShow:function () {};
				this.onClose = options&&options.onClose?options.onClose:function () {};
				this.init();
			}
			Dg.prototype.init = function () {
				this.body.appendTo($(this.parent))
					.fadeIn(200);
				this.body.find('.close').click(function (event) {
					event.stopPropagation();
					this.close();
					this.onClose();
				}.bind(this))
				this.body.find('.preview .preWrap').mouseenter(function (event) {
					var target = event.target;
					var src = target.src;
					this.body.find('.pics img').attr('src', src);
				}.bind(this))
				var isLogined = docCookies.getItem('isLogined');
				if (isLogined=='true') {
					if (!!this.body.find('.linkWrap .favour').length) {
						ajax('/dgFav/isFav/'+this.dgId, 'GET', {}, function (data) {
							if (data.status == 0) {
								var isFav = data.msg.isFav;
								//已收藏
								if (isFav == 1) {
									this.body.find('.linkWrap .favour').hide();
									this.body.find('.linkWrap .cancelFavour').show();
								}
							} else {
								alert(data.msg);
							}
						}.bind(this))
					}
				}
				//保存
				this.body.find('.submit button').click(function () {
					this.submit();
				}.bind(this))
				//track
				this.body.find('.linkWrap a').click(function (event) {
					var linkId = event.target.dataset.id;
					ajax('/track/clickLink', 'POST', {
						link: linkId,
	  					video: this.parent.dataset.videoId
					}, function (data) {
						if (data.status == 0)
							console.log('link clicked track');
					})
				}.bind(this))
			}
			Dg.prototype.close = function () {
				this.body.remove();
			}
			Dg.prototype.submit = function () {
				var data = this.getFormData();
				if (data) {
					ajax('/tag2', 'POST', data, function (data) {
						if (data.status == 0) {
							this.close();
							this.onClose();
						}
					}.bind(this))
				}
			}
			Dg.prototype.getFormData = function () {
				var formData = {};
				formData.title = this.body.find('.slogan input').val();//tag标题
				if (!formData.title) {
					iva_alert($(this.parent), '标签显示文字不能为空');
					return false;
				}
				formData.dg = this.dgData.dg;
				formData.cat = 2;//引用
				formData.v = this.dgData.v;
				formData.x = this.dgData.x;
				formData.y = this.dgData.y;
				formData.time = this.dgData.time;
				return formData;
			}
			return Dg;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(9)
		, __webpack_require__(15)
		, __webpack_require__(2)
		, __webpack_require__(14)
		, __webpack_require__(1)
		, __webpack_require__(13)
		, __webpack_require__(4)
		, __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (handlebar, dgupdateTmpl, ajax, ivaAlert, docCookies, logWindow, environment, $) {
			function Dgupdate (parent, data, options) {
				this.parent = parent;
				this.body = $(handlebar.compile(dgupdateTmpl)(data));
				this.options = options;
				this.onShow = options&&options.onShow?options.onShow:function () {};
				this.onClose = options&&options.onClose?options.onClose:function () {};
				this.dgData = options&&options.dgData?options.dgData:{};
				this.init();
			}
			Dgupdate.prototype.init = function () {
				this.body.appendTo($(this.parent))
					.fadeIn(200);
				this.body.find('.slogan input').focus();
				this.body.find('.close').click(function (event) {
					event.stopPropagation();
					this.close();
					this.onClose();
				}.bind(this))
				//预览图片
				this.body.find('.chooWrap').mouseenter(function (event) {
					var target = event.target;
					var src = target.src;
					this.body.find('.pics img').attr('src', src);
				}.bind(this))
				//选择图片
				this.body.find('.chooWrap').click(function (event) {
					var currentTarget = event.currentTarget;
					var target = event.target;
					if ($(currentTarget).hasClass('crt')) {
						$(currentTarget).removeClass('crt');
					} else {
						if ($(currentTarget).parent().find('.crt').length == 5) {
							iva_alert($(this.parent), '最多选择5张图片');
							return
						}
						$(currentTarget).addClass('crt');
					}
				}.bind(this))
				//编辑
				this.body.find('.slogan .ivaiconfont').click(function () {
					this.body.find('.slogan input').focus();
				}.bind(this))
				this.body.find('.title .ivaiconfont').click(function () {
					this.body.find('.title input').focus();
				}.bind(this))
				this.body.find('.detail .ivaiconfont').click(function () {
					this.body.find('.detail textarea').focus();
				}.bind(this))
				this.body.find('.linkWrap.preview .ivaiconfont').click(function () {
					this.body.find('.linkWrap.preview').hide();
					this.body.find('.linkWrap.update').show();
				}.bind(this))
				this.body.find('.linkWrap.update .ivaiconfont').click(function () {
					this.body.find('.linkWrap.preview').show();
					this.body.find('.linkWrap.update').hide();
					var edits = this.body.find('.linkWrap.update .editWrap');
					var links = this.body.find('.linkWrap.preview a');
					links.eq(0)
						.attr('href', edits[0].children[1].value)
						.text(edits[0].children[0].value);
					links.eq(1)
						.attr('href', edits[1].children[1].value)
						.text(edits[1].children[0].value);
				}.bind(this))
				//保存
				this.body.find('.submit button').click(function () {
					this.submit();
				}.bind(this))
			}
			Dgupdate.prototype.show = function () {
				this.body.show();
			}
			Dgupdate.prototype.hide = function () {
				this.body.hide();
			}
			Dgupdate.prototype.close = function () {
				this.body.remove();
			}
			Dgupdate.prototype.submit = function () {
				var data = this.getFormData();
				if (!data)
					return
				if (docCookies.getItem('isLogined') == 'true') {
					if (data) {
						ajax('/tag2', 'POST', data, function (data) {
							if (data.status == 0) {
								this.close();
								this.onClose();
								this.options.sideBar.getDgList();
							}
						}.bind(this))
					}
				} else {
					this.hide();
					logWindow($(this.parent), function (data) {
						docCookies.setItem('userId', data['_id']);
						docCookies.setItem('isLogined', true);
						docCookies.setItem('crossDomainSess', data.sess);
						docCookies.setItem('crossDomainSid', data.sid);
						this.show();
						this.options.sideBar.getUserInfo();
						this.options.sideBar.getDgList();
						$('body').append('<script src="'+environment.host+'/setCookie.js?sess='+data.sess+'"></script>');
					}.bind(this), function () {
						this.onClose();
					}.bind(this))
				}
			}
			Dgupdate.prototype.getFormData = function () {
				var formData = {};
				formData.title = this.body.find('.slogan input').val();//tag标题
				if (!formData.title) {
					iva_alert($(this.parent), '标签显示文字不能为空');
					return false;
				}
				formData.cat = 3;//创建
				formData.v = this.dgData.v;
				formData.x = this.dgData.x;
				formData.y = this.dgData.y;
				formData.time = this.dgData.time;
				formData.dg_title = this.body.find('.title input').val();//dg标题
				formData.pic = this.body.find('.picWrap .choose .crt img').get().map(function (x, index) {
					return {
						url: x.src
					}
				})
				if (!formData.pic.length) {
					iva_alert($(this.parent), '至少添加一张图片');
					return false;
				}
				formData.link = this.body.find('.linkWrap .editWrap').get().map(function (x, index) {
					return {
						name: x.children[0].value,
						url: x.children[1].value
					}
				})
				if (!formData.link[0].url && !formData.link[1].url) {
					iva_alert($(this.parent), '至少添加一个链接');
					return false;
				}
				formData.desc = this.body.find('.detail textarea').val();
				if (!formData.desc) {
					iva_alert($(this.parent), '描述不能为空');
					return false;
				}
				return formData;
			}
			return Dgupdate;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(9),__webpack_require__(2),__webpack_require__(26)], __WEBPACK_AMD_DEFINE_RESULT__ = function (handlebar,ajax,login) {
	    return function (container,callback,close_callback) {
	        login(container,callback,close_callback);
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(27),__webpack_require__(28),__webpack_require__(29),__webpack_require__(30),__webpack_require__(31),__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (push_queue,pop_queue,queue,queue_empty,is_english_symbol,$) {
		return iva_alert = function (container,content) {
			if(!$('.u-iva-alert').length){
				container.append("<div class='u-iva-alert'></div>");
			}
			var $container = $('.u-iva-alert');
			var push_timeout;
			var alert_info = function() {
				if (queue_empty() == true){
					queue.start_flag = false
					clearTimeout(push_timeout);
					return;
				}else{
					$container.html(queue.queue[0]);
					// console.log(queue.queue[0].length);
					var title_length = 0;
					for(k in queue.queue[0]){
						if (is_english_symbol(queue.queue[0][k]))
							title_length += 0.5;
						else
							title_length += 1;
					}
					if(title_length <= 10){
						$container.css({
							width: '150px'
						});
					}else{
						$container.css({
							width: 14 * title_length + 10 + 'px'
						});
					}
					setTimeout(function(){
						$container.css({
							top: '10px'
						});
					},50);
					setTimeout(function(){
							$container.css({
								top: '-50px'
							});
					},2500);
					push_timeout = setTimeout(function() {
						pop_queue()
						alert_info()
					},3000);
				}
			}

			push_queue(content);
			if (queue.start_flag != false){
				return;
			}else{
				queue.start_flag = true;
				alert_info();
			}
		}
		
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
		var tmpl = '<div class="m-dgmask" style="display:none;">\
						<div class="m-dgshow m-dgshow-update">\
							<div class="slogan">\
								<div class="ligature"></div>\
								<input class="u-input" type="text" placeholder="标签显示文字" maxlength="12"/>\
								<div class="u-icon ivaiconfont">&#xe62d;</div>\
							</div>\
							<div class="close"></div>\
							<div class="head f-cb">\
								<div class="title">\
									<input class="u-input" type="text" placeholder="云窗标题" value="{{{keyword}}}" maxlength="12"/>\
									<div class="u-icon ivaiconfont">&#xe62d;</div>\
								</div>\
							</div>\
							<div class="body">\
								<div class="summary f-cb">\
									<div class="picWrap">\
										<div class="pics">\
											<img src="{{img.[0].thumbURL}}">\
										</div>\
										<div class="choose f-cb">\
											{{#each img}}\
											<div class="chooWrap">\
												<img src="{{{thumbURL}}}">\
											</div>\
											{{/each}}\
										</div>\
									</div>\
									<div class="linkWrap shadow preview">\
										<a target="_blank" href="{{{img.[0].[fromURL]}}}">{{{img.[0].[fromPageTitleEnc]}}}</a>\
										<a target="_blank" href="{{{img.[1].[fromURL]}}}">{{{img.[1].[fromPageTitleEnc]}}}</a>\
										<div class="u-icon ivaiconfont">&#xe62d;</div>\
									</div>\
									<div class="linkWrap shadow update" style="display:none;">\
										<div class="editWrap">\
											<input class="u-input" type="text" placeholder="链接的文字" maxlength="16" {{#if img.[0].[fromPageTitleEnc]}}value="{{{img.[0].[fromPageTitleEnc]}}}"{{/if}}/>\
											<input class="u-input" type="text" placeholder="链接的url" {{#if img.[0].[fromURL]}}value="{{{img.[0].[fromURL]}}}"{{/if}}/>\
										</div>\
										<div class="editWrap">\
											<input class="u-input" type="text" placeholder="链接的文字" maxlength="16" {{#if img.[1].[fromPageTitleEnc]}}value="{{{img.[1].[fromPageTitleEnc]}}}"{{/if}}/>\
											<input class="u-input" type="text" placeholder="链接的url" {{#if img.[1].[fromURL]}}value="{{{img.[1].[fromURL]}}}"{{/if}}/>\
										</div>\
										<div class="u-icon ivaiconfont">&#xe93d;</div>\
									</div>\
								</div>\
								<div class="detail shadow">\
									<div class="tab">\
										<span>详情</span>\
										<div class="u-icon ivaiconfont">&#xe62d;</div>\
									</div>\
									<textarea class="u-textarea" placeholder="描述文字">{{{text}}}</textarea>\
								</div>\
							</div>\
							<div class="submit">\
								<div class="ligature"></div>\
								<button>创&nbsp;&nbsp;建</button>\
							</div>\
						</div>\
					</div>';
		return tmpl;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};

	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {

	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;

	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};

	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;

	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}


	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;

	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;

	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";

	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(17), __webpack_require__(11), __webpack_require__(12), __webpack_require__(5), __webpack_require__(1), __webpack_require__(7), __webpack_require__(32), __webpack_require__(33), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(player, analyze_video, sync_process, value, create_dom, v_play, v_pause, create_custom_element, add_dom_event_custom, $) {
		    return window.venvy_player = function(container, video_url, time, params) {
		      var after_analyze, consions, pause_callback, play_callback, stamp, start_seek_callback, stop_callback, video_poster, x;
		      if (params != null) {
		        play_callback = params.play_callback;
		        pause_callback = params.pause_callback;
		        stop_callback = params.stop_callback;
		        start_seek_callback = params.start_seek_callback;
		        video_poster = params.video_poster;
		      }
		      stamp = new Date().getTime();
		      container = player(container, video_url);
		      value["cur_play_video" + stamp] = 0;
		      value["cur_volume" + stamp] = 1;
		      value["mute_flag" + stamp] = false;
		      value["cur_format" + stamp] = 'HD';
		      container.append("<div class='container" + stamp + "' style='height:100%;width:100%;position:relative;background:black'></div>");
		      container = $(".container" + stamp);
		      container.css({
		        '-moz-user-select': 'none',
		        '-webkit-user-select': 'none',
		        'user-select': 'none'
		      });
		      create_dom(container);
		      x = void 0;
		      consions = function() {
		        value["need_to_return_clarify" + stamp] = true;
		        analyze_video(video_url, after_analyze, venvy_player.get_time());
		        return container.find('.venvy_videos').remove();
		      };
		      after_analyze = function(address, total_time, cur_site, time) {
		        var cur_format;
		        x = setInterval(function() {
		          if (container.find('.cur_player')[0] != null) {
		            if ((container.find('.cur_player')[0].error || container.find('.back_player')[0].error) != null) {
		              console.log(container.find('.back_player')[0].error);
		              console.log(container.find('.back_player').attr('src'));
		              if ((container.find('.back_player').attr('src')) !== '') {
		                container.find('.is_buffering').css({
		                  display: 'block'
		                });
		                container.find('.is_buffering_text').html('线路故障，正在为您切换新线路！');
		                console.log('error!!');
		                return consions();
		              }
		            }
		          }
		        }, 1000);
		        value["cur_address" + stamp] = address;
		        value["total_time" + stamp] = total_time;
		        value["cur_site" + stamp] = cur_site;
		        cur_format = value["cur_format" + stamp];
		        return sync_process(container, stamp, cur_format, time, play_callback, pause_callback, stop_callback, start_seek_callback, video_poster);
		      };
		      if ((video_url.substr(-3)) === 'mp4') {
		        create_custom_element(container, time, video_url, stamp, play_callback, pause_callback, stop_callback, start_seek_callback, video_poster);
		      } else {
		        analyze_video(video_url, after_analyze, time);
		      }
		      return {
		        play: function() {
		          return v_play(container, play_callback);
		        },
		        pause: function() {
		          return v_pause(container, pause_callback);
		        },
		        set_time: function(time) {
		          return venvy_player.set_time(time);
		        },
		        get_time: function() {
		          return venvy_player.get_time();
		        },
		        hide_the_player_bar: function() {
		          return container.find('.player_control_bar').hide();
		        },
		        show_the_player_bar: function() {
		          return container.find('.player_control_bar').show();
		        }
		      };
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
		    return function(container, callback) {
		      var $cur_player, $player_control_bar_toggle;
		      $player_control_bar_toggle = container.find('.player_control_bar_toggle');
		      $cur_player = container.find('.cur_player');
		      $player_control_bar_toggle.css({
		        'background-image': "url('http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/pause.png')"
		      });
		      if ($('.venvy_videos').length) {
		        $cur_player[0].play();
		      }
		      if (callback != null) {
		        return callback();
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */
		!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b="length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){
		return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ba=/<([\w:]+)/,ca=/<|&#?\w+;/,da=/<(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ia={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length>0&&ma(g,!i&&oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&&c||(qa=(qa||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),"normal"===e&&b in Da&&(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),
		void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ab," ").indexOf(b)>=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&":"?")+"_="+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"=="function"&&__webpack_require__(3)&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});
		//# sourceMappingURL=jquery.min.map

	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

		/* WEBPACK VAR INJECTION */}.call(exports, {"jQuery":true}))

	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(1), __webpack_require__(7), __webpack_require__(8), __webpack_require__(9), __webpack_require__(10), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(create_dom, v_play, v_pause, isElement, isString, isjQuery, $) {
		    return function(cur_container, url) {
		      var container;
		      container = void 0;
		      if ((isElement(cur_container)) === true) {
		        container = $(cur_container);
		      } else if ((isjQuery(cur_container)) === true) {
		        container = cur_container;
		      } else if ((isString(cur_container)) === true) {
		        container = $("#" + cur_container);
		      } else {
		        return 0;
		      }
		      container.css({
		        'overflow': 'hidden',
		        'background': 'black'
		      });
		      if ((container.css('position')) === 'static') {
		        container.css('position', 'relative');
		      }
		      return container;
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(6), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(sonic, $) {
		    return function(container) {
		      var square;
		      container.append("<div class='player_control_bar'>\n    <div class='player_control_bar_hover_time'></div>\n    <div class='player_control_bar_toggle'></div>\n    <div class='player_control_bar_current'>00:00</div>\n    <div class='player_control_bar_progress'>\n        <div class='player_control_bar_click player_control_bar_candrag'></div>\n        <div class='player_control_bar_progress_played'></div>\n        <div class='player_control_bar_progress_buffer'></div>\n        <div class='player_control_bar_dot player_control_bar_candrag'>\n            <div class='player_control_bar_dot_inside'></div>\n            <div class='player_control_bar_dot_inside_dot'></div>\n        </div>\n    </div>\n    <div class='player_control_bar_total'></div>\n    <div class='player_control_bar_volume_button  player_control_bar_volume'></div>\n    <div class='player_control_bar_volume_bar player_control_bar_volume'>\n        <div class='player_control_bar_volume_control'>\n            <div class='player_control_bar_volume_click'></div>\n            <div class='player_control_bar_volume_show'></div>\n        </div>\n    </div>\n    <div class='player_control_bar_format_button player_control_bar_format player_control_bar_need_red'>高清</div>\n    <div class='player_control_bar_format_select player_control_bar_format'>\n        <div class='player_control_bar_format_1080p player_control_bar_need_red'>1080p</div>\n        <div class='player_control_bar_format_720p player_control_bar_need_red'>720p</div>\n        <div class='player_control_bar_format_super player_control_bar_need_red'>超清</div>\n        <div class='player_control_bar_format_high player_control_bar_need_red'>高清</div>\n        <div class='player_control_bar_format_normal player_control_bar_need_red'>标清</div>\n    </div>\n    <div class='player_control_bar_fullscreen'></div>\n</div>\n<div class='player_for_user' style='position:absolute;z-index:10;height:100%;width:100%'></div>\n<div class='is_buffering' style='display:none;height:100%;width:100%;position:absolute;z-index:100;background-color:rgba(0,0,0,0.5)'>\n    <div class='is_buffering_inside' style='height:100px;width:120px;position:absolute;left:50%;top:50%;margin-left:-60px;margin-top:-50px'></div>\n    <div class='is_buffering_text' style='height:20px;width:300px;position:absolute;left:50%;top:50%;margin-left:-150px;text-align:center;color:white'>线路故障，正在为您切换新线路！</div>\n</div>");
		      square = new Sonic({
		        width: 100,
		        height: 50,
		        stepsPerFrame: 1,
		        trailLength: 1,
		        pointDistance: .1,
		        fps: 15,
		        padding: 10,
		        fillColor: '#FFFFFF',
		        setup: function() {
		          this._.lineWidth = 20;
		        },
		        path: [['line', 0, 20, 100, 20], ['line', 100, 20, 0, 20]]
		      });
		      container.find('.is_buffering_inside').append(square.canvas);
		      return square.play();
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
		 * Sonic 0.2.1
		 * --
		 * https://github.com/padolsey/Sonic
		 * --
		 * This program is free software. It comes without any warranty, to
		 * the extent permitted by applicable law. You can redistribute it
		 * and/or modify it under the terms of the Do What The Fuck You Want
		 * To Public License, Version 2, as published by Sam Hocevar. See
		 * http://sam.zoy.org/wtfpl/COPYING for more details. */ 

		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (function(){

			var emptyFn = function(){};

			function Sonic(d) {

				this.converter = d.converter;

				this.data = d.path || d.data;
				this.imageData = [];

				this.multiplier = d.multiplier || 1;
				this.padding = d.padding || 0;

				this.fps = d.fps || 25;

				this.stepsPerFrame = ~~d.stepsPerFrame || 1;
				this.trailLength = d.trailLength || 1;
				this.pointDistance = d.pointDistance || .05;

				this.domClass = d.domClass || 'sonic';

				this.backgroundColor = d.backgroundColor || 'rgba(0,0,0,0)';
				this.fillColor = d.fillColor;
				this.strokeColor = d.strokeColor;

				this.stepMethod = typeof d.step == 'string' ?
					stepMethods[d.step] :
					d.step || stepMethods.square;

				this._setup = d.setup || emptyFn;
				this._teardown = d.teardown || emptyFn;
				this._preStep = d.preStep || emptyFn;

				this.pixelRatio = d.pixelRatio || null;

				this.width = d.width;
				this.height = d.height;

				this.fullWidth = this.width + 2 * this.padding;
				this.fullHeight = this.height + 2 * this.padding;

				this.domClass = d.domClass || 'sonic';

				this.setup();

			}

			var argTypes = Sonic.argTypes = {
				DIM: 1,
				DEGREE: 2,
				RADIUS: 3,
				OTHER: 0
			};

			var argSignatures = Sonic.argSignatures = {
				arc: [1, 1, 3, 2, 2, 0],
				bezier: [1, 1, 1, 1, 1, 1, 1, 1],
				line: [1,1,1,1]
			};

			var pathMethods = Sonic.pathMethods = {
				bezier: function(t, p0x, p0y, p1x, p1y, c0x, c0y, c1x, c1y) {
					
				    t = 1-t;

				    var i = 1-t,
				        x = t*t,
				        y = i*i,
				        a = x*t,
				        b = 3 * x * i,
				        c = 3 * t * y,
				        d = y * i;

				    return [
				        a * p0x + b * c0x + c * c1x + d * p1x,
				        a * p0y + b * c0y + c * c1y + d * p1y
				    ]

				},
				arc: function(t, cx, cy, radius, start, end) {

				    var point = (end - start) * t + start;

				    var ret = [
				        (Math.cos(point) * radius) + cx,
				        (Math.sin(point) * radius) + cy
				    ];

				    ret.angle = point;
				    ret.t = t;

				    return ret;

				},
				line: function(t, sx, sy, ex, ey) {
					return [
						(ex - sx) * t + sx,
						(ey - sy) * t + sy
					]
				}
			};

			var stepMethods = Sonic.stepMethods = {
				
				square: function(point, i, f, color, alpha) {
					this._.fillRect(point.x - 3, point.y - 3, 6, 6);
				},

				fader: function(point, i, f, color, alpha) {

					this._.beginPath();

					if (this._last) {
						this._.moveTo(this._last.x, this._last.y);
					}

					this._.lineTo(point.x, point.y);
					this._.closePath();
					this._.stroke();

					this._last = point;

				}

			}

			Sonic.prototype = {

				calculatePixelRatio: function(){

					var devicePixelRatio = window.devicePixelRatio || 1;
					var backingStoreRatio = this._.webkitBackingStorePixelRatio
							|| this._.mozBackingStorePixelRatio
							|| this._.msBackingStorePixelRatio
							|| this._.oBackingStorePixelRatio
							|| this._.backingStorePixelRatio
							|| 1;

					return devicePixelRatio / backingStoreRatio;
				},

				setup: function() {

					var args,
						type,
						method,
						value,
						data = this.data;

					this.canvas = document.createElement('canvas');
					this._ = this.canvas.getContext('2d');

					if(this.pixelRatio == null){
						this.pixelRatio = this.calculatePixelRatio();
					}

					this.canvas.className = this.domClass;

					if(this.pixelRatio != 1){

						this.canvas.style.height = this.fullHeight + 'px';
						this.canvas.style.width = this.fullWidth + 'px';

						this.fullHeight *= this.pixelRatio;
						this.fullWidth  *= this.pixelRatio;

						this.canvas.height = this.fullHeight;
						this.canvas.width = this.fullWidth;

						this._.scale(this.pixelRatio, this.pixelRatio);

					}   else{

						this.canvas.height = this.fullHeight;
						this.canvas.width = this.fullWidth;

					}

					this.points = [];

					for (var i = -1, l = data.length; ++i < l;) {

						args = data[i].slice(1);
						method = data[i][0];

						if (method in argSignatures) for (var a = -1, al = args.length; ++a < al;) {

							type = argSignatures[method][a];
							value = args[a];

							switch (type) {
								case argTypes.RADIUS:
									value *= this.multiplier;
									break;
								case argTypes.DIM:
									value *= this.multiplier;
									value += this.padding;
									break;
								case argTypes.DEGREE:
									value *= Math.PI/180;
									break;
							};

							args[a] = value;

						}

						args.unshift(0);

						for (var r, pd = this.pointDistance, t = pd; t <= 1; t += pd) {
							
							// Avoid crap like 0.15000000000000002
							t = Math.round(t*1/pd) / (1/pd);

							args[0] = t;

							r = pathMethods[method].apply(null, args);

							this.points.push({
								x: r[0],
								y: r[1],
								progress: t
							});

						}

					}

					this.frame = 0;

					if (this.converter && this.converter.setup) {
						this.converter.setup(this);
					}

				},

				prep: function(frame) {

					if (frame in this.imageData) {
						return;
					}

					this._.clearRect(0, 0, this.fullWidth, this.fullHeight);
					this._.fillStyle = this.backgroundColor;
					this._.fillRect(0, 0, this.fullWidth, this.fullHeight);

					var points = this.points,
						pointsLength = points.length,
						pd = this.pointDistance,
						point,
						index,
						frameD;

					this._setup();

					for (var i = -1, l = pointsLength*this.trailLength; ++i < l && !this.stopped;) {

						index = frame + i;

						point = points[index] || points[index - pointsLength];

						if (!point) continue;

						this.alpha = Math.round(1000*(i/(l-1)))/1000;

						this._.globalAlpha = this.alpha;

						if (this.fillColor) {
							this._.fillStyle = this.fillColor;
						}
						if (this.strokeColor) {
							this._.strokeStyle = this.strokeColor;
						}

						frameD = frame/(this.points.length-1);
						indexD = i/(l-1);

						this._preStep(point, indexD, frameD);
						this.stepMethod(point, indexD, frameD);

					} 

					this._teardown();

					this.imageData[frame] = (
						this._.getImageData(0, 0, this.fullWidth, this.fullWidth)
					);

					return true;

				},

				draw: function() {
					
					if (!this.prep(this.frame)) {

						this._.clearRect(0, 0, this.fullWidth, this.fullWidth);

						this._.putImageData(
							this.imageData[this.frame],
							0, 0
						);

					}

					if (this.converter && this.converter.step) {
						this.converter.step(this);
					}

					if (!this.iterateFrame()) {
						if (this.converter && this.converter.teardown) {
							this.converter.teardown(this);
							this.converter = null;
						}
					}

				},

				iterateFrame: function() {
					
					this.frame += this.stepsPerFrame;
					
					if (this.frame >= this.points.length) {
						this.frame = 0;
						return false;
					}

					return true;

				},

				play: function() {

					this.stopped = false;

					var hoc = this;

					this.timer = setInterval(function(){
						hoc.draw();
					}, 1000 / this.fps);

				},
				stop: function() {

					this.stopped = true;
					this.timer && clearInterval(this.timer);

				}
			};

			window.Sonic = Sonic;

		}()), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
		    return function(container, callback) {
		      var $cur_player, $player_control_bar_toggle;
		      $player_control_bar_toggle = container.find('.player_control_bar_toggle');
		      $cur_player = container.find('.cur_player');
		      $player_control_bar_toggle.css({
		        'background-image': "url('http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/play.png')"
		      });
		      $cur_player[0].pause();
		      if (callback != null) {
		        return callback();
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		    return function(o) {
		      if (typeof HTMLElement === 'object') {
		        return o instanceof HTMLElement;
		      } else {
		        return o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string';
		      }
		    };
		  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		    return function(str) {
		      return (typeof str === 'string') && str.constructor === String;
		    };
		  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(jQuery) {
		    return function(obj) {
		      return obj instanceof jQuery;
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(13), __webpack_require__(15), __webpack_require__(25), __webpack_require__(18), __webpack_require__(26), __webpack_require__(19), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, add_video_clarity, create_play_list, create_h5_element, create_video, add_dom_event, create_flash_element, $) {
		    return function(container, stamp, cur_format, time, play_callback, pause_callback, stop_callback, start_seek_callback, video_poster) {
		      var cur_address, cur_list, cur_site, cur_source_format, play_list, total_time, total_video;
		      value["cur_play_video" + stamp] = 0;
		      cur_address = value["cur_address" + stamp];
		      total_time = value["total_time" + stamp];
		      cur_site = value["cur_site" + stamp];
		      if (value["need_to_return_clarify" + stamp] !== false) {
		        add_video_clarity(container, cur_address, cur_site, stamp);
		        value["need_to_return_clarify" + stamp] = false;
		      }
		      console.log(value["cur_format" + stamp]);
		      play_list = create_play_list(container, cur_address, cur_format, cur_site, stamp);
		      cur_source_format = play_list.cur_source_format;
		      cur_list = play_list.cur_list;
		      total_time = play_list.total_time;
		      total_video = play_list.total_video;
		      if (cur_source_format === 'flv') {
		        console.log(value["cur_format" + stamp]);
		        create_flash_element(container, total_time, time, stamp);
		        create_video(container, cur_list, 'flv', value["cur_play_video" + stamp], stamp);
		      } else {
		        console.log(value["cur_format" + stamp]);
		        create_h5_element(container, cur_list, 'mp4', time, total_time, total_video, stamp, video_poster);
		        create_video(container, cur_list, cur_source_format, value["cur_play_video" + stamp], stamp);
		      }
		      return add_dom_event(container, cur_list, total_time, cur_source_format, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {

		(function() {
		  !(module.exports = {
		    cur_play_video: 0,
		    total_video: 0,
		    first_open_flag: true,
		    dot_move_flag: false
		  });

		}).call(this);


	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(14), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, fix_json_to_normal, $) {
		    return function(container, cur_address, cur_site, stamp) {
		      var $player_control_bar_format, $player_control_bar_format_1080p, $player_control_bar_format_720p, $player_control_bar_format_button, $player_control_bar_format_high, $player_control_bar_format_normal, $player_control_bar_format_select, $player_control_bar_format_super;
		      console.log(cur_site);
		      $player_control_bar_format_button = container.find('.player_control_bar_format_button');
		      $player_control_bar_format = container.find('.player_control_bar_format');
		      $player_control_bar_format_select = container.find('.player_control_bar_format_select');
		      $player_control_bar_format_1080p = container.find('.player_control_bar_format_1080p');
		      $player_control_bar_format_720p = container.find('.player_control_bar_format_720p');
		      $player_control_bar_format_super = container.find('.player_control_bar_format_super');
		      $player_control_bar_format_high = container.find('.player_control_bar_format_high');
		      $player_control_bar_format_normal = container.find('.player_control_bar_format_normal');
		      cur_address = fix_json_to_normal(cur_address, stamp);
		      if (($.inArray('SD', Object.keys(cur_address))) !== -1) {
		        $player_control_bar_format_normal.css({
		          'display': 'block'
		        });
		      }
		      if (($.inArray('SuperHD', Object.keys(cur_address))) !== -1) {
		        $player_control_bar_format_super.css({
		          'display': 'block'
		        });
		      } else {
		        value["cur_format" + stamp] = 'HD';
		        $player_control_bar_format_button.html('高清');
		      }
		      if (($.inArray('HD', Object.keys(cur_address))) !== -1) {
		        $player_control_bar_format_high.css({
		          'display': 'block'
		        });
		      } else {
		        value["cur_format" + stamp] = 'SD';
		        $player_control_bar_format_button.html('标清');
		      }
		      if (($.inArray('720p', Object.keys(cur_address))) !== -1) {
		        $player_control_bar_format_720p.css({
		          'display': 'block'
		        });
		      }
		      if (($.inArray('1080p', Object.keys(cur_address))) !== -1) {
		        return $player_control_bar_format_1080p.css({
		          'display': 'block'
		        });
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, $) {
		    return function(cur_address, stamp) {
		      var site;
		      site = value["cur_site" + stamp];
		      if (($.inArray('BLUE', Object.keys(cur_address))) !== -1) {
		        cur_address['1080p'] = cur_address.BLUE;
		        delete cur_address.BLUE;
		      }
		      if (($.inArray('720P', Object.keys(cur_address))) !== -1) {
		        cur_address['SuperHD'] = cur_address['720P'];
		        delete cur_address['720P'];
		      }
		      if (($.inArray('Orignal', Object.keys(cur_address))) !== -1) {
		        cur_address['1080p'] = cur_address.Orignal;
		        delete cur_address.Orignal;
		      }
		      if (($.inArray('MP4-HD', Object.keys(cur_address))) !== -1) {
		        cur_address.HD = cur_address['MP4-HD'];
		        delete cur_address['MP4-HD'];
		      }
		      if (($.inArray('1080P', Object.keys(cur_address))) !== -1) {
		        cur_address['1080p'] = cur_address['1080P'];
		        delete cur_address['1080P'];
		      }
		      return cur_address;
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(16), __webpack_require__(19), __webpack_require__(25), __webpack_require__(24), __webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(change_video, create_flash_element, create_h5_element, format_time, value, $) {
		    return function(container, cur_address, format, site, stamp) {
		      var $player_control_bar_total, cur_list, cur_source_format, first_open_flag, i, len, total_time, total_video, video_slice;
		      console.log(cur_address);
		      first_open_flag = value["first_open_flag" + stamp];
		      cur_source_format = void 0;
		      $player_control_bar_total = container.find('.player_control_bar_total');
		      cur_list = cur_address[format];
		      total_time = 0;
		      for (i = 0, len = cur_list.length; i < len; i++) {
		        video_slice = cur_list[i];
		        total_time += video_slice.seconds;
		      }
		      $player_control_bar_total.html(format_time(total_time));
		      total_video = cur_list.length;
		      site = value["cur_site" + stamp];
		      if (site === 'letv') {
		        cur_list[0].seconds = total_time;
		      }
		      if (/(iqiyi|hunantv|tudou)/.test(site)) {
		        cur_source_format = 'flv';
		      } else if (/(youku)/.test(site)) {
		        if (cur_list[0].url.match('/flv/') != null) {
		          cur_source_format = 'flv';
		        } else {
		          cur_source_format = 'mp4';
		        }
		      } else {
		        cur_source_format = 'mp4';
		      }
		      return {
		        cur_source_format: cur_source_format,
		        cur_list: cur_list,
		        total_video: total_video,
		        total_time: total_time
		      };
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(17), __webpack_require__(16), __webpack_require__(18), __webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(analyze_video, change_video, create_video, value, $) {
		    return function(e, ex_time, container, cur_list, cur_source_format, stamp, stop_callback) {
		      var $back_player, $cur_player, $is_buffering, cur_play_video, total_video;
		      cur_play_video = value["cur_play_video" + stamp];
		      $cur_player = container.find(".cur_player");
		      $back_player = container.find(".back_player");
		      $is_buffering = container.find('.is_buffering');
		      $cur_player.unbind('ended');
		      total_video = cur_list.length;
		      if (e != null) {
		        console.log("1 is " + cur_play_video);
		        $cur_player.css({
		          'z-index': -1
		        });
		        $back_player.css({
		          'z-index': 2
		        });
		        $back_player[0].play();
		        if ($cur_player[0].volume === 0) {
		          $back_player[0].volume = 0;
		        } else {
		          $back_player[0].volume = $cur_player[0].volume;
		        }
		        if (cur_play_video < total_video) {
		          value["cur_play_video" + stamp] = ++cur_play_video;
		        }
		        $cur_player.removeClass('cur_player');
		        $cur_player.addClass('back_player');
		        $back_player.removeClass('back_player');
		        $back_player.addClass('cur_player');
		        create_video(container, cur_list, cur_source_format, cur_play_video);
		        if (cur_play_video === total_video - 1) {
		          return $back_player.one('ended', function() {
		            return stop_callback();
		          });
		        } else {
		          return $back_player.one('ended', function() {
		            return __webpack_require__(16)(1, void 0, container, cur_list, cur_source_format, stamp, stop_callback);
		          });
		        }
		      } else {
		        console.log("3 is " + cur_play_video);
		        $back_player[0].currentTime = ex_time;
		        if ((navigator.userAgent.match('Firefox')) != null) {
		          return $back_player.one('timeupdate', function() {
		            if ($cur_player[0].volume === 0) {
		              $back_player[0].volume = 0;
		            } else {
		              $back_player[0].volume = $cur_player[0].volume;
		            }
		            $cur_player.removeClass('cur_player');
		            $cur_player.addClass('back_player');
		            $back_player.removeClass('back_player');
		            $back_player.addClass('cur_player');
		            create_video(container, cur_list, cur_source_format, cur_play_video);
		            $back_player[0].play();
		            $back_player.one('timeupdate', function() {
		              $is_buffering.css({
		                display: 'none'
		              });
		              return $back_player.one('timeupdate', function() {
		                $cur_player.css({
		                  'z-index': -1
		                });
		                return $back_player.css({
		                  'z-index': 2
		                });
		              });
		            });
		            if (cur_play_video === total_video - 1) {
		              return $back_player.one('ended', function() {
		                return stop_callback();
		              });
		            } else {
		              return $back_player.one('ended', function() {
		                return __webpack_require__(16)(1, void 0, container, cur_list, cur_source_format, stamp, stop_callback);
		              });
		            }
		          });
		        } else {
		          return $back_player.one('timeupdate', function() {
		            $cur_player.css({
		              'z-index': -1
		            });
		            $back_player.css({
		              'z-index': 2
		            });
		            if ($cur_player[0].volume === 0) {
		              $back_player[0].volume = 0;
		            } else {
		              $back_player[0].volume = $cur_player[0].volume;
		            }
		            $cur_player.removeClass('cur_player');
		            $cur_player.addClass('back_player');
		            $back_player.removeClass('back_player');
		            $back_player.addClass('cur_player');
		            create_video(container, cur_list, cur_source_format, cur_play_video);
		            $back_player[0].play();
		            $back_player.one('timeupdate', function() {
		              return $is_buffering.css({
		                display: 'none'
		              });
		            });
		            if (cur_play_video === total_video - 1) {
		              return $back_player.one('ended', function() {
		                return stop_callback();
		              });
		            } else {
		              return $back_player.one('ended', function() {
		                return __webpack_require__(16)(1, void 0, container, cur_list, cur_source_format, stamp, stop_callback);
		              });
		            }
		          });
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(13), __webpack_require__(17), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(add_video_clarity, analyze_video, $) {
		    return function(video_url, callback, time) {
		      return $.ajax({
		        type: 'get',
		        url: 'http://183.131.78.92/parse',
		        dataType: 'jsonp',
		        timeout: 10000,
		        async: true,
		        data: {
		          url: video_url,
		          user_ip: '116.231.224.199',
		          user_agent: navigator.userAgent
		        },
		        beforeSend: function() {},
		        success: function(data) {
		          var cur_site, total_time;
		          if (data != null) {
		            cur_site = data.site;
		            total_time = data.time_length;
		            console.log('parse complete');
		            return callback(data.segs, total_time, cur_site, time);
		          }
		        },
		        error: function() {
		          console.log('error');
		          return __webpack_require__(17)(video_url, callback, time);
		        }
		      });
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, $) {
		    return function(container, cur_list, cur_source_format, cur_play_video, stamp) {
		      var $back_player, $cur_player, i, len, part, start_init, state, total_video, urls;
		      total_video = cur_list.length;
		      if (cur_source_format === 'flv') {
		        console.log('is creating');
		        $cur_player = container.find('.venvy_videos');
		        urls = '';
		        for (i = 0, len = cur_list.length; i < len; i++) {
		          part = cur_list[i];
		          urls = urls + part.url + '###' + part.seconds + '$$$';
		        }
		        urls = urls.substring(0, urls.length - 3);
		        return start_init = setInterval(function() {
		          if (value["swf_is_ready" + stamp] === true) {
		            console.log('start');
		            $cur_player[0].load(urls, ["set_player_to_ready" + stamp]);
		            return clearInterval(start_init);
		          }
		        }, 2000);
		      } else {
		        $cur_player = container.find(".cur_player");
		        $back_player = container.find(".back_player");
		        if (($cur_player.attr('src') == null) && total_video !== 1) {
		          $cur_player.attr('src', cur_list[cur_play_video].url);
		          $back_player.attr('src', cur_list[cur_play_video + 1].url);
		          if (state === 1) {
		            return v_play();
		          }
		        } else if (($cur_player.attr('src') == null) && total_video === 1) {
		          cur_play_video = 0;
		          $cur_player.attr('src', cur_list[cur_play_video].url);
		          if (state === 1) {
		            v_play();
		            return state = 0;
		          }
		        } else if (cur_play_video + 1 >= total_video) {
		          return $back_player.attr('src', '');
		        } else if (cur_play_video === total_video - 1) {
		          return $cur_player.attr('src', '');
		        } else {
		          return $back_player.attr('src', cur_list[cur_play_video + 1].url);
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(20), __webpack_require__(22), __webpack_require__(23), __webpack_require__(24), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, flash_callback, get_buffer, getCur_time, format_time, $) {
		    return function(container, total_time, time, stamp) {
		      var $cur_player, $is_buffering, $player, $player_control_bar_click, $player_control_bar_current, $player_control_bar_dot, $player_control_bar_progress_buffer, $player_control_bar_progress_played, former_time;
		      console.log($('script'));
		      $player_control_bar_click = container.find('.player_control_bar_click');
		      $player_control_bar_progress_played = container.find('.player_control_bar_progress_played');
		      $player_control_bar_progress_buffer = container.find('.player_control_bar_progress_buffer');
		      $player_control_bar_current = container.find('.player_control_bar_current');
		      $player_control_bar_dot = container.find('.player_control_bar_dot');
		      $is_buffering = container.find('.is_buffering');
		      flash_callback(container, total_time, time, stamp);
		      value["flv_need_to_jump" + stamp] = time;
		      container.append("<object type=\"application/x-shockwave-flash\" id=\"video1\" class=\"venvy_videos cur_player\" name=\"player\" align=\"middle\" data=\"player.swf\" width=\"100%\" height=\"100%\">\n    <param name=\"movie\" value=\"player.swf\" />\n    <param name=\"quality\" value=\"best\">\n    <param name=\"bgcolor\" value=\"#ffffff\">\n    <param name=\"flashvars\" value=\"oninit=swf_init" + stamp + "\">\n    <param name=\"allowscriptaccess\" value=\"*\">\n    <param name=\"allowfullscreen\" value=\"true\">\n    <param name=\"wmode\" value=\"transparent\">\n</object>");
		      $cur_player = container.find('.cur_player');
		      $player = container.find('.venvy_videos');
		      value["first_open_flag" + stamp] = false;
		      former_time = 0;
		      return window["flv_interval" + stamp] = setInterval(function() {
		        var abs_length, cur_buffer, cur_time, pos, pos_buffer;
		        if (value["flash_is_ready_flag" + stamp] === true) {
		          if ($cur_player[0].getStatus() === 1) {
		            value['dot_move_flag'] = false;
		          }
		          cur_buffer = get_buffer(container, 0, 'flv');
		          cur_time = getCur_time(container, 0, 'flv');
		          if (cur_time > value["flv_need_to_jump" + stamp] - 5) {
		            container.find('.former_videos').remove();
		            if (former_time === cur_time) {
		              $is_buffering.css({
		                display: 'block'
		              });
		            } else {
		              $is_buffering.css({
		                display: 'none'
		              });
		            }
		            former_time = cur_time;
		            pos = cur_time / total_time;
		            pos_buffer = cur_buffer;
		            abs_length = $player_control_bar_click.width();
		            $player_control_bar_progress_buffer.css({
		              width: pos_buffer * abs_length
		            });
		            if (value['dot_move_flag'] === false) {
		              $player_control_bar_current.html(format_time(cur_time));
		              $player_control_bar_dot.css({
		                left: abs_length * pos
		              });
		              return $player_control_bar_progress_played.css({
		                width: pos * abs_length
		              });
		            }
		          }
		        }
		      }, 300);
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(21), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, jumpTo, $) {
		    return function(container, total_time, time, stamp) {
		      window.flash_video_end = function(nextcount) {
		        return flv_reload_video();
		      };
		      window["swf_init" + stamp] = function() {
		        return value["swf_is_ready" + stamp] = true;
		      };
		      return window["set_player_to_ready" + stamp] = function() {
		        value["flash_is_ready_flag" + stamp] = true;
		        return setTimeout(function() {
		          return jumpTo(container, 0, total_time, 'flv', time);
		        }, 200);
		      };
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(16), __webpack_require__(12), __webpack_require__(21), __webpack_require__(1), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(change_video, value, jumpTo, v_play, $) {
		    return function(container, cur_list, total_time, cur_source_format, time, stamp, stop_callback, start_seek_callback) {
		      var $back_player, $cur_player, $former_player, $is_buffering, $is_buffering_text, back_offset, back_play_video, cur_play_video;
		      if (start_seek_callback != null) {
		        start_seek_callback();
		      }
		      $cur_player = container.find('.cur_player');
		      $back_player = container.find('.back_player');
		      $former_player = container.find('.former_videos');
		      $is_buffering = container.find('.is_buffering');
		      $is_buffering_text = container.find('.is_buffering_text');
		      if (time > total_time) {

		      } else if (time > total_time - 1) {
		        return __webpack_require__(21)(container, cur_list, total_time, cur_source_format, time - 1, stamp, stop_callback);
		      } else if (cur_source_format === 'flv') {
		        value["flv_need_to_jump" + stamp] = time;
		        $is_buffering.css({
		          display: 'block'
		        });
		        $is_buffering_text.html('缓冲中，请稍候');
		        $cur_player[0].redirectTime(time);
		        return v_play(container);
		      } else {
		        cur_play_video = value["cur_play_video" + stamp];
		        back_play_video = 0;
		        back_offset = cur_list[back_play_video].seconds;
		        while (back_offset < time) {
		          back_play_video++;
		          back_offset += cur_list[back_play_video].seconds;
		        }
		        back_offset -= cur_list[back_play_video].seconds;
		        if (back_play_video === cur_play_video) {
		          $cur_player[0].currentTime = time - back_offset;
		          $cur_player[0].play();
		          return $cur_player.one('canplay', function() {
		            return $cur_player.one('timeupdate', function() {
		              $former_player.remove();
		              $is_buffering.css({
		                display: 'none'
		              });
		              v_play(container);
		              return value['dot_move_flag'] = false;
		            });
		          });
		        } else {
		          console.log('abcde');
		          $is_buffering.css({
		            display: 'block'
		          });
		          $is_buffering_text.html('缓冲中，请稍候');
		          $back_player.attr('src', cur_list[back_play_video].url);
		          $cur_player[0].pause();
		          $back_player[0].load();
		          return $back_player.one('canplay', function() {
		            if ((navigator.userAgent.match('Firefox')) != null) {
		              $back_player.one('timeupdate', function() {
		                return $back_player.one('timeupdate', function() {
		                  return $back_player.one('timeupdate', function() {
		                    $former_player.remove();
		                    return v_play(container);
		                  });
		                });
		              });
		            } else {
		              $back_player.one('timeupdate', function() {
		                $former_player.remove();
		                return v_play(container);
		              });
		            }
		            value['dot_move_flag'] = false;
		            value["cur_play_video" + stamp] = back_play_video;
		            return change_video(void 0, time - back_offset, container, cur_list, cur_source_format, stamp, stop_callback);
		          });
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, $) {
		    return function(container, cur_list, cur_source_format, stamp) {
		      var $cur_player, _i, cur_buffer, cur_offset, cur_play_video;
		      cur_play_video = value["cur_play_video" + stamp];
		      $cur_player = container.find('.cur_player');
		      if (cur_source_format === 'flv') {
		        cur_buffer = $cur_player[0].getLoadedPercert();
		        return cur_buffer;
		      } else if (cur_source_format === 'custom') {
		        _i = 0;
		        while (_i < $cur_player[0].buffered.length) {
		          if ($cur_player[0].currentTime >= $cur_player[0].buffered.start(_i) && $cur_player[0].currentTime <= $cur_player[0].buffered.end(_i)) {
		            cur_buffer = $cur_player[0].buffered.end(_i);
		          }
		          _i++;
		        }
		        return cur_buffer;
		      } else {
		        cur_offset = 0;
		        _i = 0;
		        while (_i < cur_play_video) {
		          cur_offset += cur_list[_i].seconds;
		          _i++;
		        }
		        _i = 0;
		        while (_i < $cur_player[0].buffered.length) {
		          if ($cur_player[0].currentTime >= $cur_player[0].buffered.start(_i) && $cur_player[0].currentTime <= $cur_player[0].buffered.end(_i)) {
		            cur_buffer = $cur_player[0].buffered.end(_i);
		            break;
		          }
		          _i++;
		        }
		        return cur_buffer + cur_offset;
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, $) {
		    return function(container, cur_list, cur_source_format, stamp) {
		      var $cur_player, _i, cur_offset, cur_play_video, cur_time;
		      cur_play_video = value["cur_play_video" + stamp];
		      if (cur_source_format === 'flv') {
		        $cur_player = container.find('.venvy_videos');
		        return cur_time = $cur_player[0].getVideoCurrentTime();
		      } else {
		        $cur_player = container.find('.cur_player');
		        if ($('.venvy_videos').length) {
		          cur_offset = 0;
		          _i = 0;
		          while (_i < cur_play_video) {
		            cur_offset += cur_list[_i].seconds;
		            _i++;
		          }
		          return cur_time = $cur_player[0].currentTime + cur_offset;
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		    return function(s) {
		      var seconds;
		      seconds = parseInt(s);
		      return Math.floor(seconds / 60).toString().replace(/^([0-9])$/, '0$1') + ':' + Math.floor(seconds % 60).toString().replace(/^([0-9])$/, '0$1');
		    };
		  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 25 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(16), __webpack_require__(22), __webpack_require__(23), __webpack_require__(24), __webpack_require__(21), __webpack_require__(26), __webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(change_video, get_buffer, getCur_time, format_time, jumpTo, add_dom_event, value, $) {
		    return function(container, cur_list, cur_source_format, time, total_time, total_video, stamp, video_poster) {
		      var $back_player, $cur_player, $former_player, $is_buffering, $is_buffering_text, $player, $player_control_bar_click, $player_control_bar_current, $player_control_bar_dot, $player_control_bar_progress_buffer, $player_control_bar_progress_played, former_time, need_to_update_flag;
		      if (video_poster == null) {
		        video_poster = '';
		      }
		      need_to_update_flag = true;
		      if ((navigator.userAgent.match('Firefox')) != null) {
		        container.append("<video id='video1' class='venvy_videos cur_player' poster='" + video_poster + "' preload='auto'></video>");
		        container.append("<video id='video2' class='venvy_videos back_player' preload='auto'></video>");
		      } else {
		        container.append("<video id='video1' poster='" + video_poster + "' class='venvy_videos cur_player' preload='none'></video>");
		        container.append("<video id='video2' class='venvy_videos back_player' preload='none'></video>");
		      }
		      $cur_player = container.find('.cur_player');
		      $back_player = container.find('.back_player');
		      $player = container.find('.venvy_videos');
		      $former_player = container.find('.former_videos');
		      $player_control_bar_click = container.find('.player_control_bar_click');
		      $player_control_bar_progress_played = container.find('.player_control_bar_progress_played');
		      $player_control_bar_progress_buffer = container.find('.player_control_bar_progress_buffer');
		      $player_control_bar_current = container.find('.player_control_bar_current');
		      $player_control_bar_dot = container.find('.player_control_bar_dot');
		      $is_buffering = container.find('.is_buffering');
		      $is_buffering_text = container.find('.is_buffering_text');
		      $player.unbind('timeupdate');
		      $player.unbind('waiting');
		      $player.unbind('emptied');
		      $player.unbind('playing');
		      console.log(value["mute_flag" + stamp]);
		      if (value["mute_flag" + stamp] === false) {
		        $cur_player[0].volume = value["cur_volume" + stamp];
		        $back_player[0].volume = value["cur_volume" + stamp];
		      } else {
		        $cur_player[0].volume = 0;
		        $back_player[0].volume = 0;
		      }
		      $cur_player.css({
		        'z-index': 2
		      });
		      $back_player.css({
		        'z-index': -1
		      });
		      value["first_open_flag" + stamp] = false;
		      if (($player.attr('preload')) === 'none') {
		        window.stop();
		        setTimeout(function() {
		          $player[0].load();
		          return $player[1].load();
		        }, 100);
		      }
		      $cur_player.one('ended', function() {
		        return change_video(1, void 0, container, cur_list, cur_source_format, stamp);
		      });
		      $player.on('stalled', function() {
		        console.log('stalled');
		        if ($cur_player[0].paused === false) {
		          $is_buffering.css({
		            display: 'block'
		          });
		          $is_buffering_text.html('缓冲中，请稍候');
		          return $player.one('timeupdate', function() {
		            var dot_move_flag;
		            console.log('play');
		            dot_move_flag = false;
		            return $is_buffering.css({
		              display: 'none'
		            });
		          });
		        }
		      });
		      $player.on('playing', function() {
		        return console.log('playing');
		      });
		      $player.on('waiting', function() {
		        $is_buffering.css({
		          display: 'block'
		        });
		        $is_buffering_text.html('缓冲中，请稍候');
		        return $player.one('canplay', function() {
		          return $player.one('timeupdate', function() {
		            var dot_move_flag;
		            dot_move_flag = false;
		            return $is_buffering.css({
		              display: 'none'
		            });
		          });
		        });
		      });
		      former_time = 0;
		      $player.on('timeupdate', function() {
		        var abs_length, cur_buffer, cur_time, dot_move_flag, pos, pos_buffer;
		        cur_buffer = get_buffer(container, cur_list, cur_source_format, stamp);
		        cur_time = getCur_time(container, cur_list, cur_source_format, stamp);
		        if ($is_buffering.css('display') !== 'block') {
		          pos = cur_time / total_time;
		          pos_buffer = cur_buffer / total_time;
		          abs_length = $player_control_bar_click.width();
		          $player_control_bar_progress_buffer.css({
		            width: pos_buffer * abs_length
		          });
		          dot_move_flag = value['dot_move_flag'];
		          if (dot_move_flag === false) {
		            $player_control_bar_current.html(format_time(cur_time));
		            $player_control_bar_dot.css({
		              left: abs_length * pos
		            });
		            $player_control_bar_progress_played.css({
		              width: pos * abs_length
		            });
		          }
		        }
		        if ($cur_player[0].currentTime > $cur_player[0].duration - 10 && need_to_update_flag === true) {
		          $back_player[0].load();
		          need_to_update_flag = false;
		          return setTimeout(function() {
		            return need_to_update_flag = true;
		          }, 10000);
		        }
		      });
		      return $cur_player.one('loadeddata', function() {
		        if (time != null) {
		          jumpTo(container, cur_list, total_time, cur_source_format, time, stamp);
		        }
		        return console.log('成功加载视频流！');
		      });
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(27), __webpack_require__(23), __webpack_require__(28), __webpack_require__(24), __webpack_require__(21), __webpack_require__(30), __webpack_require__(7), __webpack_require__(1), __webpack_require__(12), __webpack_require__(31), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(v_playorpause, getCur_time, change_format, format_time, jumpTo, full_screen, v_pause, v_play, value, change_volume, $) {
		    return function(container, cur_list, total_time, cur_source_format, stamp, play_callback, pause_callback, stop_callback, start_seek_callback) {
		      var $cur_player, $player, $player_control_bar, $player_control_bar_candrag, $player_control_bar_click, $player_control_bar_current, $player_control_bar_dot, $player_control_bar_format, $player_control_bar_format_1080p, $player_control_bar_format_720p, $player_control_bar_format_high, $player_control_bar_format_normal, $player_control_bar_format_select, $player_control_bar_format_super, $player_control_bar_fullscreen, $player_control_bar_hover_time, $player_control_bar_progress_played, $player_control_bar_toggle, $player_control_bar_volume, $player_control_bar_volume_bar, $player_control_bar_volume_button, $player_control_bar_volume_click, $player_control_bar_volume_show, $player_for_user, cancel_bar_timeout;
		      $player = container.find('.venvy_videos');
		      $cur_player = container.find('.cur_player');
		      $player_for_user = container.find('.player_for_user');
		      $player_control_bar = container.find('.player_control_bar');
		      $player_control_bar_toggle = container.find('.player_control_bar_toggle');
		      $player_control_bar_dot = container.find('.player_control_bar_dot');
		      $player_control_bar_candrag = container.find('.player_control_bar_candrag');
		      $player_control_bar_format = container.find('.player_control_bar_format');
		      $player_control_bar_format_select = container.find('.player_control_bar_format_select');
		      $player_control_bar_format_1080p = container.find('.player_control_bar_format_1080p');
		      $player_control_bar_format_720p = container.find('.player_control_bar_format_720p');
		      $player_control_bar_format_super = container.find('.player_control_bar_format_super');
		      $player_control_bar_format_high = container.find('.player_control_bar_format_high');
		      $player_control_bar_format_normal = container.find('.player_control_bar_format_normal');
		      $player_control_bar_click = container.find('.player_control_bar_click');
		      $player_control_bar_hover_time = container.find('.player_control_bar_hover_time');
		      $player_control_bar_fullscreen = container.find('.player_control_bar_fullscreen');
		      $player_control_bar_progress_played = container.find('.player_control_bar_progress_played');
		      $player_control_bar_current = container.find('.player_control_bar_current');
		      $player_control_bar_volume_click = container.find('.player_control_bar_volume_click');
		      $player_control_bar_volume_show = container.find('.player_control_bar_volume_show');
		      $player_control_bar_volume_bar = container.find('.player_control_bar_volume_bar');
		      $player_control_bar_volume = container.find('.player_control_bar_volume');
		      $player_control_bar_volume_button = container.find('.player_control_bar_volume_button');
		      $player_control_bar_toggle.unbind('click');
		      $player_control_bar_format_1080p.unbind('click');
		      $player_control_bar_format_720p.unbind('click');
		      $player_control_bar_format_super.unbind('click');
		      $player_control_bar_format_high.unbind('click');
		      $player_control_bar_format_normal.unbind('click');
		      $player_control_bar_click.unbind('click');
		      $player_control_bar_click.unbind('mousemove');
		      $player_control_bar_fullscreen.unbind('click');
		      $player_control_bar_dot.unbind('mousedown');
		      $player.unbind('click');
		      $player_control_bar_toggle.click(function() {
		        return v_playorpause(container, cur_source_format, play_callback, pause_callback);
		      });
		      $player_control_bar_fullscreen.click(function() {
		        return full_screen(container);
		      });
		      $player_control_bar_format_1080p.click(function() {
		        var time;
		        time = getCur_time(container, cur_list, cur_source_format, stamp);
		        return change_format(container, '1080p', time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		      });
		      $player_control_bar_format_720p.click(function() {
		        var time;
		        time = getCur_time(container, cur_list, cur_source_format, stamp);
		        return change_format(container, '720p', time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		      });
		      $player_control_bar_format_super.click(function() {
		        var time;
		        time = getCur_time(container, cur_list, cur_source_format, stamp);
		        return change_format(container, 'SuperHD', time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		      });
		      $player_control_bar_format_high.click(function() {
		        var time;
		        time = getCur_time(container, cur_list, cur_source_format, stamp);
		        return change_format(container, 'HD', time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		      });
		      $player_control_bar_format_normal.click(function() {
		        var time;
		        time = getCur_time(container, cur_list, cur_source_format, stamp);
		        return change_format(container, 'SD', time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback);
		      });
		      $player_control_bar_click.mousemove(function(event) {
		        var abs_length, containerX, posX, realX, zeroX;
		        zeroX = $player_control_bar_click.offset().left;
		        abs_length = $player_control_bar_click.width();
		        realX = event.pageX;
		        containerX = container.offset().left;
		        posX = (realX - zeroX) / abs_length;
		        $player_control_bar_hover_time.css({
		          left: (realX - containerX) - $player_control_bar_hover_time.width() / 2,
		          display: 'block'
		        });
		        return $player_control_bar_hover_time.html(format_time(posX * total_time));
		      });
		      $player_control_bar_click.mouseleave(function() {
		        return $player_control_bar_hover_time.css({
		          display: 'none'
		        });
		      });
		      $player_control_bar_candrag.mouseenter(function() {
		        return $player_control_bar_dot.css({
		          opacity: 1
		        });
		      });
		      $player_control_bar_candrag.mouseleave(function() {
		        return $player_control_bar_dot.css({
		          opacity: 0
		        });
		      });
		      $player_control_bar_dot.mousedown(function() {
		        console.log('down');
		        v_pause(container);
		        value['dot_move_flag'] = true;
		        $(document).on('mousemove', function(event) {
		          var abs_length, dot_end, later_time, pos, realX, zeroX;
		          abs_length = $player_control_bar_click.width();
		          zeroX = $player_control_bar_click.offset().left;
		          realX = event.pageX;
		          dot_end = $player_control_bar_dot.offset().left - zeroX + 25;
		          pos = dot_end / abs_length;
		          if (zeroX > realX) {
		            $player_control_bar_dot.css({
		              left: 0
		            });
		          } else if (realX > zeroX + abs_length) {
		            $player_control_bar_dot.css({
		              left: abs_length
		            });
		          } else {
		            $player_control_bar_dot.css({
		              left: realX - zeroX
		            });
		          }
		          $player_control_bar_progress_played.css({
		            width: $player_control_bar_dot.css('left')
		          });
		          later_time = pos * total_time;
		          return $player_control_bar_current.html(format_time(later_time));
		        });
		        return $(document).one('mouseup', function() {
		          var abs_length, dot_end, pos, zeroX;
		          v_play(container);
		          zeroX = $player_control_bar_click.offset().left;
		          dot_end = $player_control_bar_dot.offset().left - zeroX + 25;
		          abs_length = $player_control_bar_click.width();
		          pos = dot_end / abs_length;
		          jumpTo(container, cur_list, total_time, cur_source_format, total_time * pos, stamp, stop_callback, start_seek_callback);
		          return $(document).unbind('mousemove');
		        });
		      });
		      $player_control_bar_click.click(function(event) {
		        var abs_length, posX, realX, zeroX;
		        zeroX = $player_control_bar_click.offset().left;
		        abs_length = $player_control_bar_click.width();
		        realX = event.pageX;
		        posX = (realX - zeroX) / abs_length;
		        $player_control_bar_dot.css({
		          left: realX - zeroX
		        });
		        $player_control_bar_progress_played.css({
		          width: realX - zeroX
		        });
		        return jumpTo(container, cur_list, total_time, cur_source_format, total_time * posX, stamp, stop_callback, start_seek_callback);
		      });
		      cancel_bar_timeout = void 0;
		      $player_for_user.mousemove(function() {
		        clearTimeout(cancel_bar_timeout);
		        $player_control_bar.css({
		          bottom: '0px'
		        });
		        return cancel_bar_timeout = setTimeout(function() {
		          $player_control_bar.css({
		            bottom: '-50px'
		          });
		          return $player_control_bar.one('transitionend', function() {
		            return $player_control_bar_format_select.css({
		              display: 'none'
		            });
		          });
		        }, 3000);
		      });
		      $player_control_bar.mouseenter(function() {
		        return clearTimeout(cancel_bar_timeout);
		      });
		      $player_control_bar.mouseleave(function() {
		        $(this).css({
		          bottom: '-50px'
		        });
		        return $player_control_bar.one('transitionend', function() {
		          return $player_control_bar_format_select.css({
		            display: 'none'
		          });
		        });
		      });
		      $player_control_bar_format.mouseenter(function() {
		        return $player_control_bar_format_select.css({
		          display: 'block'
		        });
		      });
		      $player_control_bar_format.mouseleave(function() {
		        return $player_control_bar_format_select.css({
		          display: 'none'
		        });
		      });
		      $player_control_bar_volume.mouseenter(function() {
		        return $player_control_bar_volume_bar.css({
		          display: 'block'
		        });
		      });
		      $player_control_bar_volume.mouseleave(function() {
		        return $player_control_bar_volume_bar.css({
		          display: 'none'
		        });
		      });
		      $player_control_bar_volume_bar.click(function(event) {
		        var hei, me, posY, realY, zeroY;
		        me = $player_control_bar_volume_click;
		        hei = me.height();
		        zeroY = container.height() - (me.offset().top + 80);
		        realY = container.height() - event.pageY;
		        posY = (realY - zeroY) / hei;
		        return change_volume(container, posY, cur_source_format, stamp);
		      });
		      $player_control_bar_volume_button.click(function() {
		        if (cur_source_format === 'flv') {
		          if ($cur_player[0].getVolume() === 0) {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker.png)'
		            });
		            try {
		              $cur_player[0].setVolume(value["cur_volume" + stamp]);
		            } catch (_error) {

		            }
		            return value["mute_flag" + stamp] = false;
		          } else {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker_s.png)'
		            });
		            try {
		              $cur_player[0].setVolume(0);
		            } catch (_error) {

		            }
		            return value["mute_flag" + stamp] = true;
		          }
		        } else {
		          if ($cur_player[0].volume === 0) {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker.png)'
		            });
		            $cur_player[0].volume = value["cur_volume" + stamp];
		            return value["mute_flag" + stamp] = false;
		          } else {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker_s.png)'
		            });
		            $cur_player[0].volume = 0;
		            return value["mute_flag" + stamp] = true;
		          }
		        }
		      });
		      $player.click(function() {
		        return v_playorpause(container, cur_source_format, play_callback, pause_callback);
		      });
		      venvy_player.set_time = function(time) {
		        return jumpTo(container, cur_list, total_time, cur_source_format, time, stamp, start_seek_callback);
		      };
		      return venvy_player.get_time = function() {
		        return getCur_time(container, cur_list, cur_source_format, stamp);
		      };
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(7), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(v_play, v_pause, $) {
		    return function(container, cur_source_format, play_callback, pause_callback) {
		      var $cur_player, click_to_pause, video_is_ended;
		      $cur_player = container.find('.cur_player');
		      if (cur_source_format === 'flv') {
		        if ($cur_player[0].getStatus() === 0) {
		          if (video_is_ended === true) {
		            jumpTo(0);
		            return video_is_ended = false;
		          } else {
		            click_to_pause = false;
		            return v_play(container, play_callback);
		          }
		        } else {
		          click_to_pause = true;
		          return v_pause(container, pause_callback);
		        }
		      } else {
		        if ($cur_player[0].paused === true) {
		          click_to_pause = false;
		          return v_play(container, play_callback);
		        } else {
		          click_to_pause = true;
		          return v_pause(container, pause_callback);
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(11), __webpack_require__(23), __webpack_require__(29), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, sync_process, getCur_time, fix_the_format, $) {
		    return function(container, format, time, total_time, stamp, play_callback, pause_callback, stop_callback, start_seek_callback) {
		      var $cur_player, $is_buffering, $is_buffering_text, $player, $player_control_bar_format_button, cur_address, site;
		      console.log(value["cur_format" + stamp]);
		      $player_control_bar_format_button = container.find('.player_control_bar_format_button');
		      if (format === value["cur_format" + stamp]) {

		      } else {
		        if (["flv_interval" + stamp] != null) {
		          clearInterval(window["flv_interval" + stamp]);
		        }
		        $cur_player = container.find('.cur_player');
		        $player = container.find('.venvy_videos');
		        $is_buffering = container.find('.is_buffering');
		        $is_buffering_text = container.find('.is_buffering_text');
		        $player.addClass('former_videos');
		        $player.removeClass('venvy_videos cur_player back_player');
		        $cur_player.css({
		          'z-index': 3
		        });
		        $is_buffering.css({
		          display: 'block'
		        });
		        $is_buffering_text.html('正在为您切换清晰度，请稍候');
		        value["first_open_flag" + stamp] = true;
		        value["cur_format" + stamp] = format;
		        site = value["cur_site" + stamp];
		        cur_address = value["cur_address" + stamp];
		        $player_control_bar_format_button.html(fix_the_format(format));
		        console.log("time is " + time);
		        if (time === 0) {
		          time = 0.1;
		        }
		        return __webpack_require__(11)(container, stamp, format, time, play_callback, pause_callback, stop_callback, start_seek_callback);
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		    return function(format) {
		      if (format === 'SD') {
		        return '标清';
		      } else if (format === 'HD') {
		        return '高清';
		      } else if (format === 'SuperHD') {
		        return '超清';
		      } else {
		        return format;
		      }
		    };
		  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function($) {
		    return function(container) {
		      var $player_control_bar_fullscreen, exitfullscreen, fullscreen;
		      $player_control_bar_fullscreen = container.find('.player_control_bar_fullscreen');
		      fullscreen = function(container_dom) {
		        if (container_dom.requestFullscreen) {
		          return container_dom.requestFullscreen();
		        } else if (container_dom.mozRequestFullScreen) {
		          return container_dom.mozRequestFullScreen();
		        } else if (container_dom.webkitRequestFullScreen) {
		          return container_dom.webkitRequestFullScreen();
		        } else if (container_dom.msRequestFullscreen) {
		          return container_dom.msRequestFullscreen();
		        }
		      };
		      exitfullscreen = function() {
		        if (document.exitFullscreen) {
		          return document.exitFullscreen();
		        } else if (document.msExitFullscreen) {
		          return document.msExitFullscreen();
		        } else if (document.mozCancelFullScreen) {
		          return document.mozCancelFullScreen();
		        } else if (document.webkitCancelFullScreen) {
		          return document.webkitCancelFullScreen();
		        }
		      };
		      if (document.webkitIsFullScreen || document.fullScreenElement || document.mozFullScreen || window['fullScreen'] || window.navigator.standalone) {
		        return exitfullscreen();
		      } else {
		        return fullscreen(container[0]);
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, $) {
		    return function(container, vol, cur_source_format, stamp) {
		      var $cur_player, $player_control_bar_volume_show;
		      $player_control_bar_volume_show = container.find('.player_control_bar_volume_show');
		      $cur_player = container.find('.cur_player');
		      if (cur_source_format === 'flv') {
		        if (vol <= 1 && vol > 0) {
		          $player_control_bar_volume_show.css({
		            height: vol * 100 + '%'
		          });
		          try {
		            $cur_player[0].setVolume(vol);
		          } catch (_error) {

		          }
		          return value["cur_volume" + stamp] = vol;
		        } else if (vol > 1) {
		          $player_control_bar_volume_show.css({
		            height: '100%'
		          });
		          try {
		            $cur_player[0].setVolume(1);
		          } catch (_error) {

		          }
		          return value["cur_volume" + stamp] = 1;
		        } else if (vol <= 0) {
		          $player_control_bar_volume_show.css({
		            height: '0%'
		          });
		          try {
		            $cur_player[0].setVolume(0);
		          } catch (_error) {

		          }
		          return value["cur_volume" + stamp] = 0;
		        }
		      } else {
		        if (vol <= 1 && vol > 0) {
		          $player_control_bar_volume_show.css({
		            height: vol * 100 + '%'
		          });
		          $cur_player[0].volume = vol;
		          return value["cur_volume" + stamp] = vol;
		        } else if (vol > 1) {
		          $player_control_bar_volume_show.css({
		            height: '100%'
		          });
		          $cur_player[0].volume = 1;
		          return value["cur_volume" + stamp] = 1;
		        } else if (vol <= 0) {
		          $player_control_bar_volume_show.css({
		            height: '0%'
		          });
		          $cur_player[0].volume = 0;
		          return value["cur_volume" + stamp] = 0;
		        }
		      }
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12), __webpack_require__(24), __webpack_require__(33), __webpack_require__(22), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(value, format_time, add_dom_event_custom, get_buffer, $) {
		    return function(container, time, video_url, stamp, play_callback, pause_callback, stop_callback, start_seek_callback, video_poster) {
		      var $cur_player, $is_buffering, $player, $player_control_bar_click, $player_control_bar_current, $player_control_bar_dot, $player_control_bar_progress_buffer, $player_control_bar_progress_played, $player_control_bar_total, total_time;
		      if (video_poster == null) {
		        video_poster = '';
		      }
		      console.log(start_seek_callback);
		      container.append("<video id='video1' class='venvy_videos cur_player' poster='" + video_poster + "' src=" + video_url + " preload='auto'></video>");
		      $cur_player = container.find('.cur_player');
		      $player = container.find('.venvy_videos');
		      $player_control_bar_click = container.find('.player_control_bar_click');
		      $player_control_bar_progress_played = container.find('.player_control_bar_progress_played');
		      $player_control_bar_progress_buffer = container.find('.player_control_bar_progress_buffer');
		      $player_control_bar_current = container.find('.player_control_bar_current');
		      $player_control_bar_dot = container.find('.player_control_bar_dot');
		      $player_control_bar_total = container.find('.player_control_bar_total');
		      $is_buffering = container.find('.is_buffering');
		      total_time = void 0;
		      $player.unbind('timeupdate');
		      $player.unbind('waiting');
		      $player.unbind('emptied');
		      $player.unbind('playing');
		      $cur_player.css({
		        'z-index': 2
		      });
		      value["first_open_flag" + stamp] = false;
		      $cur_player.one('ended', function() {
		        return console.log('now is end');
		      });
		      if ((navigator.userAgent.match('Firefox')) != null) {
		        $player.on('waiting', function() {
		          $is_buffering.css({
		            display: 'block'
		          });
		          return $player.one('canplay', function() {
		            return $player.one('timeupdate', function() {
		              var dot_move_flag;
		              dot_move_flag = false;
		              return $is_buffering.css({
		                display: 'none'
		              });
		            });
		          });
		        });
		      } else {
		        $player.on('stalled', function() {
		          console.log('stalled');
		          $is_buffering.css({
		            display: 'block'
		          });
		          return $player.one('timeupdate', function() {
		            var dot_move_flag;
		            console.log('play');
		            dot_move_flag = false;
		            return $is_buffering.css({
		              display: 'none'
		            });
		          });
		        });
		      }
		      $player.on('timeupdate', function() {
		        var abs_length, cur_buffer, cur_time, dot_move_flag, pos, pos_buffer;
		        cur_buffer = get_buffer(container, 0, 'custom', stamp);
		        cur_time = $player[0].currentTime;
		        if ($is_buffering.css('display') !== 'block') {
		          pos = cur_time / total_time;
		          pos_buffer = cur_buffer / total_time;
		          abs_length = $player_control_bar_click.width();
		          $player_control_bar_progress_buffer.css({
		            width: pos_buffer * abs_length
		          });
		          dot_move_flag = value['dot_move_flag'];
		          if (dot_move_flag === false) {
		            $player_control_bar_current.html(format_time(cur_time));
		            $player_control_bar_dot.css({
		              left: abs_length * pos
		            });
		            return $player_control_bar_progress_played.css({
		              width: pos * abs_length
		            });
		          }
		        }
		      });
		      return $cur_player.one('loadeddata', function() {
		        if (time != null) {
		          $player[0].currentTime = time;
		        }
		        total_time = $player[0].duration;
		        $player_control_bar_total.html(format_time(total_time));
		        console.log(start_seek_callback);
		        add_dom_event_custom(container, stamp, total_time, play_callback, pause_callback, stop_callback, start_seek_callback);
		        return console.log('成功加载视频流！');
		      });
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
		  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(27), __webpack_require__(30), __webpack_require__(7), __webpack_require__(1), __webpack_require__(12), __webpack_require__(31), __webpack_require__(24), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function(v_playorpause, full_screen, v_pause, v_play, value, change_volume, format_time, $) {
		    return function(container, stamp, total_time, play_callback, pause_callback, stop_callback, start_seek_callback) {
		      var $cur_player, $player, $player_control_bar, $player_control_bar_candrag, $player_control_bar_click, $player_control_bar_current, $player_control_bar_dot, $player_control_bar_format, $player_control_bar_fullscreen, $player_control_bar_hover_time, $player_control_bar_progress_played, $player_control_bar_toggle, $player_control_bar_volume, $player_control_bar_volume_bar, $player_control_bar_volume_button, $player_control_bar_volume_click, $player_control_bar_volume_show, $player_for_user, cancel_bar_timeout;
		      $player = container.find('.venvy_videos');
		      $cur_player = container.find('.cur_player');
		      $player_for_user = container.find('.player_for_user');
		      $player_control_bar = container.find('.player_control_bar');
		      $player_control_bar_toggle = container.find('.player_control_bar_toggle');
		      $player_control_bar_dot = container.find('.player_control_bar_dot');
		      $player_control_bar_candrag = container.find('.player_control_bar_candrag');
		      $player_control_bar_format = container.find('.player_control_bar_format');
		      $player_control_bar_click = container.find('.player_control_bar_click');
		      $player_control_bar_hover_time = container.find('.player_control_bar_hover_time');
		      $player_control_bar_fullscreen = container.find('.player_control_bar_fullscreen');
		      $player_control_bar_progress_played = container.find('.player_control_bar_progress_played');
		      $player_control_bar_current = container.find('.player_control_bar_current');
		      $player_control_bar_volume_click = container.find('.player_control_bar_volume_click');
		      $player_control_bar_volume_show = container.find('.player_control_bar_volume_show');
		      $player_control_bar_volume_bar = container.find('.player_control_bar_volume_bar');
		      $player_control_bar_volume = container.find('.player_control_bar_volume');
		      $player_control_bar_volume_button = container.find('.player_control_bar_volume_button');
		      $player_control_bar_toggle.unbind('click');
		      $player_control_bar_click.unbind('click');
		      $player_control_bar_click.unbind('mousemove');
		      $player_control_bar_fullscreen.unbind('click');
		      $player_control_bar_dot.unbind('mousedown');
		      $player.unbind('click');
		      $player_control_bar_toggle.click(function() {
		        return v_playorpause(container, 'mp4', play_callback, pause_callback);
		      });
		      $player_control_bar_fullscreen.click(function() {
		        return full_screen(container);
		      });
		      $player_control_bar_click.mousemove(function(event) {
		        var abs_length, containerX, posX, realX, zeroX;
		        zeroX = $player_control_bar_click.offset().left;
		        abs_length = $player_control_bar_click.width();
		        realX = event.pageX;
		        containerX = container.offset().left;
		        posX = (realX - zeroX) / abs_length;
		        $player_control_bar_hover_time.css({
		          left: (realX - containerX) - $player_control_bar_hover_time.width() / 2,
		          display: 'block'
		        });
		        return $player_control_bar_hover_time.html(format_time(posX * total_time));
		      });
		      $player_control_bar_click.mouseleave(function() {
		        return $player_control_bar_hover_time.css({
		          display: 'none'
		        });
		      });
		      $player_control_bar_candrag.mouseenter(function() {
		        return $player_control_bar_dot.css({
		          opacity: 1
		        });
		      });
		      $player_control_bar_candrag.mouseleave(function() {
		        return $player_control_bar_dot.css({
		          opacity: 0
		        });
		      });
		      $player_control_bar_dot.mousedown(function() {
		        console.log('down');
		        v_pause(container);
		        value['dot_move_flag'] = true;
		        $(document).on('mousemove', function(event) {
		          var abs_length, dot_end, later_time, pos, realX, zeroX;
		          abs_length = $player_control_bar_click.width();
		          zeroX = $player_control_bar_click.offset().left;
		          realX = event.pageX;
		          dot_end = $player_control_bar_dot.offset().left - zeroX + 25;
		          pos = dot_end / abs_length;
		          if (zeroX > realX) {
		            $player_control_bar_dot.css({
		              left: 0
		            });
		          } else if (realX > zeroX + abs_length) {
		            $player_control_bar_dot.css({
		              left: abs_length
		            });
		          } else {
		            $player_control_bar_dot.css({
		              left: realX - zeroX
		            });
		          }
		          $player_control_bar_progress_played.css({
		            width: $player_control_bar_dot.css('left')
		          });
		          later_time = pos * total_time;
		          return $player_control_bar_current.html(format_time(later_time));
		        });
		        return $(document).one('mouseup', function() {
		          var abs_length, dot_end, pos, zeroX;
		          v_play(container);
		          zeroX = $player_control_bar_click.offset().left;
		          dot_end = $player_control_bar_dot.offset().left - zeroX + 25;
		          abs_length = $player_control_bar_click.width();
		          pos = dot_end / abs_length;
		          $player[0].currentTime = total_time * pos;
		          $(document).unbind('mousemove');
		          return start_seek_callback();
		        });
		      });
		      $player_control_bar_click.click(function(event) {
		        var abs_length, posX, realX, zeroX;
		        zeroX = $player_control_bar_click.offset().left;
		        abs_length = $player_control_bar_click.width();
		        realX = event.pageX;
		        posX = (realX - zeroX) / abs_length;
		        $player_control_bar_dot.css({
		          left: realX - zeroX
		        });
		        $player_control_bar_progress_played.css({
		          width: realX - zeroX
		        });
		        $player[0].currentTime = total_time * posX;
		        return start_seek_callback();
		      });
		      cancel_bar_timeout = void 0;
		      $player_for_user.mousemove(function() {
		        clearTimeout(cancel_bar_timeout);
		        $player_control_bar.css({
		          bottom: '0px'
		        });
		        return cancel_bar_timeout = setTimeout(function() {
		          return $player_control_bar.css({
		            bottom: '-50px'
		          });
		        }, 3000);
		      });
		      $player_control_bar.mouseenter(function() {
		        return clearTimeout(cancel_bar_timeout);
		      });
		      $player_control_bar.mouseleave(function() {
		        return $(this).css({
		          bottom: '-50px'
		        });
		      });
		      $player_control_bar_volume.mouseenter(function() {
		        return $player_control_bar_volume_bar.css({
		          display: 'block'
		        });
		      });
		      $player_control_bar_volume.mouseleave(function() {
		        return $player_control_bar_volume_bar.css({
		          display: 'none'
		        });
		      });
		      $player_control_bar_volume_bar.click(function(event) {
		        var hei, me, posY, realY, zeroY;
		        me = $player_control_bar_volume_click;
		        hei = me.height();
		        zeroY = container.height() - (me.offset().top + 80);
		        realY = container.height() - event.pageY;
		        posY = (realY - zeroY) / hei;
		        return change_volume(container, posY, 'mp4', stamp);
		      });
		      $player_control_bar_volume_button.click(function() {
		        if (cur_source_format === 'flv') {
		          if ($cur_player[0].getVolume() === 0) {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker.png)'
		            });
		            try {
		              $cur_player[0].setVolume(value["cur_volume" + stamp]);
		            } catch (_error) {

		            }
		            return value["mute_flag" + stamp] = false;
		          } else {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker_s.png)'
		            });
		            try {
		              $cur_player[0].setVolume(0);
		            } catch (_error) {

		            }
		            return value["mute_flag" + stamp] = true;
		          }
		        } else {
		          if ($cur_player[0].volume === 0) {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker.png)'
		            });
		            $cur_player[0].volume = value["cur_volume" + stamp];
		            return value["mute_flag" + stamp] = false;
		          } else {
		            $(this).css({
		              'background-image': 'url(http://7xi9ew.com2.z0.glb.qiniucdn.com/public/iva/image/speaker_s.png)'
		            });
		            $cur_player[0].volume = 0;
		            value["mute_flag" + stamp] = true;
		            return console.log(value["mute_flag" + stamp]);
		          }
		        }
		      });
		      $player.click(function() {
		        return v_playorpause(container, 'mp4', play_callback, pause_callback);
		      });
		      venvy_player.set_time = function(time) {
		        return $player[0].currentTime = time;
		      };
		      return venvy_player.get_time = function() {
		        return $player[0].currentTime;
		      };
		    };
		  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

		}).call(this);


	/***/ }
	/******/ ])}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * ZRender, a high performance canvas library.
	 *  
	 * Copyright (c) 2013, Baidu Inc.
	 * All rights reserved.
	 * 
	 * LICENSE
	 * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	        /*
	         * HTML5 Canvas for Internet Explorer!
	         * Modern browsers like Firefox, Safari, Chrome and Opera support
	         * the HTML5 canvas tag to allow 2D command-based drawing.
	         * ExplorerCanvas brings the same functionality to Internet Explorer.
	         * To use, web developers only need to include a single script tag
	         * in their existing web pages.
	         *
	         * https://code.google.com/p/explorercanvas/
	         * http://explorercanvas.googlecode.com/svn/trunk/excanvas.js
	         */
	        // 核心代码会生成一个全局变量 G_vmlCanvasManager，模块改造后借用于快速判断canvas支持
	        __webpack_require__(32);

	        var util = __webpack_require__(33);
	        var log = __webpack_require__(34);
	        var guid = __webpack_require__(35);

	        var Handler = __webpack_require__(36);
	        var Painter = __webpack_require__(37);
	        var Storage = __webpack_require__(38);
	        var Animation = __webpack_require__(20);

	        var _instances = {};    // ZRender实例map索引

	        /**
	         * @exports zrender
	         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	         *         pissang (https://www.github.com/pissang)
	         */
	        var zrender = {};
	        /**
	         * @type {string}
	         */
	        zrender.version = '2.0.8';

	        /**
	         * 创建zrender实例
	         *
	         * @param {HTMLElement} dom 绘图容器
	         * @return {module:zrender/ZRender} ZRender实例
	         */
	        // 不让外部直接new ZRender实例，为啥？
	        // 不为啥，提供全局可控同时减少全局污染和降低命名冲突的风险！
	        zrender.init = function(dom) {
	            var zr = new ZRender(guid(), dom);
	            _instances[zr.id] = zr;
	            return zr;
	        };

	        /**
	         * zrender实例销毁
	         * @param {module:zrender/ZRender} zr ZRender对象，不传则销毁全部
	         */
	        // 在_instances里的索引也会删除了
	        // 管生就得管死，可以通过zrender.dispose(zr)销毁指定ZRender实例
	        // 当然也可以直接zr.dispose()自己销毁
	        zrender.dispose = function (zr) {
	            if (zr) {
	                zr.dispose();
	            }
	            else {
	                for (var key in _instances) {
	                    _instances[key].dispose();
	                }
	                _instances = {};
	            }

	            return zrender;
	        };

	        /**
	         * 获取zrender实例
	         * @param {string} id ZRender对象索引
	         * @return {module:zrender/ZRender}
	         */
	        zrender.getInstance = function (id) {
	            return _instances[id];
	        };

	        /**
	         * 删除zrender实例，ZRender实例dispose时会调用，
	         * 删除后getInstance则返回undefined
	         * ps: 仅是删除，删除的实例不代表已经dispose了~~
	         *     这是一个摆脱全局zrender.dispose()自动销毁的后门，
	         *     take care of yourself~
	         *
	         * @param {string} id ZRender对象索引
	         */
	        zrender.delInstance = function (id) {
	            delete _instances[id];
	            return zrender;
	        };

	        function getFrameCallback(zrInstance) {
	            return function () {
	                var animatingElements = zrInstance.animatingElements;
	                for (var i = 0, l = animatingElements.length; i < l; i++) {
	                    zrInstance.storage.mod(animatingElements[i].id);
	                }
	                if (animatingElements.length || zrInstance._needsRefreshNextFrame) {
	                    zrInstance.refresh();
	                }
	            };
	        }

	        /**
	         * @module zrender/ZRender
	         */
	        /**
	         * ZRender接口类，对外可用的所有接口都在这里
	         * 非get接口统一返回支持链式调用
	         *
	         * @constructor
	         * @alias module:zrender/ZRender
	         * @param {string} id 唯一标识
	         * @param {HTMLElement} dom dom对象，不帮你做document.getElementById
	         * @return {ZRender} ZRender实例
	         */
	        var ZRender = function(id, dom) {
	            /**
	             * 实例 id
	             * @type {string}
	             */
	            this.id = id;
	            this.env = __webpack_require__(39);

	            this.storage = new Storage();
	            this.painter = new Painter(dom, this.storage);
	            this.handler = new Handler(dom, this.storage, this.painter);

	            // 动画控制
	            this.animatingElements = [];
	            /**
	             * @type {module:zrender/animation/Animation}
	             */
	            this.animation = new Animation({
	                stage: {
	                    update: getFrameCallback(this)
	                }
	            });
	            this.animation.start();

	            var self = this;
	            this.painter.refreshNextFrame = function () {
	                self.refreshNextFrame();
	            };

	            this._needsRefreshNextFrame = false;

	            // 修改 storage.delFromMap, 每次删除元素之前删除动画
	            // FIXME 有点ugly
	            var self = this;
	            var storage = this.storage;
	            var oldDelFromMap = storage.delFromMap;
	            storage.delFromMap = function (elId) {
	                var el = storage.get(elId);
	                self.stopAnimation(el);
	                oldDelFromMap.call(storage, elId);
	            };
	        };

	        /**
	         * 获取实例唯一标识
	         * @return {string}
	         */
	        ZRender.prototype.getId = function () {
	            return this.id;
	        };

	        /**
	         * 添加图形形状到根节点
	         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead
	         * @param {module:zrender/shape/Base} shape 形状对象，可用属性全集，详见各shape
	         */
	        ZRender.prototype.addShape = function (shape) {
	            this.addElement(shape);
	            return this;
	        };

	        /**
	         * 添加组到根节点
	         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead
	         * @param {module:zrender/Group} group
	         */
	        ZRender.prototype.addGroup = function(group) {
	            this.addElement(group);
	            return this;
	        };

	        /**
	         * 从根节点删除图形形状
	         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead
	         * @param {string} shapeId 形状对象唯一标识
	         */
	        ZRender.prototype.delShape = function (shapeId) {
	            this.delElement(shapeId);
	            return this;
	        };

	        /**
	         * 从根节点删除组
	         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead
	         * @param {string} groupId
	         */
	        ZRender.prototype.delGroup = function (groupId) {
	            this.delElement(groupId);
	            return this;
	        };

	        /**
	         * 修改图形形状
	         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead
	         * @param {string} shapeId 形状对象唯一标识
	         * @param {Object} shape 形状对象
	         */
	        ZRender.prototype.modShape = function (shapeId, shape) {
	            this.modElement(shapeId, shape);
	            return this;
	        };

	        /**
	         * 修改组
	         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead
	         * @param {string} groupId
	         * @param {Object} group
	         */
	        ZRender.prototype.modGroup = function (groupId, group) {
	            this.modElement(groupId, group);
	            return this;
	        };

	        /**
	         * 添加元素
	         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el
	         */
	        ZRender.prototype.addElement = function (el) {
	            this.storage.addRoot(el);
	            this._needsRefreshNextFrame = true;
	            return this;
	        };

	        /**
	         * 删除元素
	         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el
	         */
	        ZRender.prototype.delElement = function (el) {
	            this.storage.delRoot(el);
	            this._needsRefreshNextFrame = true;
	            return this;
	        };

	        /**
	         * 修改元素, 主要标记图形或者组需要在下一帧刷新。
	         * 第二个参数为需要覆盖到元素上的参数，不建议使用。
	         *
	         * @example
	         *     el.style.color = 'red';
	         *     el.position = [10, 10];
	         *     zr.modElement(el);
	         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el
	         * @param {Object} [params]
	         */
	        ZRender.prototype.modElement = function (el, params) {
	            this.storage.mod(el, params);
	            this._needsRefreshNextFrame = true;
	            return this;
	        };

	        /**
	         * 修改指定zlevel的绘制配置项
	         * 
	         * @param {string} zLevel
	         * @param {Object} config 配置对象
	         * @param {string} [config.clearColor=0] 每次清空画布的颜色
	         * @param {string} [config.motionBlur=false] 是否开启动态模糊
	         * @param {number} [config.lastFrameAlpha=0.7]
	         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
	         * @param {Array.<number>} [config.position] 层的平移
	         * @param {Array.<number>} [config.rotation] 层的旋转
	         * @param {Array.<number>} [config.scale] 层的缩放
	         * @param {boolean} [config.zoomable=false] 层是否支持鼠标缩放操作
	         * @param {boolean} [config.panable=false] 层是否支持鼠标平移操作
	         */
	        ZRender.prototype.modLayer = function (zLevel, config) {
	            this.painter.modLayer(zLevel, config);
	            this._needsRefreshNextFrame = true;
	            return this;
	        };

	        /**
	         * 添加额外高亮层显示，仅提供添加方法，每次刷新后高亮层图形均被清空
	         * 
	         * @param {Object} shape 形状对象
	         */
	        ZRender.prototype.addHoverShape = function (shape) {
	            this.storage.addHover(shape);
	            return this;
	        };

	        /**
	         * 渲染
	         * 
	         * @param {Function} callback  渲染结束后回调函数
	         */
	        ZRender.prototype.render = function (callback) {
	            this.painter.render(callback);
	            this._needsRefreshNextFrame = false;
	            return this;
	        };

	        /**
	         * 视图更新
	         * 
	         * @param {Function} callback  视图更新后回调函数
	         */
	        ZRender.prototype.refresh = function (callback) {
	            this.painter.refresh(callback);
	            this._needsRefreshNextFrame = false;
	            return this;
	        };

	        /**
	         * 标记视图在浏览器下一帧需要绘制
	         */
	        ZRender.prototype.refreshNextFrame = function() {
	            this._needsRefreshNextFrame = true;
	            return this;
	        };
	        
	        /**
	         * 绘制高亮层
	         * @param {Function} callback  视图更新后回调函数
	         */
	        ZRender.prototype.refreshHover = function (callback) {
	            this.painter.refreshHover(callback);
	            return this;
	        };

	        /**
	         * 视图更新
	         * 
	         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形列表
	         * @param {Function} callback  视图更新后回调函数
	         */
	        ZRender.prototype.refreshShapes = function (shapeList, callback) {
	            this.painter.refreshShapes(shapeList, callback);
	            return this;
	        };

	        /**
	         * 调整视图大小
	         */
	        ZRender.prototype.resize = function() {
	            this.painter.resize();
	            return this;
	        };

	        /**
	         * 动画
	         * 
	         * @param {string|module:zrender/Group|module:zrender/shape/Base} el 动画对象
	         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性
	         * @param {boolean} [loop] 动画是否循环
	         * @return {module:zrender/animation/Animation~Animator}
	         * @example:
	         *     zr.animate(circle.id, 'style', false)
	         *         .when(1000, {x: 10} )
	         *         .done(function(){ // Animation done })
	         *         .start()
	         */
	        ZRender.prototype.animate = function (el, path, loop) {
	            if (typeof(el) === 'string') {
	                el = this.storage.get(el);
	            }
	            if (el) {
	                var target;
	                if (path) {
	                    var pathSplitted = path.split('.');
	                    var prop = el;
	                    for (var i = 0, l = pathSplitted.length; i < l; i++) {
	                        if (!prop) {
	                            continue;
	                        }
	                        prop = prop[pathSplitted[i]];
	                    }
	                    if (prop) {
	                        target = prop;
	                    }
	                }
	                else {
	                    target = el;
	                }

	                if (!target) {
	                    log(
	                        'Property "'
	                        + path
	                        + '" is not existed in element '
	                        + el.id
	                    );
	                    return;
	                }

	                var animatingElements = this.animatingElements;
	                if (el.__animators == null) {
	                    // 正在进行的动画记数
	                    el.__animators = [];
	                }
	                var animators = el.__animators;
	                if (animators.length === 0) {
	                    animatingElements.push(el);
	                }

	                var animator = this.animation.animate(target, { loop: loop })
	                    .done(function () {
	                        var idx = util.indexOf(el.__animators, animator);
	                        if (idx >= 0) {
	                            animators.splice(idx, 1);
	                        }
	                        if (animators.length === 0) {
	                            // 从animatingElements里移除
	                            var idx = util.indexOf(animatingElements, el);
	                            animatingElements.splice(idx, 1);
	                        }
	                    });
	                animators.push(animator);

	                return animator;
	            }
	            else {
	                log('Element not existed');
	            }
	        };

	        /**
	         * 停止动画对象的动画
	         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el
	         */
	        ZRender.prototype.stopAnimation = function (el) {
	            if (el.__animators) {
	                var animators = el.__animators;
	                var len = animators.length;
	                for (var i = 0; i < len; i++) {
	                    animators[i].stop();
	                }
	                if (len > 0) {
	                    var animatingElements = this.animatingElements;
	                    var idx = util.indexOf(animatingElements, el);
	                    if (idx >= 0) {
	                        animatingElements.splice(idx, 1);
	                    }
	                }

	                animators.length = 0;
	            }
	            return this;
	        };

	        /**
	         * 停止所有动画
	         */
	        ZRender.prototype.clearAnimation = function () {
	            this.animation.clear();
	            this.animatingElements.length = 0;
	            return this;
	        };

	        /**
	         * loading显示
	         * 
	         * @param {Object=} loadingEffect loading效果对象
	         */
	        ZRender.prototype.showLoading = function (loadingEffect) {
	            this.painter.showLoading(loadingEffect);
	            return this;
	        };

	        /**
	         * loading结束
	         */
	        ZRender.prototype.hideLoading = function () {
	            this.painter.hideLoading();
	            return this;
	        };

	        /**
	         * 获取视图宽度
	         */
	        ZRender.prototype.getWidth = function() {
	            return this.painter.getWidth();
	        };

	        /**
	         * 获取视图高度
	         */
	        ZRender.prototype.getHeight = function() {
	            return this.painter.getHeight();
	        };

	        /**
	         * 图像导出
	         * @param {string} type
	         * @param {string} [backgroundColor='#fff'] 背景色
	         * @return {string} 图片的Base64 url
	         */
	        ZRender.prototype.toDataURL = function(type, backgroundColor, args) {
	            return this.painter.toDataURL(type, backgroundColor, args);
	        };

	        /**
	         * 将常规shape转成image shape
	         * @param {module:zrender/shape/Base} e
	         * @param {number} width
	         * @param {number} height
	         */
	        ZRender.prototype.shapeToImage = function(e, width, height) {
	            var id = guid();
	            return this.painter.shapeToImage(id, e, width, height);
	        };

	        /**
	         * 事件绑定
	         * 
	         * @param {string} eventName 事件名称
	         * @param {Function} eventHandler 响应函数
	         * @param {Object} [context] 响应函数
	         */
	        ZRender.prototype.on = function(eventName, eventHandler, context) {
	            this.handler.on(eventName, eventHandler, context);
	            return this;
	        };

	        /**
	         * 事件解绑定，参数为空则解绑所有自定义事件
	         * 
	         * @param {string} eventName 事件名称
	         * @param {Function} eventHandler 响应函数
	         */
	        ZRender.prototype.un = function(eventName, eventHandler) {
	            this.handler.un(eventName, eventHandler);
	            return this;
	        };
	        
	        /**
	         * 事件触发
	         * 
	         * @param {string} eventName 事件名称，resize，hover，drag，etc
	         * @param {event=} event event dom事件对象
	         */
	        ZRender.prototype.trigger = function (eventName, event) {
	            this.handler.trigger(eventName, event);
	            return this;
	        };
	        

	        /**
	         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用
	         */
	        ZRender.prototype.clear = function () {
	            this.storage.delRoot();
	            this.painter.clear();
	            return this;
	        };

	        /**
	         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用
	         */
	        ZRender.prototype.dispose = function () {
	            this.animation.stop();
	            
	            this.clear();
	            this.storage.dispose();
	            this.painter.dispose();
	            this.handler.dispose();

	            this.animation = 
	            this.animatingElements = 
	            this.storage = 
	            this.painter = 
	            this.handler = null;

	            // 释放后告诉全局删除对自己的索引，没想到啥好方法
	            zrender.delInstance(this.id);
	        };

	        return zrender;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 圆形
	 * @module zrender/shape/Circle
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 * @example
	 *   var Circle = require('zrender/shape/Circle');
	 *   var shape = new Circle({
	 *       style: {
	 *           x: 100,
	 *           y: 100,
	 *           r: 40,
	 *           brushType: 'both',
	 *           color: 'blue',
	 *           strokeColor: 'red',
	 *           lineWidth: 3,
	 *           text: 'Circle'
	 *       }    
	 *   });
	 *   zr.addShape(shape);
	 */

	/**
	 * @typedef {Object} ICircleStyle
	 * @property {number} x 圆心x坐标
	 * @property {number} y 圆心y坐标
	 * @property {number} r 半径
	 * @property {string} [brushType='fill']
	 * @property {string} [color='#000000'] 填充颜色
	 * @property {string} [strokeColor='#000000'] 描边颜色
	 * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square
	 * @property {number} [lineWidth=1] 描边宽度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 * @property {string} [text] 图形中的附加文本
	 * @property {string} [textColor='#000000'] 文本颜色
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom
	 * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。
	 *                                可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        'use strict';

	        var Base = __webpack_require__(40);

	        /**
	         * @alias module:zrender/shape/Circle
	         * @constructor
	         * @extends module:zrender/shape/Base
	         * @param {Object} options
	         */
	        var Circle = function(options) {
	            Base.call(this, options);
	            /**
	             * 圆形绘制样式
	             * @name module:zrender/shape/Circle#style
	             * @type {module:zrender/shape/Circle~ICircleStyle}
	             */
	            /**
	             * 圆形高亮绘制样式
	             * @name module:zrender/shape/Circle#highlightStyle
	             * @type {module:zrender/shape/Circle~ICircleStyle}
	             */
	        };

	        Circle.prototype = {
	            type: 'circle',
	            /**
	             * 创建圆形路径
	             * @param {CanvasRenderingContext2D} ctx
	             * @param {module:zrender/shape/Circle~ICircleStyle} style
	             */
	            buildPath : function (ctx, style) {
	                // Better stroking in ShapeBundle
	                ctx.moveTo(style.x + style.r, style.y);
	                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, true);
	                return;
	            },

	            /**
	             * 计算返回圆形的包围盒矩形
	             * @param {module:zrender/shape/Circle~ICircleStyle} style
	             * @return {module:zrender/shape/Base~IBoundingRect}
	             */
	            getRect : function (style) {
	                if (style.__rect) {
	                    return style.__rect;
	                }
	                
	                var lineWidth;
	                if (style.brushType == 'stroke' || style.brushType == 'fill') {
	                    lineWidth = style.lineWidth || 1;
	                }
	                else {
	                    lineWidth = 0;
	                }
	                style.__rect = {
	                    x : Math.round(style.x - style.r - lineWidth / 2),
	                    y : Math.round(style.y - style.r - lineWidth / 2),
	                    width : style.r * 2 + lineWidth,
	                    height : style.r * 2 + lineWidth
	                };
	                
	                return style.__rect;
	            }
	        };

	        __webpack_require__(33).inherits(Circle, Base);
	        return Circle;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 直线
	 * @module zrender/shape/Line
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 * @example
	 *   var Line = require('zrender/shape/Line');
	 *   var shape = new Line({
	 *       style: {
	 *           xStart: 0,
	 *           yStart: 0,
	 *           xEnd: 100,
	 *           yEnd: 100,
	 *           strokeColor: '#000',
	 *           lineWidth: 10
	 *       }
	 *   });
	 *   zr.addShape(line);
	 */
	/**
	 * @typedef {Object} ILineStyle
	 * @property {number} xStart 起点x坐标
	 * @property {number} yStart 起点y坐标
	 * @property {number} xEnd 终止点x坐标
	 * @property {number} yEnd 终止点y坐标
	 * @property {string} [strokeColor='#000000'] 描边颜色
	 * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square
	 * @property {number} [lineWidth=1] 描边宽度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 * @property {string} [text] 图形中的附加文本
	 * @property {string} [textColor='#000000'] 文本颜色
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom
	 * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。
	 *                                可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        var Base = __webpack_require__(40);
	        var dashedLineTo = __webpack_require__(41);
	        
	        /**
	         * @alias module:zrender/shape/Line
	         * @param {Object} options
	         * @constructor
	         * @extends module:zrender/shape/Base
	         */
	        var Line = function (options) {
	            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负
	            this.textPosition = 'end';
	            Base.call(this, options);

	            /**
	             * 直线绘制样式
	             * @name module:zrender/shape/Line#style
	             * @type {module:zrender/shape/Line~ILineStyle}
	             */
	            /**
	             * 直线高亮绘制样式
	             * @name module:zrender/shape/Line#highlightStyle
	             * @type {module:zrender/shape/Line~ILineStyle}
	             */
	        };

	        Line.prototype =  {
	            type: 'line',

	            /**
	             * 创建线条路径
	             * @param {CanvasRenderingContext2D} ctx
	             * @param {module:zrender/shape/Line~ILineStyle} style
	             */
	            buildPath : function (ctx, style) {
	                if (!style.lineType || style.lineType == 'solid') {
	                    // 默认为实线
	                    ctx.moveTo(style.xStart, style.yStart);
	                    ctx.lineTo(style.xEnd, style.yEnd);
	                }
	                else if (style.lineType == 'dashed'
	                        || style.lineType == 'dotted'
	                ) {
	                    var dashLength = (style.lineWidth || 1)  
	                                     * (style.lineType == 'dashed' ? 5 : 1);
	                    dashedLineTo(
	                        ctx,
	                        style.xStart, style.yStart,
	                        style.xEnd, style.yEnd,
	                        dashLength
	                    );
	                }
	            },

	            /**
	             * 计算返回线条的包围盒矩形
	             * @param {module:zrender/shape/Line~ILineStyle} style
	             * @return {module:zrender/shape/Base~IBoundingRect}
	             */
	            getRect : function (style) {
	                if (style.__rect) {
	                    return style.__rect;
	                }
	                
	                var lineWidth = style.lineWidth || 1;
	                style.__rect = {
	                    x : Math.min(style.xStart, style.xEnd) - lineWidth,
	                    y : Math.min(style.yStart, style.yEnd) - lineWidth,
	                    width : Math.abs(style.xStart - style.xEnd)
	                            + lineWidth,
	                    height : Math.abs(style.yStart - style.yEnd)
	                             + lineWidth
	                };
	                
	                return style.__rect;
	            }
	        };

	        __webpack_require__(33).inherits(Line, Base);
	        return Line;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 动画主类, 调度和管理所有动画控制器
	 * 
	 * @module zrender/animation/Animation
	 * @author pissang(https://github.com/pissang)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	        
	        'use strict';

	        var Clip = __webpack_require__(42);
	        var color = __webpack_require__(43);
	        var util = __webpack_require__(33);
	        var Dispatcher = __webpack_require__(44).Dispatcher;

	        var requestAnimationFrame = window.requestAnimationFrame
	                                    || window.msRequestAnimationFrame
	                                    || window.mozRequestAnimationFrame
	                                    || window.webkitRequestAnimationFrame
	                                    || function (func) {
	                                        setTimeout(func, 16);
	                                    };

	        var arraySlice = Array.prototype.slice;

	        /**
	         * @typedef {Object} IZRenderStage
	         * @property {Function} update
	         */
	        
	        /** 
	         * @alias module:zrender/animation/Animation
	         * @constructor
	         * @param {Object} [options]
	         * @param {Function} [options.onframe]
	         * @param {IZRenderStage} [options.stage]
	         * @example
	         *     var animation = new Animation();
	         *     var obj = {
	         *         x: 100,
	         *         y: 100
	         *     };
	         *     animation.animate(node.position)
	         *         .when(1000, {
	         *             x: 500,
	         *             y: 500
	         *         })
	         *         .when(2000, {
	         *             x: 100,
	         *             y: 100
	         *         })
	         *         .start('spline');
	         */
	        var Animation = function (options) {

	            options = options || {};

	            this.stage = options.stage || {};

	            this.onframe = options.onframe || function() {};

	            // private properties
	            this._clips = [];

	            this._running = false;

	            this._time = 0;

	            Dispatcher.call(this);
	        };

	        Animation.prototype = {
	            /**
	             * 添加动画片段
	             * @param {module:zrender/animation/Clip} clip
	             */
	            add: function(clip) {
	                this._clips.push(clip);
	            },
	            /**
	             * 删除动画片段
	             * @param {module:zrender/animation/Clip} clip
	             */
	            remove: function(clip) {
	                var idx = util.indexOf(this._clips, clip);
	                if (idx >= 0) {
	                    this._clips.splice(idx, 1);
	                }
	            },
	            _update: function() {

	                var time = new Date().getTime();
	                var delta = time - this._time;
	                var clips = this._clips;
	                var len = clips.length;

	                var deferredEvents = [];
	                var deferredClips = [];
	                for (var i = 0; i < len; i++) {
	                    var clip = clips[i];
	                    var e = clip.step(time);
	                    // Throw out the events need to be called after
	                    // stage.update, like destroy
	                    if (e) {
	                        deferredEvents.push(e);
	                        deferredClips.push(clip);
	                    }
	                }

	                // Remove the finished clip
	                for (var i = 0; i < len;) {
	                    if (clips[i]._needsRemove) {
	                        clips[i] = clips[len - 1];
	                        clips.pop();
	                        len--;
	                    }
	                    else {
	                        i++;
	                    }
	                }

	                len = deferredEvents.length;
	                for (var i = 0; i < len; i++) {
	                    deferredClips[i].fire(deferredEvents[i]);
	                }

	                this._time = time;

	                this.onframe(delta);

	                this.dispatch('frame', delta);

	                if (this.stage.update) {
	                    this.stage.update();
	                }
	            },
	            /**
	             * 开始运行动画
	             */
	            start: function () {
	                var self = this;

	                this._running = true;

	                function step() {
	                    if (self._running) {
	                        
	                        requestAnimationFrame(step);

	                        self._update();
	                    }
	                }

	                this._time = new Date().getTime();
	                requestAnimationFrame(step);
	            },
	            /**
	             * 停止运行动画
	             */
	            stop: function () {
	                this._running = false;
	            },
	            /**
	             * 清除所有动画片段
	             */
	            clear : function () {
	                this._clips = [];
	            },
	            /**
	             * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画
	             * @param  {Object} target
	             * @param  {Object} options
	             * @param  {boolean} [options.loop=false] 是否循环播放动画
	             * @param  {Function} [options.getter=null]
	             *         如果指定getter函数，会通过getter函数取属性值
	             * @param  {Function} [options.setter=null]
	             *         如果指定setter函数，会通过setter函数设置属性值
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            animate : function (target, options) {
	                options = options || {};
	                var deferred = new Animator(
	                    target,
	                    options.loop,
	                    options.getter, 
	                    options.setter
	                );
	                deferred.animation = this;
	                return deferred;
	            },
	            constructor: Animation
	        };

	        util.merge(Animation.prototype, Dispatcher.prototype, true);

	        function _defaultGetter(target, key) {
	            return target[key];
	        }

	        function _defaultSetter(target, key, value) {
	            target[key] = value;
	        }

	        function _interpolateNumber(p0, p1, percent) {
	            return (p1 - p0) * percent + p0;
	        }

	        function _interpolateArray(p0, p1, percent, out, arrDim) {
	            var len = p0.length;
	            if (arrDim == 1) {
	                for (var i = 0; i < len; i++) {
	                    out[i] = _interpolateNumber(p0[i], p1[i], percent); 
	                }
	            }
	            else {
	                var len2 = p0[0].length;
	                for (var i = 0; i < len; i++) {
	                    for (var j = 0; j < len2; j++) {
	                        out[i][j] = _interpolateNumber(
	                            p0[i][j], p1[i][j], percent
	                        );
	                    }
	                }
	            }
	        }

	        function _isArrayLike(data) {
	            switch (typeof data) {
	                case 'undefined':
	                case 'string':
	                    return false;
	            }
	            
	            return typeof data.length !== 'undefined';
	        }

	        function _catmullRomInterpolateArray(
	            p0, p1, p2, p3, t, t2, t3, out, arrDim
	        ) {
	            var len = p0.length;
	            if (arrDim == 1) {
	                for (var i = 0; i < len; i++) {
	                    out[i] = _catmullRomInterpolate(
	                        p0[i], p1[i], p2[i], p3[i], t, t2, t3
	                    );
	                }
	            }
	            else {
	                var len2 = p0[0].length;
	                for (var i = 0; i < len; i++) {
	                    for (var j = 0; j < len2; j++) {
	                        out[i][j] = _catmullRomInterpolate(
	                            p0[i][j], p1[i][j], p2[i][j], p3[i][j],
	                            t, t2, t3
	                        );
	                    }
	                }
	            }
	        }

	        function _catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {
	            var v0 = (p2 - p0) * 0.5;
	            var v1 = (p3 - p1) * 0.5;
	            return (2 * (p1 - p2) + v0 + v1) * t3 
	                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2
	                    + v0 * t + p1;
	        }

	        function _cloneValue(value) {
	            if (_isArrayLike(value)) {
	                var len = value.length;
	                if (_isArrayLike(value[0])) {
	                    var ret = [];
	                    for (var i = 0; i < len; i++) {
	                        ret.push(arraySlice.call(value[i]));
	                    }
	                    return ret;
	                }
	                else {
	                    return arraySlice.call(value);
	                }
	            }
	            else {
	                return value;
	            }
	        }

	        function rgba2String(rgba) {
	            rgba[0] = Math.floor(rgba[0]);
	            rgba[1] = Math.floor(rgba[1]);
	            rgba[2] = Math.floor(rgba[2]);

	            return 'rgba(' + rgba.join(',') + ')';
	        }

	        /**
	         * @alias module:zrender/animation/Animation~Animator
	         * @constructor
	         * @param {Object} target
	         * @param {boolean} loop
	         * @param {Function} getter
	         * @param {Function} setter
	         */
	        var Animator = function(target, loop, getter, setter) {
	            this._tracks = {};
	            this._target = target;

	            this._loop = loop || false;

	            this._getter = getter || _defaultGetter;
	            this._setter = setter || _defaultSetter;

	            this._clipCount = 0;

	            this._delay = 0;

	            this._doneList = [];

	            this._onframeList = [];

	            this._clipList = [];
	        };

	        Animator.prototype = {
	            /**
	             * 设置动画关键帧
	             * @param  {number} time 关键帧时间，单位是ms
	             * @param  {Object} props 关键帧的属性值，key-value表示
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            when : function(time /* ms */, props) {
	                for (var propName in props) {
	                    if (!this._tracks[propName]) {
	                        this._tracks[propName] = [];
	                        // If time is 0 
	                        //  Then props is given initialize value
	                        // Else
	                        //  Initialize value from current prop value
	                        if (time !== 0) {
	                            this._tracks[propName].push({
	                                time : 0,
	                                value : _cloneValue(
	                                    this._getter(this._target, propName)
	                                )
	                            });
	                        }
	                    }
	                    this._tracks[propName].push({
	                        time : parseInt(time, 10),
	                        value : props[propName]
	                    });
	                }
	                return this;
	            },
	            /**
	             * 添加动画每一帧的回调函数
	             * @param  {Function} callback
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            during: function (callback) {
	                this._onframeList.push(callback);
	                return this;
	            },
	            /**
	             * 开始执行动画
	             * @param  {string|Function} easing 
	             *         动画缓动函数，详见{@link module:zrender/animation/easing}
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            start: function (easing) {

	                var self = this;
	                var setter = this._setter;
	                var getter = this._getter;
	                var useSpline = easing === 'spline';

	                var ondestroy = function() {
	                    self._clipCount--;
	                    if (self._clipCount === 0) {
	                        // Clear all tracks
	                        self._tracks = {};

	                        var len = self._doneList.length;
	                        for (var i = 0; i < len; i++) {
	                            self._doneList[i].call(self);
	                        }
	                    }
	                };

	                var createTrackClip = function (keyframes, propName) {
	                    var trackLen = keyframes.length;
	                    if (!trackLen) {
	                        return;
	                    }
	                    // Guess data type
	                    var firstVal = keyframes[0].value;
	                    var isValueArray = _isArrayLike(firstVal);
	                    var isValueColor = false;

	                    // For vertices morphing
	                    var arrDim = (
	                            isValueArray 
	                            && _isArrayLike(firstVal[0])
	                        )
	                        ? 2 : 1;
	                    // Sort keyframe as ascending
	                    keyframes.sort(function(a, b) {
	                        return a.time - b.time;
	                    });
	                    var trackMaxTime;
	                    if (trackLen) {
	                        trackMaxTime = keyframes[trackLen - 1].time;
	                    }
	                    else {
	                        return;
	                    }
	                    // Percents of each keyframe
	                    var kfPercents = [];
	                    // Value of each keyframe
	                    var kfValues = [];
	                    for (var i = 0; i < trackLen; i++) {
	                        kfPercents.push(keyframes[i].time / trackMaxTime);
	                        // Assume value is a color when it is a string
	                        var value = keyframes[i].value;
	                        if (typeof(value) == 'string') {
	                            value = color.toArray(value);
	                            if (value.length === 0) {    // Invalid color
	                                value[0] = value[1] = value[2] = 0;
	                                value[3] = 1;
	                            }
	                            isValueColor = true;
	                        }
	                        kfValues.push(value);
	                    }

	                    // Cache the key of last frame to speed up when 
	                    // animation playback is sequency
	                    var cacheKey = 0;
	                    var cachePercent = 0;
	                    var start;
	                    var i;
	                    var w;
	                    var p0;
	                    var p1;
	                    var p2;
	                    var p3;


	                    if (isValueColor) {
	                        var rgba = [ 0, 0, 0, 0 ];
	                    }

	                    var onframe = function (target, percent) {
	                        // Find the range keyframes
	                        // kf1-----kf2---------current--------kf3
	                        // find kf2 and kf3 and do interpolation
	                        if (percent < cachePercent) {
	                            // Start from next key
	                            start = Math.min(cacheKey + 1, trackLen - 1);
	                            for (i = start; i >= 0; i--) {
	                                if (kfPercents[i] <= percent) {
	                                    break;
	                                }
	                            }
	                            i = Math.min(i, trackLen - 2);
	                        }
	                        else {
	                            for (i = cacheKey; i < trackLen; i++) {
	                                if (kfPercents[i] > percent) {
	                                    break;
	                                }
	                            }
	                            i = Math.min(i - 1, trackLen - 2);
	                        }
	                        cacheKey = i;
	                        cachePercent = percent;

	                        var range = (kfPercents[i + 1] - kfPercents[i]);
	                        if (range === 0) {
	                            return;
	                        }
	                        else {
	                            w = (percent - kfPercents[i]) / range;
	                        }
	                        if (useSpline) {
	                            p1 = kfValues[i];
	                            p0 = kfValues[i === 0 ? i : i - 1];
	                            p2 = kfValues[i > trackLen - 2 ? trackLen - 1 : i + 1];
	                            p3 = kfValues[i > trackLen - 3 ? trackLen - 1 : i + 2];
	                            if (isValueArray) {
	                                _catmullRomInterpolateArray(
	                                    p0, p1, p2, p3, w, w * w, w * w * w,
	                                    getter(target, propName),
	                                    arrDim
	                                );
	                            }
	                            else {
	                                var value;
	                                if (isValueColor) {
	                                    value = _catmullRomInterpolateArray(
	                                        p0, p1, p2, p3, w, w * w, w * w * w,
	                                        rgba, 1
	                                    );
	                                    value = rgba2String(rgba);
	                                }
	                                else {
	                                    value = _catmullRomInterpolate(
	                                        p0, p1, p2, p3, w, w * w, w * w * w
	                                    );
	                                }
	                                setter(
	                                    target,
	                                    propName,
	                                    value
	                                );
	                            }
	                        }
	                        else {
	                            if (isValueArray) {
	                                _interpolateArray(
	                                    kfValues[i], kfValues[i + 1], w,
	                                    getter(target, propName),
	                                    arrDim
	                                );
	                            }
	                            else {
	                                var value;
	                                if (isValueColor) {
	                                    _interpolateArray(
	                                        kfValues[i], kfValues[i + 1], w,
	                                        rgba, 1
	                                    );
	                                    value = rgba2String(rgba);
	                                }
	                                else {
	                                    value = _interpolateNumber(kfValues[i], kfValues[i + 1], w);
	                                }
	                                setter(
	                                    target,
	                                    propName,
	                                    value
	                                );
	                            }
	                        }

	                        for (i = 0; i < self._onframeList.length; i++) {
	                            self._onframeList[i](target, percent);
	                        }
	                    };

	                    var clip = new Clip({
	                        target : self._target,
	                        life : trackMaxTime,
	                        loop : self._loop,
	                        delay : self._delay,
	                        onframe : onframe,
	                        ondestroy : ondestroy
	                    });

	                    if (easing && easing !== 'spline') {
	                        clip.easing = easing;
	                    }
	                    self._clipList.push(clip);
	                    self._clipCount++;
	                    self.animation.add(clip);
	                };

	                for (var propName in this._tracks) {
	                    createTrackClip(this._tracks[propName], propName);
	                }
	                return this;
	            },
	            /**
	             * 停止动画
	             */
	            stop : function() {
	                for (var i = 0; i < this._clipList.length; i++) {
	                    var clip = this._clipList[i];
	                    this.animation.remove(clip);
	                }
	                this._clipList = [];
	            },
	            /**
	             * 设置动画延迟开始的时间
	             * @param  {number} time 单位ms
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            delay : function (time) {
	                this._delay = time;
	                return this;
	            },
	            /**
	             * 添加动画结束的回调
	             * @param  {Function} cb
	             * @return {module:zrender/animation/Animation~Animator}
	             */
	            done : function(cb) {
	                if (cb) {
	                    this._doneList.push(cb);
	                }
	                return this;
	            }
	        };

	        return Animation;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
		var tmpl = '<div class="m-sidebar" style="right:-240px;">\
					</div>';
		return tmpl;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (environment) {
		var tmpl = '<div class="m-head">\
						<div class="content f-cb">\
							<div class="avatar">\
								<a href="'+environment.host+'/public/venvy/app/user.html#/index" target="_blank">\
									<img src="{{{avatar}}}">\
								</a>\
							</div>\
							<div class="info">\
								<h2 class="name">{{{name}}}</h2>\
								<p class="slogan">{{{desc}}}</p>\
							</div>\
						</div>\
						<div class="search">\
							<input type="text" placeholder="搜索你想要标注的物体"></input>\
							<p class="hint"><span class="numner">0</span>/<span class="total">12</span></p>\
						</div>\
					</div>';
		return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_RESULT__ = function (dgList) {
		var tmpl = '<div class="m-body">\
						<div class="list">\
							{{#if isLogined}}\
							<ol>' + dgList + '</ol>\
							<div class="more">\
								{{#if dgList.[length]}}\
								<a href="javascript:void(0);">点击加载更多...</a>\
								{{else}}\
								没有收藏的云窗\
								{{/if}}\
							</div>\
							{{else}}\
							<div class="note">请先<a>登录</a>，查看云窗信息</div>\
							{{/if}}\
						</div>\
					</div>';
		return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
		var tmpl = '{{#each dgList}}\
						<li data-id="{{{_id}}}">\
							<div class="picture">\
								<img src="{{pic.[0].[url]}}">\
							</div>\
							<div class="content">\
								<div class="head">\
									<h2>{{{title}}}</h2>\
									{{#if isFav}}\
									<span class="ivaiconfont">&#xe6b7;</span>\
									{{/if}}\
								</div>\
								<div class="detail">\
									<p>{{{desc}}}</p>\
								</div>\
							</div>\
							<div class="mask">点击引用</div>\
						</li>\
					{{/each}}';
		return tmpl;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (environment) {
		var tmpl = '<div class="m-dgmask" style="display:none;">\
						<div class="m-dgshow">\
							{{#if isQuote}}\
							<div class="slogan">\
								<div class="ligature"></div>\
								<input class="u-input" type="text" placeholder="标签显示文字" maxlength="12"/>\
								<div class="u-icon ivaiconfont">&#xe62d;</div>\
							</div>\
							{{/if}}\
							<div class="close"></div>\
							<div class="head f-cb">\
								<div class="ligature"></div>\
								<div class="title">{{{title}}}</div>\
							</div>\
							<div class="body">\
								<div class="summary f-cb">\
									<div class="picWrap">\
										<div class="pics">\
											<img src="{{{pic.[0].[url]}}}">\
										</div>\
										<div class="preview f-cb">\
											{{#each pic}}\
											<div class="preWrap">\
												<img src="{{{url}}}">\
											</div>\
											{{/each}}\
										</div>\
									</div>\
									<div class="linkWrap shadow">\
										{{#each link}}\
										<a href="{{{url}}}" target="_blank" data-id="{{{_id}}}">{{{name}}}</a>\
										{{/each}}\
										<div class="author">\
											<span>by</span>\
											<a href="'+environment.host+'/user/other?u={{{user.[_id]}}}" target="_blank">\
												<img src="{{{user.[avatar]}}}">\
											</a>\
										</div>\
										{{#if showFav}}\
										<div class="favour ivaiconfont" title="收藏">&#xe74f;</div>\
										<div class="cancelFavour ivaiconfont" title="取消收藏" style="display:none;">&#xe6b7;</div>\
										{{/if}}\
									</div>\
									<!--div class="shareWrap">\
										<a href="" class="fav"></a>\
										<div class="cuttingline"></div>\
										<a href="" class="weibo"></a>\
										<a href="" class="weixin"></a>\
										<a href="" class="friend"></a>\
									</div-->\
								</div>\
								<div class="detail shadow">\
									<div class="tab">\
										<span>详情</span>\
									</div>\
									<p>{{{desc}}}</p>\
								</div>\
							</div>\
							{{#if isQuote}}\
							<div class="submit">\
								<div class="ligature"></div>\
								<button>引&nbsp;&nbsp;用</button>\
							</div>\
							{{/if}}\
						</div>\
					</div>';
		return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(9),__webpack_require__(2),__webpack_require__(45),__webpack_require__(46),__webpack_require__(14),__webpack_require__(47),__webpack_require__(48),__webpack_require__(4),__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require,handlebar,ajax,logWindow_tmp,regester,iva_alert,validator,flash,environment,$) {
	    return function (container,callback,close_callback) {
	        if (!$('.m-login-and-regester').length){
	            var $login = $(handlebar.compile(logWindow_tmp('login'))());
	            container.before($login);
	            $login.hide();
	            $login.fadeIn(300);
	            $exit = $login.find('.exit')
	            $input_box = $login.find('.input-box')
	            $account_input = $login.find('.account-input');
	            $passwd_input = $login.find('.passwd-input');
	            $login_button = $login.find('.login-button');
	            $regester = $login.find('.regester');
	            $forget = $login.find('.forget');
	            $exit.click(function(){
	                $('.m-login-and-regester').fadeOut(300,function(){
	                    $(this).remove();
	                    if (close_callback)
	                        close_callback();
	                });
	            });
	            $input_box.focus(function(){
	                $(this).parent().find('.input-icon').addClass('input-icon-focus')
	            });
	            $input_box.blur(function(){
	                $(this).parent().find('.input-icon').removeClass('input-icon-focus')
	            });
	            $login_button.click(function(){
	                pack = {
	                    foo: $account_input.val(),
	                    pwd: $passwd_input.val()
	                }
	                if (pack.foo == ''){
	                    iva_alert(container,'用户名或密码不能为空');
	                    flash('.account-input',8,10,100);
	                }else if (!(validator.isEmail(pack.foo) || validator.isMobilePhone(pack.foo,'zh-CN'))){
	                    iva_alert(container,'用户名是您的邮箱或手机号');
	                    flash('.account-input',8,10,100);
	                }
	                if (pack.pwd == ''){
	                    iva_alert(container,'用户名或密码不能为空');
	                    flash('.passwd-input',8,10,100);
	                }else if(pack.pwd.length < 6 || pack.pwd.length > 30){
	                    iva_alert(container,'密码长度应在6-30位之间');
	                    flash('.passwd-input',8,10,100);
	                }
	                if (pack.foo != '' && (validator.isEmail(pack.foo) || validator.isMobilePhone(pack.foo,'zh-CN')) && pack.pwd != '' && (pack.pwd.length >= 6 || pack.pwd.length <= 30)){
	                    ajax('/sign', 'POST', pack
	                    , function (data) {
	                        console.log(data)
	                        if(data.status == 0){
	                            callback(data.msg);
	                            $('.m-login-and-regester').fadeOut(300,function(){
	                                $('.m-login-and-regester').remove();
	                            });
	                        }else if (data.status == 1) {
	                            iva_alert(container,'密码错误');
	                            flash('.passwd-input',8,10,100);
	                        }else if (data.status == 2) {
	                            iva_alert(container,'用户名不存在');
	                            flash('.account-input',8,10,100);
	                        }
	                    })
	                }
	            });

	            $regester.click(function(){
	                $login.fadeOut(300,function(){
	                    $login.remove();
	                    __webpack_require__(46)(container);
	                });
	            });
	            $forget.click(function(){
	                window.open(environment.host+'/user/forgetPwd');
	            });
	        }else{
	            $('.m-login-and-regester').fadeOut(300,function(){
	                $(this).remove();
	                if (close_callback)
	                    close_callback();
	            });
	        }
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function (queue) {
		return function (content) {
			var queue_length = 0
			for (qs in queue.queue){
				if(queue.queue[qs] == content)
					return
				queue_length++
			}
			if(content != null){
				queue.queue[queue_length] = content
			}else{
				return
			}
			console.log(queue.queue);
		}
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function (queue) {
		return function () {
			var queue_length = 0
			for (qs in queue.queue){
				queue_length++
			}
			for(var _i = 0; _i < queue_length - 1; _i++)
				queue.queue[_i] = queue.queue[_i + 1];
			delete(queue.queue[queue_length - 1])
			console.log(queue.queue);
		}
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	!(module.exports = {
		start_flag: false,
		queue: {}
	});

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function (queue) {
		return function () {
			var queue_length = 0
			for (qs in queue.queue){
				queue_length++
			}
			if (queue_length == 0){
				return true
			}else{
				return false
			}
		}
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    return function (obj) {
	        var Englishorsymbol=/^[A-Za-z]|[\x00-\uFF]+$/;
	        return Englishorsymbol.test(obj);
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright 2006 Google Inc.
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//   http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.


	// Known Issues:
	//
	// * Patterns only support repeat.
	// * Radial gradient are not implemented. The VML version of these look very
	//   different from the canvas one.
	// * Clipping paths are not implemented.
	// * Coordsize. The width and height attribute have higher priority than the
	//   width and height style values which isn't correct.
	// * Painting mode isn't implemented.
	// * Canvas width/height should is using content-box by default. IE in
	//   Quirks mode will draw the canvas using border-box. Either change your
	//   doctype to HTML5
	//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)
	//   or use Box Sizing Behavior from WebFX
	//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)
	// * Non uniform scaling does not correctly scale strokes.
	// * Optimize. There is always room for speed improvements.

	// AMD by kener.linfeng@gmail.com
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	    
	// Only add this code if we do not already have a canvas implementation
	if (!document.createElement('canvas').getContext) {

	(function() {

	  // alias some functions to make (compiled) code shorter
	  var m = Math;
	  var mr = m.round;
	  var ms = m.sin;
	  var mc = m.cos;
	  var abs = m.abs;
	  var sqrt = m.sqrt;

	  // this is used for sub pixel precision
	  var Z = 10;
	  var Z2 = Z / 2;

	  var IE_VERSION = +navigator.userAgent.match(/MSIE ([\d.]+)?/)[1];

	  /**
	   * This funtion is assigned to the <canvas> elements as element.getContext().
	   * @this {HTMLElement}
	   * @return {CanvasRenderingContext2D_}
	   */
	  function getContext() {
	    return this.context_ ||
	        (this.context_ = new CanvasRenderingContext2D_(this));
	  }

	  var slice = Array.prototype.slice;

	  /**
	   * Binds a function to an object. The returned function will always use the
	   * passed in {@code obj} as {@code this}.
	   *
	   * Example:
	   *
	   *   g = bind(f, obj, a, b)
	   *   g(c, d) // will do f.call(obj, a, b, c, d)
	   *
	   * @param {Function} f The function to bind the object to
	   * @param {Object} obj The object that should act as this when the function
	   *     is called
	   * @param {*} var_args Rest arguments that will be used as the initial
	   *     arguments when the function is called
	   * @return {Function} A new function that has bound this
	   */
	  function bind(f, obj, var_args) {
	    var a = slice.call(arguments, 2);
	    return function() {
	      return f.apply(obj, a.concat(slice.call(arguments)));
	    };
	  }

	  function encodeHtmlAttribute(s) {
	    return String(s).replace(/&/g, '&amp;').replace(/"/g, '&quot;');
	  }

	  function addNamespace(doc, prefix, urn) {
	    if (!doc.namespaces[prefix]) {
	      doc.namespaces.add(prefix, urn, '#default#VML');
	    }
	  }

	  function addNamespacesAndStylesheet(doc) {
	    addNamespace(doc, 'g_vml_', 'urn:schemas-microsoft-com:vml');
	    addNamespace(doc, 'g_o_', 'urn:schemas-microsoft-com:office:office');

	    // Setup default CSS.  Only add one style sheet per document
	    if (!doc.styleSheets['ex_canvas_']) {
	      var ss = doc.createStyleSheet();
	      ss.owningElement.id = 'ex_canvas_';
	      ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +
	          // default size is 300x150 in Gecko and Opera
	          'text-align:left;width:300px;height:150px}';
	    }
	  }

	  // Add namespaces and stylesheet at startup.
	  addNamespacesAndStylesheet(document);

	  var G_vmlCanvasManager_ = {
	    init: function(opt_doc) {
	      var doc = opt_doc || document;
	      // Create a dummy element so that IE will allow canvas elements to be
	      // recognized.
	      doc.createElement('canvas');
	      doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));
	    },

	    init_: function(doc) {
	      // find all canvas elements
	      var els = doc.getElementsByTagName('canvas');
	      for (var i = 0; i < els.length; i++) {
	        this.initElement(els[i]);
	      }
	    },

	    /**
	     * Public initializes a canvas element so that it can be used as canvas
	     * element from now on. This is called automatically before the page is
	     * loaded but if you are creating elements using createElement you need to
	     * make sure this is called on the element.
	     * @param {HTMLElement} el The canvas element to initialize.
	     * @return {HTMLElement} the element that was created.
	     */
	    initElement: function(el) {
	      if (!el.getContext) {
	        el.getContext = getContext;

	        // Add namespaces and stylesheet to document of the element.
	        addNamespacesAndStylesheet(el.ownerDocument);

	        // Remove fallback content. There is no way to hide text nodes so we
	        // just remove all childNodes. We could hide all elements and remove
	        // text nodes but who really cares about the fallback content.
	        el.innerHTML = '';

	        // do not use inline function because that will leak memory
	        el.attachEvent('onpropertychange', onPropertyChange);
	        el.attachEvent('onresize', onResize);

	        var attrs = el.attributes;
	        if (attrs.width && attrs.width.specified) {
	          // TODO: use runtimeStyle and coordsize
	          // el.getContext().setWidth_(attrs.width.nodeValue);
	          el.style.width = attrs.width.nodeValue + 'px';
	        } else {
	          el.width = el.clientWidth;
	        }
	        if (attrs.height && attrs.height.specified) {
	          // TODO: use runtimeStyle and coordsize
	          // el.getContext().setHeight_(attrs.height.nodeValue);
	          el.style.height = attrs.height.nodeValue + 'px';
	        } else {
	          el.height = el.clientHeight;
	        }
	        //el.getContext().setCoordsize_()
	      }
	      return el;
	    }
	  };

	  function onPropertyChange(e) {
	    var el = e.srcElement;

	    switch (e.propertyName) {
	      case 'width':
	        el.getContext().clearRect();
	        el.style.width = el.attributes.width.nodeValue + 'px';
	        // In IE8 this does not trigger onresize.
	        el.firstChild.style.width =  el.clientWidth + 'px';
	        break;
	      case 'height':
	        el.getContext().clearRect();
	        el.style.height = el.attributes.height.nodeValue + 'px';
	        el.firstChild.style.height = el.clientHeight + 'px';
	        break;
	    }
	  }

	  function onResize(e) {
	    var el = e.srcElement;
	    if (el.firstChild) {
	      el.firstChild.style.width =  el.clientWidth + 'px';
	      el.firstChild.style.height = el.clientHeight + 'px';
	    }
	  }

	  G_vmlCanvasManager_.init();

	  // precompute "00" to "FF"
	  var decToHex = [];
	  for (var i = 0; i < 16; i++) {
	    for (var j = 0; j < 16; j++) {
	      decToHex[i * 16 + j] = i.toString(16) + j.toString(16);
	    }
	  }

	  function createMatrixIdentity() {
	    return [
	      [1, 0, 0],
	      [0, 1, 0],
	      [0, 0, 1]
	    ];
	  }

	  function matrixMultiply(m1, m2) {
	    var result = createMatrixIdentity();

	    for (var x = 0; x < 3; x++) {
	      for (var y = 0; y < 3; y++) {
	        var sum = 0;

	        for (var z = 0; z < 3; z++) {
	          sum += m1[x][z] * m2[z][y];
	        }

	        result[x][y] = sum;
	      }
	    }
	    return result;
	  }

	  function copyState(o1, o2) {
	    o2.fillStyle     = o1.fillStyle;
	    o2.lineCap       = o1.lineCap;
	    o2.lineJoin      = o1.lineJoin;
	    o2.lineWidth     = o1.lineWidth;
	    o2.miterLimit    = o1.miterLimit;
	    o2.shadowBlur    = o1.shadowBlur;
	    o2.shadowColor   = o1.shadowColor;
	    o2.shadowOffsetX = o1.shadowOffsetX;
	    o2.shadowOffsetY = o1.shadowOffsetY;
	    o2.strokeStyle   = o1.strokeStyle;
	    o2.globalAlpha   = o1.globalAlpha;
	    o2.font          = o1.font;
	    o2.textAlign     = o1.textAlign;
	    o2.textBaseline  = o1.textBaseline;
	    o2.scaleX_    = o1.scaleX_;
	    o2.scaleY_    = o1.scaleY_;
	    o2.lineScale_    = o1.lineScale_;
	  }

	  var colorData = {
	    aliceblue: '#F0F8FF',
	    antiquewhite: '#FAEBD7',
	    aquamarine: '#7FFFD4',
	    azure: '#F0FFFF',
	    beige: '#F5F5DC',
	    bisque: '#FFE4C4',
	    black: '#000000',
	    blanchedalmond: '#FFEBCD',
	    blueviolet: '#8A2BE2',
	    brown: '#A52A2A',
	    burlywood: '#DEB887',
	    cadetblue: '#5F9EA0',
	    chartreuse: '#7FFF00',
	    chocolate: '#D2691E',
	    coral: '#FF7F50',
	    cornflowerblue: '#6495ED',
	    cornsilk: '#FFF8DC',
	    crimson: '#DC143C',
	    cyan: '#00FFFF',
	    darkblue: '#00008B',
	    darkcyan: '#008B8B',
	    darkgoldenrod: '#B8860B',
	    darkgray: '#A9A9A9',
	    darkgreen: '#006400',
	    darkgrey: '#A9A9A9',
	    darkkhaki: '#BDB76B',
	    darkmagenta: '#8B008B',
	    darkolivegreen: '#556B2F',
	    darkorange: '#FF8C00',
	    darkorchid: '#9932CC',
	    darkred: '#8B0000',
	    darksalmon: '#E9967A',
	    darkseagreen: '#8FBC8F',
	    darkslateblue: '#483D8B',
	    darkslategray: '#2F4F4F',
	    darkslategrey: '#2F4F4F',
	    darkturquoise: '#00CED1',
	    darkviolet: '#9400D3',
	    deeppink: '#FF1493',
	    deepskyblue: '#00BFFF',
	    dimgray: '#696969',
	    dimgrey: '#696969',
	    dodgerblue: '#1E90FF',
	    firebrick: '#B22222',
	    floralwhite: '#FFFAF0',
	    forestgreen: '#228B22',
	    gainsboro: '#DCDCDC',
	    ghostwhite: '#F8F8FF',
	    gold: '#FFD700',
	    goldenrod: '#DAA520',
	    grey: '#808080',
	    greenyellow: '#ADFF2F',
	    honeydew: '#F0FFF0',
	    hotpink: '#FF69B4',
	    indianred: '#CD5C5C',
	    indigo: '#4B0082',
	    ivory: '#FFFFF0',
	    khaki: '#F0E68C',
	    lavender: '#E6E6FA',
	    lavenderblush: '#FFF0F5',
	    lawngreen: '#7CFC00',
	    lemonchiffon: '#FFFACD',
	    lightblue: '#ADD8E6',
	    lightcoral: '#F08080',
	    lightcyan: '#E0FFFF',
	    lightgoldenrodyellow: '#FAFAD2',
	    lightgreen: '#90EE90',
	    lightgrey: '#D3D3D3',
	    lightpink: '#FFB6C1',
	    lightsalmon: '#FFA07A',
	    lightseagreen: '#20B2AA',
	    lightskyblue: '#87CEFA',
	    lightslategray: '#778899',
	    lightslategrey: '#778899',
	    lightsteelblue: '#B0C4DE',
	    lightyellow: '#FFFFE0',
	    limegreen: '#32CD32',
	    linen: '#FAF0E6',
	    magenta: '#FF00FF',
	    mediumaquamarine: '#66CDAA',
	    mediumblue: '#0000CD',
	    mediumorchid: '#BA55D3',
	    mediumpurple: '#9370DB',
	    mediumseagreen: '#3CB371',
	    mediumslateblue: '#7B68EE',
	    mediumspringgreen: '#00FA9A',
	    mediumturquoise: '#48D1CC',
	    mediumvioletred: '#C71585',
	    midnightblue: '#191970',
	    mintcream: '#F5FFFA',
	    mistyrose: '#FFE4E1',
	    moccasin: '#FFE4B5',
	    navajowhite: '#FFDEAD',
	    oldlace: '#FDF5E6',
	    olivedrab: '#6B8E23',
	    orange: '#FFA500',
	    orangered: '#FF4500',
	    orchid: '#DA70D6',
	    palegoldenrod: '#EEE8AA',
	    palegreen: '#98FB98',
	    paleturquoise: '#AFEEEE',
	    palevioletred: '#DB7093',
	    papayawhip: '#FFEFD5',
	    peachpuff: '#FFDAB9',
	    peru: '#CD853F',
	    pink: '#FFC0CB',
	    plum: '#DDA0DD',
	    powderblue: '#B0E0E6',
	    rosybrown: '#BC8F8F',
	    royalblue: '#4169E1',
	    saddlebrown: '#8B4513',
	    salmon: '#FA8072',
	    sandybrown: '#F4A460',
	    seagreen: '#2E8B57',
	    seashell: '#FFF5EE',
	    sienna: '#A0522D',
	    skyblue: '#87CEEB',
	    slateblue: '#6A5ACD',
	    slategray: '#708090',
	    slategrey: '#708090',
	    snow: '#FFFAFA',
	    springgreen: '#00FF7F',
	    steelblue: '#4682B4',
	    tan: '#D2B48C',
	    thistle: '#D8BFD8',
	    tomato: '#FF6347',
	    turquoise: '#40E0D0',
	    violet: '#EE82EE',
	    wheat: '#F5DEB3',
	    whitesmoke: '#F5F5F5',
	    yellowgreen: '#9ACD32'
	  };


	  function getRgbHslContent(styleString) {
	    var start = styleString.indexOf('(', 3);
	    var end = styleString.indexOf(')', start + 1);
	    var parts = styleString.substring(start + 1, end).split(',');
	    // add alpha if needed
	    if (parts.length != 4 || styleString.charAt(3) != 'a') {
	      parts[3] = 1;
	    }
	    return parts;
	  }

	  function percent(s) {
	    return parseFloat(s) / 100;
	  }

	  function clamp(v, min, max) {
	    return Math.min(max, Math.max(min, v));
	  }

	  function hslToRgb(parts){
	    var r, g, b, h, s, l;
	    h = parseFloat(parts[0]) / 360 % 360;
	    if (h < 0)
	      h++;
	    s = clamp(percent(parts[1]), 0, 1);
	    l = clamp(percent(parts[2]), 0, 1);
	    if (s == 0) {
	      r = g = b = l; // achromatic
	    } else {
	      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
	      var p = 2 * l - q;
	      r = hueToRgb(p, q, h + 1 / 3);
	      g = hueToRgb(p, q, h);
	      b = hueToRgb(p, q, h - 1 / 3);
	    }

	    return '#' + decToHex[Math.floor(r * 255)] +
	        decToHex[Math.floor(g * 255)] +
	        decToHex[Math.floor(b * 255)];
	  }

	  function hueToRgb(m1, m2, h) {
	    if (h < 0)
	      h++;
	    if (h > 1)
	      h--;

	    if (6 * h < 1)
	      return m1 + (m2 - m1) * 6 * h;
	    else if (2 * h < 1)
	      return m2;
	    else if (3 * h < 2)
	      return m1 + (m2 - m1) * (2 / 3 - h) * 6;
	    else
	      return m1;
	  }

	  var processStyleCache = {};

	  function processStyle(styleString) {
	    if (styleString in processStyleCache) {
	      return processStyleCache[styleString];
	    }

	    var str, alpha = 1;

	    styleString = String(styleString);
	    if (styleString.charAt(0) == '#') {
	      str = styleString;
	    } else if (/^rgb/.test(styleString)) {
	      var parts = getRgbHslContent(styleString);
	      var str = '#', n;
	      for (var i = 0; i < 3; i++) {
	        if (parts[i].indexOf('%') != -1) {
	          n = Math.floor(percent(parts[i]) * 255);
	        } else {
	          n = +parts[i];
	        }
	        str += decToHex[clamp(n, 0, 255)];
	      }
	      alpha = +parts[3];
	    } else if (/^hsl/.test(styleString)) {
	      var parts = getRgbHslContent(styleString);
	      str = hslToRgb(parts);
	      alpha = parts[3];
	    } else {
	      str = colorData[styleString] || styleString;
	    }
	    return processStyleCache[styleString] = {color: str, alpha: alpha};
	  }

	  var DEFAULT_STYLE = {
	    style: 'normal',
	    variant: 'normal',
	    weight: 'normal',
	    size: 12,           //10
	    family: '微软雅黑'     //'sans-serif'
	  };

	  // Internal text style cache
	  var fontStyleCache = {};

	  function processFontStyle(styleString) {
	    if (fontStyleCache[styleString]) {
	      return fontStyleCache[styleString];
	    }

	    var el = document.createElement('div');
	    var style = el.style;
	    var fontFamily;
	    try {
	      style.font = styleString;
	      fontFamily = style.fontFamily.split(',')[0];
	    } catch (ex) {
	      // Ignore failures to set to invalid font.
	    }

	    return fontStyleCache[styleString] = {
	      style: style.fontStyle || DEFAULT_STYLE.style,
	      variant: style.fontVariant || DEFAULT_STYLE.variant,
	      weight: style.fontWeight || DEFAULT_STYLE.weight,
	      size: style.fontSize || DEFAULT_STYLE.size,
	      family: fontFamily || DEFAULT_STYLE.family
	    };
	  }

	  function getComputedStyle(style, element) {
	    var computedStyle = {};

	    for (var p in style) {
	      computedStyle[p] = style[p];
	    }

	    // Compute the size
	    var canvasFontSize = parseFloat(element.currentStyle.fontSize),
	        fontSize = parseFloat(style.size);

	    if (typeof style.size == 'number') {
	      computedStyle.size = style.size;
	    } else if (style.size.indexOf('px') != -1) {
	      computedStyle.size = fontSize;
	    } else if (style.size.indexOf('em') != -1) {
	      computedStyle.size = canvasFontSize * fontSize;
	    } else if(style.size.indexOf('%') != -1) {
	      computedStyle.size = (canvasFontSize / 100) * fontSize;
	    } else if (style.size.indexOf('pt') != -1) {
	      computedStyle.size = fontSize / .75;
	    } else {
	      computedStyle.size = canvasFontSize;
	    }

	    // Different scaling between normal text and VML text. This was found using
	    // trial and error to get the same size as non VML text.
	    //computedStyle.size *= 0.981;

	    return computedStyle;
	  }

	  function buildStyle(style) {
	    return style.style + ' ' + style.variant + ' ' + style.weight + ' ' +
	        style.size + "px '" + style.family + "'";
	  }

	  var lineCapMap = {
	    'butt': 'flat',
	    'round': 'round'
	  };

	  function processLineCap(lineCap) {
	    return lineCapMap[lineCap] || 'square';
	  }

	  /**
	   * This class implements CanvasRenderingContext2D interface as described by
	   * the WHATWG.
	   * @param {HTMLElement} canvasElement The element that the 2D context should
	   * be associated with
	   */
	  function CanvasRenderingContext2D_(canvasElement) {
	    this.m_ = createMatrixIdentity();

	    this.mStack_ = [];
	    this.aStack_ = [];
	    this.currentPath_ = [];

	    // Canvas context properties
	    this.strokeStyle = '#000';
	    this.fillStyle = '#000';

	    this.lineWidth = 1;
	    this.lineJoin = 'miter';
	    this.lineCap = 'butt';
	    this.miterLimit = Z * 1;
	    this.globalAlpha = 1;
	    // this.font = '10px sans-serif';
	    this.font = '12px 微软雅黑';        // 决定还是改这吧，影响代价最小
	    this.textAlign = 'left';
	    this.textBaseline = 'alphabetic';
	    this.canvas = canvasElement;

	    var cssText = 'width:' + canvasElement.clientWidth + 'px;height:' +
	        canvasElement.clientHeight + 'px;overflow:hidden;position:absolute';
	    var el = canvasElement.ownerDocument.createElement('div');
	    el.style.cssText = cssText;
	    canvasElement.appendChild(el);

	    var overlayEl = el.cloneNode(false);
	    // Use a non transparent background.
	    overlayEl.style.backgroundColor = '#fff'; //red, I don't know why, it work! 
	    overlayEl.style.filter = 'alpha(opacity=0)';
	    canvasElement.appendChild(overlayEl);

	    this.element_ = el;
	    this.scaleX_ = 1;
	    this.scaleY_ = 1;
	    this.lineScale_ = 1;
	  }

	  var contextPrototype = CanvasRenderingContext2D_.prototype;
	  contextPrototype.clearRect = function() {
	    if (this.textMeasureEl_) {
	      this.textMeasureEl_.removeNode(true);
	      this.textMeasureEl_ = null;
	    }
	    this.element_.innerHTML = '';
	  };

	  contextPrototype.beginPath = function() {
	    // TODO: Branch current matrix so that save/restore has no effect
	    //       as per safari docs.
	    this.currentPath_ = [];
	  };

	  contextPrototype.moveTo = function(aX, aY) {
	    var p = getCoords(this, aX, aY);
	    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});
	    this.currentX_ = p.x;
	    this.currentY_ = p.y;
	  };

	  contextPrototype.lineTo = function(aX, aY) {
	    var p = getCoords(this, aX, aY);
	    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});

	    this.currentX_ = p.x;
	    this.currentY_ = p.y;
	  };

	  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,
	                                            aCP2x, aCP2y,
	                                            aX, aY) {
	    var p = getCoords(this, aX, aY);
	    var cp1 = getCoords(this, aCP1x, aCP1y);
	    var cp2 = getCoords(this, aCP2x, aCP2y);
	    bezierCurveTo(this, cp1, cp2, p);
	  };

	  // Helper function that takes the already fixed cordinates.
	  function bezierCurveTo(self, cp1, cp2, p) {
	    self.currentPath_.push({
	      type: 'bezierCurveTo',
	      cp1x: cp1.x,
	      cp1y: cp1.y,
	      cp2x: cp2.x,
	      cp2y: cp2.y,
	      x: p.x,
	      y: p.y
	    });
	    self.currentX_ = p.x;
	    self.currentY_ = p.y;
	  }

	  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {
	    // the following is lifted almost directly from
	    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes

	    var cp = getCoords(this, aCPx, aCPy);
	    var p = getCoords(this, aX, aY);

	    var cp1 = {
	      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),
	      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)
	    };
	    var cp2 = {
	      x: cp1.x + (p.x - this.currentX_) / 3.0,
	      y: cp1.y + (p.y - this.currentY_) / 3.0
	    };

	    bezierCurveTo(this, cp1, cp2, p);
	  };

	  contextPrototype.arc = function(aX, aY, aRadius,
	                                  aStartAngle, aEndAngle, aClockwise) {
	    aRadius *= Z;
	    var arcType = aClockwise ? 'at' : 'wa';

	    var xStart = aX + mc(aStartAngle) * aRadius - Z2;
	    var yStart = aY + ms(aStartAngle) * aRadius - Z2;

	    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;
	    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;

	    // IE won't render arches drawn counter clockwise if xStart == xEnd.
	    if (xStart == xEnd && !aClockwise) {
	      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something
	                       // that can be represented in binary
	    }

	    var p = getCoords(this, aX, aY);
	    var pStart = getCoords(this, xStart, yStart);
	    var pEnd = getCoords(this, xEnd, yEnd);

	    this.currentPath_.push({type: arcType,
	                           x: p.x,
	                           y: p.y,
	                           radius: aRadius,
	                           xStart: pStart.x,
	                           yStart: pStart.y,
	                           xEnd: pEnd.x,
	                           yEnd: pEnd.y});

	  };

	  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {
	    this.moveTo(aX, aY);
	    this.lineTo(aX + aWidth, aY);
	    this.lineTo(aX + aWidth, aY + aHeight);
	    this.lineTo(aX, aY + aHeight);
	    this.closePath();
	  };

	  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {
	    var oldPath = this.currentPath_;
	    this.beginPath();

	    this.moveTo(aX, aY);
	    this.lineTo(aX + aWidth, aY);
	    this.lineTo(aX + aWidth, aY + aHeight);
	    this.lineTo(aX, aY + aHeight);
	    this.closePath();
	    this.stroke();

	    this.currentPath_ = oldPath;
	  };

	  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {
	    var oldPath = this.currentPath_;
	    this.beginPath();

	    this.moveTo(aX, aY);
	    this.lineTo(aX + aWidth, aY);
	    this.lineTo(aX + aWidth, aY + aHeight);
	    this.lineTo(aX, aY + aHeight);
	    this.closePath();
	    this.fill();

	    this.currentPath_ = oldPath;
	  };

	  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {
	    var gradient = new CanvasGradient_('gradient');
	    gradient.x0_ = aX0;
	    gradient.y0_ = aY0;
	    gradient.x1_ = aX1;
	    gradient.y1_ = aY1;
	    return gradient;
	  };

	  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,
	                                                   aX1, aY1, aR1) {
	    var gradient = new CanvasGradient_('gradientradial');
	    gradient.x0_ = aX0;
	    gradient.y0_ = aY0;
	    gradient.r0_ = aR0;
	    gradient.x1_ = aX1;
	    gradient.y1_ = aY1;
	    gradient.r1_ = aR1;
	    return gradient;
	  };

	  contextPrototype.drawImage = function(image, var_args) {
	    var dx, dy, dw, dh, sx, sy, sw, sh;

	    // to find the original width we overide the width and height
	    var oldRuntimeWidth = image.runtimeStyle.width;
	    var oldRuntimeHeight = image.runtimeStyle.height;
	    image.runtimeStyle.width = 'auto';
	    image.runtimeStyle.height = 'auto';

	    // get the original size
	    var w = image.width;
	    var h = image.height;

	    // and remove overides
	    image.runtimeStyle.width = oldRuntimeWidth;
	    image.runtimeStyle.height = oldRuntimeHeight;

	    if (arguments.length == 3) {
	      dx = arguments[1];
	      dy = arguments[2];
	      sx = sy = 0;
	      sw = dw = w;
	      sh = dh = h;
	    } else if (arguments.length == 5) {
	      dx = arguments[1];
	      dy = arguments[2];
	      dw = arguments[3];
	      dh = arguments[4];
	      sx = sy = 0;
	      sw = w;
	      sh = h;
	    } else if (arguments.length == 9) {
	      sx = arguments[1];
	      sy = arguments[2];
	      sw = arguments[3];
	      sh = arguments[4];
	      dx = arguments[5];
	      dy = arguments[6];
	      dw = arguments[7];
	      dh = arguments[8];
	    } else {
	      throw Error('Invalid number of arguments');
	    }

	    var d = getCoords(this, dx, dy);

	    var w2 = sw / 2;
	    var h2 = sh / 2;

	    var vmlStr = [];

	    var W = 10;
	    var H = 10;

	    var scaleX = scaleY = 1;
	    
	    // For some reason that I've now forgotten, using divs didn't work
	    vmlStr.push(' <g_vml_:group',
	                ' coordsize="', Z * W, ',', Z * H, '"',
	                ' coordorigin="0,0"' ,
	                ' style="width:', W, 'px;height:', H, 'px;position:absolute;');

	    // If filters are necessary (rotation exists), create them
	    // filters are bog-slow, so only create them if abbsolutely necessary
	    // The following check doesn't account for skews (which don't exist
	    // in the canvas spec (yet) anyway.

	    if (this.m_[0][0] != 1 || this.m_[0][1] ||
	        this.m_[1][1] != 1 || this.m_[1][0]) {
	      var filter = [];

	     var scaleX = this.scaleX_;
	     var scaleY = this.scaleY_;
	      // Note the 12/21 reversal
	      filter.push('M11=', this.m_[0][0] / scaleX, ',',
	                  'M12=', this.m_[1][0] / scaleY, ',',
	                  'M21=', this.m_[0][1] / scaleX, ',',
	                  'M22=', this.m_[1][1] / scaleY, ',',
	                  'Dx=', mr(d.x / Z), ',',
	                  'Dy=', mr(d.y / Z), '');

	      // Bounding box calculation (need to minimize displayed area so that
	      // filters don't waste time on unused pixels.
	      var max = d;
	      var c2 = getCoords(this, dx + dw, dy);
	      var c3 = getCoords(this, dx, dy + dh);
	      var c4 = getCoords(this, dx + dw, dy + dh);

	      max.x = m.max(max.x, c2.x, c3.x, c4.x);
	      max.y = m.max(max.y, c2.y, c3.y, c4.y);

	      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),
	                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',
	                  filter.join(''), ", SizingMethod='clip');");

	    } else {
	      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');
	    }

	    vmlStr.push(' ">');

	    // Draw a special cropping div if needed
	    if (sx || sy) {
	      // Apply scales to width and height
	      vmlStr.push('<div style="overflow: hidden; width:', Math.ceil((dw + sx * dw / sw) * scaleX), 'px;',
	                  ' height:', Math.ceil((dh + sy * dh / sh) * scaleY), 'px;',
	                  ' filter:progid:DxImageTransform.Microsoft.Matrix(Dx=',
	                  -sx * dw / sw * scaleX, ',Dy=', -sy * dh / sh * scaleY, ');">');
	    }
	    
	      
	    // Apply scales to width and height
	    vmlStr.push('<div style="width:', Math.round(scaleX * w * dw / sw), 'px;',
	                ' height:', Math.round(scaleY * h * dh / sh), 'px;',
	                ' filter:');
	   
	    // If there is a globalAlpha, apply it to image
	    if(this.globalAlpha < 1) {
	      vmlStr.push(' progid:DXImageTransform.Microsoft.Alpha(opacity=' + (this.globalAlpha * 100) + ')');
	    }
	    
	    vmlStr.push(' progid:DXImageTransform.Microsoft.AlphaImageLoader(src=', image.src, ',sizingMethod=scale)">');
	    
	    // Close the crop div if necessary            
	    if (sx || sy) vmlStr.push('</div>');
	    
	    vmlStr.push('</div></div>');
	    
	    this.element_.insertAdjacentHTML('BeforeEnd', vmlStr.join(''));
	  };

	  contextPrototype.stroke = function(aFill) {
	    var lineStr = [];
	    var lineOpen = false;

	    var W = 10;
	    var H = 10;

	    lineStr.push('<g_vml_:shape',
	                 ' filled="', !!aFill, '"',
	                 ' style="position:absolute;width:', W, 'px;height:', H, 'px;"',
	                 ' coordorigin="0,0"',
	                 ' coordsize="', Z * W, ',', Z * H, '"',
	                 ' stroked="', !aFill, '"',
	                 ' path="');

	    var newSeq = false;
	    var min = {x: null, y: null};
	    var max = {x: null, y: null};

	    for (var i = 0; i < this.currentPath_.length; i++) {
	      var p = this.currentPath_[i];
	      var c;

	      switch (p.type) {
	        case 'moveTo':
	          c = p;
	          lineStr.push(' m ', mr(p.x), ',', mr(p.y));
	          break;
	        case 'lineTo':
	          lineStr.push(' l ', mr(p.x), ',', mr(p.y));
	          break;
	        case 'close':
	          lineStr.push(' x ');
	          p = null;
	          break;
	        case 'bezierCurveTo':
	          lineStr.push(' c ',
	                       mr(p.cp1x), ',', mr(p.cp1y), ',',
	                       mr(p.cp2x), ',', mr(p.cp2y), ',',
	                       mr(p.x), ',', mr(p.y));
	          break;
	        case 'at':
	        case 'wa':
	          lineStr.push(' ', p.type, ' ',
	                       mr(p.x - this.scaleX_ * p.radius), ',',
	                       mr(p.y - this.scaleY_ * p.radius), ' ',
	                       mr(p.x + this.scaleX_ * p.radius), ',',
	                       mr(p.y + this.scaleY_ * p.radius), ' ',
	                       mr(p.xStart), ',', mr(p.yStart), ' ',
	                       mr(p.xEnd), ',', mr(p.yEnd));
	          break;
	      }


	      // TODO: Following is broken for curves due to
	      //       move to proper paths.

	      // Figure out dimensions so we can do gradient fills
	      // properly
	      if (p) {
	        if (min.x == null || p.x < min.x) {
	          min.x = p.x;
	        }
	        if (max.x == null || p.x > max.x) {
	          max.x = p.x;
	        }
	        if (min.y == null || p.y < min.y) {
	          min.y = p.y;
	        }
	        if (max.y == null || p.y > max.y) {
	          max.y = p.y;
	        }
	      }
	    }
	    lineStr.push(' ">');

	    if (!aFill) {
	      appendStroke(this, lineStr);
	    } else {
	      appendFill(this, lineStr, min, max);
	    }

	    lineStr.push('</g_vml_:shape>');

	    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));
	  };

	  function appendStroke(ctx, lineStr) {
	    var a = processStyle(ctx.strokeStyle);
	    var color = a.color;
	    var opacity = a.alpha * ctx.globalAlpha;
	    var lineWidth = ctx.lineScale_ * ctx.lineWidth;

	    // VML cannot correctly render a line if the width is less than 1px.
	    // In that case, we dilute the color to make the line look thinner.
	    if (lineWidth < 1) {
	      opacity *= lineWidth;
	    }

	    lineStr.push(
	      '<g_vml_:stroke',
	      ' opacity="', opacity, '"',
	      ' joinstyle="', ctx.lineJoin, '"',
	      ' miterlimit="', ctx.miterLimit, '"',
	      ' endcap="', processLineCap(ctx.lineCap), '"',
	      ' weight="', lineWidth, 'px"',
	      ' color="', color, '" />'
	    );
	  }

	  function appendFill(ctx, lineStr, min, max) {
	    var fillStyle = ctx.fillStyle;
	    var arcScaleX = ctx.scaleX_;
	    var arcScaleY = ctx.scaleY_;
	    var width = max.x - min.x;
	    var height = max.y - min.y;
	    if (fillStyle instanceof CanvasGradient_) {
	      // TODO: Gradients transformed with the transformation matrix.
	      var angle = 0;
	      var focus = {x: 0, y: 0};

	      // additional offset
	      var shift = 0;
	      // scale factor for offset
	      var expansion = 1;

	      if (fillStyle.type_ == 'gradient') {
	        var x0 = fillStyle.x0_ / arcScaleX;
	        var y0 = fillStyle.y0_ / arcScaleY;
	        var x1 = fillStyle.x1_ / arcScaleX;
	        var y1 = fillStyle.y1_ / arcScaleY;
	        var p0 = getCoords(ctx, x0, y0);
	        var p1 = getCoords(ctx, x1, y1);
	        var dx = p1.x - p0.x;
	        var dy = p1.y - p0.y;
	        angle = Math.atan2(dx, dy) * 180 / Math.PI;

	        // The angle should be a non-negative number.
	        if (angle < 0) {
	          angle += 360;
	        }

	        // Very small angles produce an unexpected result because they are
	        // converted to a scientific notation string.
	        if (angle < 1e-6) {
	          angle = 0;
	        }
	      } else {
	        var p0 = getCoords(ctx, fillStyle.x0_, fillStyle.y0_);
	        focus = {
	          x: (p0.x - min.x) / width,
	          y: (p0.y - min.y) / height
	        };

	        width  /= arcScaleX * Z;
	        height /= arcScaleY * Z;
	        var dimension = m.max(width, height);
	        shift = 2 * fillStyle.r0_ / dimension;
	        expansion = 2 * fillStyle.r1_ / dimension - shift;
	      }

	      // We need to sort the color stops in ascending order by offset,
	      // otherwise IE won't interpret it correctly.
	      var stops = fillStyle.colors_;
	      stops.sort(function(cs1, cs2) {
	        return cs1.offset - cs2.offset;
	      });

	      var length = stops.length;
	      var color1 = stops[0].color;
	      var color2 = stops[length - 1].color;
	      var opacity1 = stops[0].alpha * ctx.globalAlpha;
	      var opacity2 = stops[length - 1].alpha * ctx.globalAlpha;

	      var colors = [];
	      for (var i = 0; i < length; i++) {
	        var stop = stops[i];
	        colors.push(stop.offset * expansion + shift + ' ' + stop.color);
	      }

	      // When colors attribute is used, the meanings of opacity and o:opacity2
	      // are reversed.
	      lineStr.push('<g_vml_:fill type="', fillStyle.type_, '"',
	                   ' method="none" focus="100%"',
	                   ' color="', color1, '"',
	                   ' color2="', color2, '"',
	                   ' colors="', colors.join(','), '"',
	                   ' opacity="', opacity2, '"',
	                   ' g_o_:opacity2="', opacity1, '"',
	                   ' angle="', angle, '"',
	                   ' focusposition="', focus.x, ',', focus.y, '" />');
	    } else if (fillStyle instanceof CanvasPattern_) {
	      if (width && height) {
	        var deltaLeft = -min.x;
	        var deltaTop = -min.y;
	        lineStr.push('<g_vml_:fill',
	                     ' position="',
	                     deltaLeft / width * arcScaleX * arcScaleX, ',',
	                     deltaTop / height * arcScaleY * arcScaleY, '"',
	                     ' type="tile"',
	                     // TODO: Figure out the correct size to fit the scale.
	                     //' size="', w, 'px ', h, 'px"',
	                     ' src="', fillStyle.src_, '" />');
	       }
	    } else {
	      var a = processStyle(ctx.fillStyle);
	      var color = a.color;
	      var opacity = a.alpha * ctx.globalAlpha;
	      lineStr.push('<g_vml_:fill color="', color, '" opacity="', opacity,
	                   '" />');
	    }
	  }

	  contextPrototype.fill = function() {
	    this.stroke(true);
	  };

	  contextPrototype.closePath = function() {
	    this.currentPath_.push({type: 'close'});
	  };

	  function getCoords(ctx, aX, aY) {
	    var m = ctx.m_;
	    return {
	      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,
	      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2
	    };
	  };

	  contextPrototype.save = function() {
	    var o = {};
	    copyState(this, o);
	    this.aStack_.push(o);
	    this.mStack_.push(this.m_);
	    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);
	  };

	  contextPrototype.restore = function() {
	    if (this.aStack_.length) {
	      copyState(this.aStack_.pop(), this);
	      this.m_ = this.mStack_.pop();
	    }
	  };

	  function matrixIsFinite(m) {
	    return isFinite(m[0][0]) && isFinite(m[0][1]) &&
	        isFinite(m[1][0]) && isFinite(m[1][1]) &&
	        isFinite(m[2][0]) && isFinite(m[2][1]);
	  }

	  function setM(ctx, m, updateLineScale) {
	    if (!matrixIsFinite(m)) {
	      return;
	    }
	    ctx.m_ = m;

	    ctx.scaleX_ = Math.sqrt(m[0][0] * m[0][0] + m[0][1] * m[0][1]);
	    ctx.scaleY_ = Math.sqrt(m[1][0] * m[1][0] + m[1][1] * m[1][1]);

	    if (updateLineScale) {
	      // Get the line scale.
	      // Determinant of this.m_ means how much the area is enlarged by the
	      // transformation. So its square root can be used as a scale factor
	      // for width.
	      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];
	      ctx.lineScale_ = sqrt(abs(det));
	    }
	  }

	  contextPrototype.translate = function(aX, aY) {
	    var m1 = [
	      [1,  0,  0],
	      [0,  1,  0],
	      [aX, aY, 1]
	    ];

	    setM(this, matrixMultiply(m1, this.m_), false);
	  };

	  contextPrototype.rotate = function(aRot) {
	    var c = mc(aRot);
	    var s = ms(aRot);

	    var m1 = [
	      [c,  s, 0],
	      [-s, c, 0],
	      [0,  0, 1]
	    ];

	    setM(this, matrixMultiply(m1, this.m_), false);
	  };

	  contextPrototype.scale = function(aX, aY) {
	    var m1 = [
	      [aX, 0,  0],
	      [0,  aY, 0],
	      [0,  0,  1]
	    ];

	    setM(this, matrixMultiply(m1, this.m_), true);
	  };

	  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {
	    var m1 = [
	      [m11, m12, 0],
	      [m21, m22, 0],
	      [dx,  dy,  1]
	    ];

	    setM(this, matrixMultiply(m1, this.m_), true);

	  };

	  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {
	    var m = [
	      [m11, m12, 0],
	      [m21, m22, 0],
	      [dx,  dy,  1]
	    ];

	    setM(this, m, true);
	  };

	  /**
	   * The text drawing function.
	   * The maxWidth argument isn't taken in account, since no browser supports
	   * it yet.
	   */
	  contextPrototype.drawText_ = function(text, x, y, maxWidth, stroke) {
	    var m = this.m_,
	        delta = 1000,
	        left = 0,
	        right = delta,
	        offset = {x: 0, y: 0},
	        lineStr = [];

	    var fontStyle = getComputedStyle(processFontStyle(this.font),
	                                     this.element_);

	    var fontStyleString = buildStyle(fontStyle);

	    var elementStyle = this.element_.currentStyle;
	    var textAlign = this.textAlign.toLowerCase();
	    switch (textAlign) {
	      case 'left':
	      case 'center':
	      case 'right':
	        break;
	      case 'end':
	        textAlign = elementStyle.direction == 'ltr' ? 'right' : 'left';
	        break;
	      case 'start':
	        textAlign = elementStyle.direction == 'rtl' ? 'right' : 'left';
	        break;
	      default:
	        textAlign = 'left';
	    }

	    // 1.75 is an arbitrary number, as there is no info about the text baseline
	    switch (this.textBaseline) {
	      case 'hanging':
	      case 'top':
	        offset.y = fontStyle.size / 1.75;
	        break;
	      case 'middle':
	        break;
	      default:
	      case null:
	      case 'alphabetic':
	      case 'ideographic':
	      case 'bottom':
	        offset.y = -fontStyle.size / 2.25;
	        break;
	    }

	    switch(textAlign) {
	      case 'right':
	        left = delta;
	        right = 0.05;
	        break;
	      case 'center':
	        left = right = delta / 2;
	        break;
	    }

	    var d = getCoords(this, x + offset.x, y + offset.y);

	    lineStr.push('<g_vml_:line from="', -left ,' 0" to="', right ,' 0.05" ',
	                 ' coordsize="100 100" coordorigin="0 0"',
	                 ' filled="', !stroke, '" stroked="', !!stroke,
	                 '" style="position:absolute;width:1px;height:1px;">');

	    if (stroke) {
	      appendStroke(this, lineStr);
	    } else {
	      // TODO: Fix the min and max params.
	      appendFill(this, lineStr, {x: -left, y: 0},
	                 {x: right, y: fontStyle.size});
	    }

	    var skewM = m[0][0].toFixed(3) + ',' + m[1][0].toFixed(3) + ',' +
	                m[0][1].toFixed(3) + ',' + m[1][1].toFixed(3) + ',0,0';

	    var skewOffset = mr(d.x / Z) + ',' + mr(d.y / Z);

	    lineStr.push('<g_vml_:skew on="t" matrix="', skewM ,'" ',
	                 ' offset="', skewOffset, '" origin="', left ,' 0" />',
	                 '<g_vml_:path textpathok="true" />',
	                 '<g_vml_:textpath on="true" string="',
	                 encodeHtmlAttribute(text),
	                 '" style="v-text-align:', textAlign,
	                 ';font:', encodeHtmlAttribute(fontStyleString),
	                 '" /></g_vml_:line>');

	    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));
	  };

	  contextPrototype.fillText = function(text, x, y, maxWidth) {
	    this.drawText_(text, x, y, maxWidth, false);
	  };

	  contextPrototype.strokeText = function(text, x, y, maxWidth) {
	    this.drawText_(text, x, y, maxWidth, true);
	  };

	  contextPrototype.measureText = function(text) {
	    if (!this.textMeasureEl_) {
	      var s = '<span style="position:absolute;' +
	          'top:-20000px;left:0;padding:0;margin:0;border:none;' +
	          'white-space:pre;"></span>';
	      this.element_.insertAdjacentHTML('beforeEnd', s);
	      this.textMeasureEl_ = this.element_.lastChild;
	    }
	    var doc = this.element_.ownerDocument;
	    this.textMeasureEl_.innerHTML = '';
	    try {
	        this.textMeasureEl_.style.font = this.font;
	    } catch (ex) {
	        // Ignore failures to set to invalid font.
	    }
	    
	    // Don't use innerHTML or innerText because they allow markup/whitespace.
	    this.textMeasureEl_.appendChild(doc.createTextNode(text));
	    return {width: this.textMeasureEl_.offsetWidth};
	  };

	  /******** STUBS ********/
	  contextPrototype.clip = function() {
	    // TODO: Implement
	  };

	  contextPrototype.arcTo = function() {
	    // TODO: Implement
	  };

	  contextPrototype.createPattern = function(image, repetition) {
	    return new CanvasPattern_(image, repetition);
	  };

	  // Gradient / Pattern Stubs
	  function CanvasGradient_(aType) {
	    this.type_ = aType;
	    this.x0_ = 0;
	    this.y0_ = 0;
	    this.r0_ = 0;
	    this.x1_ = 0;
	    this.y1_ = 0;
	    this.r1_ = 0;
	    this.colors_ = [];
	  }

	  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {
	    aColor = processStyle(aColor);
	    this.colors_.push({offset: aOffset,
	                       color: aColor.color,
	                       alpha: aColor.alpha});
	  };

	  function CanvasPattern_(image, repetition) {
	    assertImageIsValid(image);
	    switch (repetition) {
	      case 'repeat':
	      case null:
	      case '':
	        this.repetition_ = 'repeat';
	        break
	      case 'repeat-x':
	      case 'repeat-y':
	      case 'no-repeat':
	        this.repetition_ = repetition;
	        break;
	      default:
	        throwException('SYNTAX_ERR');
	    }

	    this.src_ = image.src;
	    this.width_ = image.width;
	    this.height_ = image.height;
	  }

	  function throwException(s) {
	    throw new DOMException_(s);
	  }

	  function assertImageIsValid(img) {
	    if (!img || img.nodeType != 1 || img.tagName != 'IMG') {
	      throwException('TYPE_MISMATCH_ERR');
	    }
	    if (img.readyState != 'complete') {
	      throwException('INVALID_STATE_ERR');
	    }
	  }

	  function DOMException_(s) {
	    this.code = this[s];
	    this.message = s +': DOM Exception ' + this.code;
	  }
	  var p = DOMException_.prototype = new Error;
	  p.INDEX_SIZE_ERR = 1;
	  p.DOMSTRING_SIZE_ERR = 2;
	  p.HIERARCHY_REQUEST_ERR = 3;
	  p.WRONG_DOCUMENT_ERR = 4;
	  p.INVALID_CHARACTER_ERR = 5;
	  p.NO_DATA_ALLOWED_ERR = 6;
	  p.NO_MODIFICATION_ALLOWED_ERR = 7;
	  p.NOT_FOUND_ERR = 8;
	  p.NOT_SUPPORTED_ERR = 9;
	  p.INUSE_ATTRIBUTE_ERR = 10;
	  p.INVALID_STATE_ERR = 11;
	  p.SYNTAX_ERR = 12;
	  p.INVALID_MODIFICATION_ERR = 13;
	  p.NAMESPACE_ERR = 14;
	  p.INVALID_ACCESS_ERR = 15;
	  p.VALIDATION_ERR = 16;
	  p.TYPE_MISMATCH_ERR = 17;

	  // set up externs
	  G_vmlCanvasManager = G_vmlCanvasManager_;
	  CanvasRenderingContext2D = CanvasRenderingContext2D_;
	  CanvasGradient = CanvasGradient_;
	  CanvasPattern = CanvasPattern_;
	  DOMException = DOMException_;
	})();

	} // if
	else { // make the canvas test simple by kener.linfeng@gmail.com
	    G_vmlCanvasManager = false;
	}
	return G_vmlCanvasManager;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // define


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * zrender: 公共辅助函数
	 *
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *
	 * clone：深度克隆
	 * merge：合并源对象的属性到目标对象
	 * getContext：获取一个自由使用的canvas 2D context，使用原生方法，如isPointInPath，measureText等
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	        // 用于处理merge时无法遍历Date等对象的问题
	        var BUILTIN_OBJECT = {
	            '[object Function]': 1,
	            '[object RegExp]': 1,
	            '[object Date]': 1,
	            '[object Error]': 1,
	            '[object CanvasGradient]': 1
	        };

	        var objToString = Object.prototype.toString;

	        function isDom(obj) {
	            return obj && obj.nodeType === 1
	                   && typeof(obj.nodeName) == 'string';
	        }

	        /**
	         * 对一个object进行深度拷贝
	         *
	         * @param {Any} source 需要进行拷贝的对象
	         * @return {Any} 拷贝后的新对象
	         */
	        function clone(source) {
	            if (typeof source == 'object' && source !== null) {
	                var result = source;
	                if (source instanceof Array) {
	                    result = [];
	                    for (var i = 0, len = source.length; i < len; i++) {
	                        result[i] = clone(source[i]);
	                    }
	                }
	                else if (
	                    !BUILTIN_OBJECT[objToString.call(source)]
	                    // 是否为 dom 对象
	                    && !isDom(source)
	                ) {
	                    result = {};
	                    for (var key in source) {
	                        if (source.hasOwnProperty(key)) {
	                            result[key] = clone(source[key]);
	                        }
	                    }
	                }

	                return result;
	            }

	            return source;
	        }

	        function mergeItem(target, source, key, overwrite) {
	            if (source.hasOwnProperty(key)) {
	                var targetProp = target[key];
	                if (typeof targetProp == 'object'
	                    && !BUILTIN_OBJECT[objToString.call(targetProp)]
	                    // 是否为 dom 对象
	                    && !isDom(targetProp)
	                ) {
	                    // 如果需要递归覆盖，就递归调用merge
	                    merge(
	                        target[key],
	                        source[key],
	                        overwrite
	                    );
	                }
	                else if (overwrite || !(key in target)) {
	                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况
	                    target[key] = source[key];
	                }
	            }
	        }

	        /**
	         * 合并源对象的属性到目标对象
	         * modify from Tangram
	         * @param {*} target 目标对象
	         * @param {*} source 源对象
	         * @param {boolean} overwrite 是否覆盖
	         */
	        function merge(target, source, overwrite) {
	            for (var i in source) {
	                mergeItem(target, source, i, overwrite);
	            }
	            
	            return target;
	        }

	        var _ctx;

	        function getContext() {
	            if (!_ctx) {
	                __webpack_require__(32);
	                /* jshint ignore:start */
	                if (window['G_vmlCanvasManager']) {
	                    var _div = document.createElement('div');
	                    _div.style.position = 'absolute';
	                    _div.style.top = '-1000px';
	                    document.body.appendChild(_div);

	                    _ctx = G_vmlCanvasManager.initElement(_div)
	                               .getContext('2d');
	                }
	                else {
	                    _ctx = document.createElement('canvas').getContext('2d');
	                }
	                /* jshint ignore:end */
	            }
	            return _ctx;
	        }

	        var _canvas;
	        var _pixelCtx;
	        var _width;
	        var _height;
	        var _offsetX = 0;
	        var _offsetY = 0;

	        /**
	         * 获取像素拾取专用的上下文
	         * @return {Object} 上下文
	         */
	        function getPixelContext() {
	            if (!_pixelCtx) {
	                _canvas = document.createElement('canvas');
	                _width = _canvas.width;
	                _height = _canvas.height;
	                _pixelCtx = _canvas.getContext('2d');
	            }
	            return _pixelCtx;
	        }

	        /**
	         * 如果坐标处在_canvas外部，改变_canvas的大小
	         * @param {number} x : 横坐标
	         * @param {number} y : 纵坐标
	         * 注意 修改canvas的大小 需要重新设置translate
	         */
	        function adjustCanvasSize(x, y) {
	            // 每次加的长度
	            var _v = 100;
	            var _flag;

	            if (x + _offsetX > _width) {
	                _width = x + _offsetX + _v;
	                _canvas.width = _width;
	                _flag = true;
	            }

	            if (y + _offsetY > _height) {
	                _height = y + _offsetY + _v;
	                _canvas.height = _height;
	                _flag = true;
	            }

	            if (x < -_offsetX) {
	                _offsetX = Math.ceil(-x / _v) * _v;
	                _width += _offsetX;
	                _canvas.width = _width;
	                _flag = true;
	            }

	            if (y < -_offsetY) {
	                _offsetY = Math.ceil(-y / _v) * _v;
	                _height += _offsetY;
	                _canvas.height = _height;
	                _flag = true;
	            }

	            if (_flag) {
	                _pixelCtx.translate(_offsetX, _offsetY);
	            }
	        }

	        /**
	         * 获取像素canvas的偏移量
	         * @return {Object} 偏移量
	         */
	        function getPixelOffset() {
	            return {
	                x : _offsetX,
	                y : _offsetY
	            };
	        }

	        /**
	         * 查询数组中元素的index
	         */
	        function indexOf(array, value) {
	            if (array.indexOf) {
	                return array.indexOf(value);
	            }
	            for (var i = 0, len = array.length; i < len; i++) {
	                if (array[i] === value) {
	                    return i;
	                }
	            }
	            return -1;
	        }

	        /**
	         * 构造类继承关系
	         * 
	         * @param {Function} clazz 源类
	         * @param {Function} baseClazz 基类
	         */
	        function inherits(clazz, baseClazz) {
	            var clazzPrototype = clazz.prototype;
	            function F() {}
	            F.prototype = baseClazz.prototype;
	            clazz.prototype = new F();

	            for (var prop in clazzPrototype) {
	                clazz.prototype[prop] = clazzPrototype[prop];
	            }
	            clazz.constructor = clazz;
	        }

	        return {
	            inherits: inherits,
	            clone : clone,
	            merge : merge,
	            getContext : getContext,
	            getPixelContext : getPixelContext,
	            getPixelOffset : getPixelOffset,
	            adjustCanvasSize : adjustCanvasSize,
	            indexOf : indexOf
	        };
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        var config = __webpack_require__(49);

	        /**
	         * @exports zrender/tool/log
	         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	         */
	        return function() {
	            if (config.debugMode === 0) {
	                return;
	            }
	            else if (config.debugMode == 1) {
	                for (var k in arguments) {
	                    throw new Error(arguments[k]);
	                }
	            }
	            else if (config.debugMode > 1) {
	                for (var k in arguments) {
	                    console.log(arguments[k]);
	                }
	            }
	        };

	        /* for debug
	        return function(mes) {
	            document.getElementById('wrong-message').innerHTML =
	                mes + ' ' + (new Date() - 0)
	                + '<br/>' 
	                + document.getElementById('wrong-message').innerHTML;
	        };
	        */
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * zrender: 生成唯一id
	 *
	 * @author errorrik (errorrik@gmail.com)
	 */

	!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	        var idStart = 0x0907;

	        return function () {
	            return 'zrender__' + (idStart++);
	        };
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Handler控制模块
	 * @module zrender/Handler
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 *
	 */
	// TODO mouseover 只触发一次
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	        'use strict';

	        var config = __webpack_require__(49);
	        var env = __webpack_require__(39);
	        var eventTool = __webpack_require__(44);
	        var util = __webpack_require__(33);
	        var vec2 = __webpack_require__(50);
	        var mat2d = __webpack_require__(51);
	        var EVENT = config.EVENT;

	        var Eventful = __webpack_require__(52);

	        var domHandlerNames = [
	            'resize', 'click', 'dblclick',
	            'mousewheel', 'mousemove', 'mouseout', 'mouseup', 'mousedown',
	            'touchstart', 'touchend', 'touchmove'
	        ];

	        var domHandlers = {
	            /**
	             * 窗口大小改变响应函数
	             * @inner
	             * @param {Event} event
	             */
	            resize: function (event) {
	                event = event || window.event;
	                this._lastHover = null;
	                this._isMouseDown = 0;
	                
	                // 分发config.EVENT.RESIZE事件，global
	                this.dispatch(EVENT.RESIZE, event);
	            },

	            /**
	             * 点击响应函数
	             * @inner
	             * @param {Event} event
	             */
	            click: function (event) {
	                event = this._zrenderEventFixed(event);

	                // 分发config.EVENT.CLICK事件
	                var _lastHover = this._lastHover;
	                if ((_lastHover && _lastHover.clickable)
	                    || !_lastHover
	                ) {

	                    // 判断没有发生拖拽才触发click事件
	                    if (this._clickThreshold < 5) {
	                        this._dispatchAgency(_lastHover, EVENT.CLICK, event);
	                    }
	                }

	                this._mousemoveHandler(event);
	            },
	            
	            /**
	             * 双击响应函数
	             * @inner
	             * @param {Event} event
	             */
	            dblclick: function (event) {
	                event = event || window.event;
	                event = this._zrenderEventFixed(event);

	                // 分发config.EVENT.DBLCLICK事件
	                var _lastHover = this._lastHover;
	                if ((_lastHover && _lastHover.clickable)
	                    || !_lastHover
	                ) {

	                    // 判断没有发生拖拽才触发dblclick事件
	                    if (this._clickThreshold < 5) {
	                        this._dispatchAgency(_lastHover, EVENT.DBLCLICK, event);
	                    }
	                }

	                this._mousemoveHandler(event);
	            },
	            

	            /**
	             * 鼠标滚轮响应函数
	             * @inner
	             * @param {Event} event
	             */
	            mousewheel: function (event) {
	                event = this._zrenderEventFixed(event);

	                // http://www.sitepoint.com/html5-javascript-mouse-wheel/
	                // https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/mousewheel
	                var delta = event.wheelDelta // Webkit
	                            || -event.detail; // Firefox
	                var scale = delta > 0 ? 1.1 : 1 / 1.1;

	                var needsRefresh = false;

	                var mouseX = this._mouseX;
	                var mouseY = this._mouseY;
	                this.painter.eachBuildinLayer(function (layer) {
	                    var pos = layer.position;
	                    if (layer.zoomable) {
	                        layer.__zoom = layer.__zoom || 1;
	                        var newZoom = layer.__zoom;
	                        newZoom *= scale;
	                        newZoom = Math.max(
	                            Math.min(layer.maxZoom, newZoom),
	                            layer.minZoom
	                        );
	                        scale = newZoom / layer.__zoom;
	                        layer.__zoom = newZoom;
	                        // Keep the mouse center when scaling
	                        pos[0] -= (mouseX - pos[0]) * (scale - 1);
	                        pos[1] -= (mouseY - pos[1]) * (scale - 1);
	                        layer.scale[0] *= scale;
	                        layer.scale[1] *= scale;
	                        layer.dirty = true;
	                        needsRefresh = true;

	                        // Prevent browser default scroll action 
	                        eventTool.stop(event);
	                    }
	                });
	                if (needsRefresh) {
	                    this.painter.refresh();
	                }

	                // 分发config.EVENT.MOUSEWHEEL事件
	                this._dispatchAgency(this._lastHover, EVENT.MOUSEWHEEL, event);
	                this._mousemoveHandler(event);
	            },

	            /**
	             * 鼠标（手指）移动响应函数
	             * @inner
	             * @param {Event} event
	             */
	            mousemove: function (event) {
	                if (this.painter.isLoading()) {
	                    return;
	                }

	                event = this._zrenderEventFixed(event);
	                this._lastX = this._mouseX;
	                this._lastY = this._mouseY;
	                this._mouseX = eventTool.getX(event);
	                this._mouseY = eventTool.getY(event);
	                var dx = this._mouseX - this._lastX;
	                var dy = this._mouseY - this._lastY;

	                // 可能出现config.EVENT.DRAGSTART事件
	                // 避免手抖点击误认为拖拽
	                // if (this._mouseX - this._lastX > 1 || this._mouseY - this._lastY > 1) {
	                this._processDragStart(event);
	                // }
	                this._hasfound = 0;
	                this._event = event;

	                this._iterateAndFindHover();

	                // 找到的在迭代函数里做了处理，没找到得在迭代完后处理
	                if (!this._hasfound) {
	                    // 过滤首次拖拽产生的mouseout和dragLeave
	                    if (!this._draggingTarget
	                        || (this._lastHover && this._lastHover != this._draggingTarget)
	                    ) {
	                        // 可能出现config.EVENT.MOUSEOUT事件
	                        this._processOutShape(event);

	                        // 可能出现config.EVENT.DRAGLEAVE事件
	                        this._processDragLeave(event);
	                    }

	                    this._lastHover = null;
	                    this.storage.delHover();
	                    this.painter.clearHover();
	                }

	                // set cursor for root element
	                var cursor = 'default';

	                // 如果存在拖拽中元素，被拖拽的图形元素最后addHover
	                if (this._draggingTarget) {
	                    this.storage.drift(this._draggingTarget.id, dx, dy);
	                    this._draggingTarget.modSelf();
	                    this.storage.addHover(this._draggingTarget);

	                    // 拖拽不触发click事件
	                    this._clickThreshold++;
	                }
	                else if (this._isMouseDown) {
	                    var needsRefresh = false;
	                    // Layer dragging
	                    this.painter.eachBuildinLayer(function (layer) {
	                        if (layer.panable) {
	                            // PENDING
	                            cursor = 'move';
	                            // Keep the mouse center when scaling
	                            layer.position[0] += dx;
	                            layer.position[1] += dy;
	                            needsRefresh = true;
	                            layer.dirty = true;
	                        }
	                    });
	                    if (needsRefresh) {
	                        this.painter.refresh();
	                    }
	                }

	                if (this._draggingTarget || (this._hasfound && this._lastHover.draggable)) {
	                    cursor = 'move';
	                }
	                else if (this._hasfound && this._lastHover.clickable) {
	                    cursor = 'pointer';
	                }
	                this.root.style.cursor = cursor;

	                // 分发config.EVENT.MOUSEMOVE事件
	                this._dispatchAgency(this._lastHover, EVENT.MOUSEMOVE, event);

	                if (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) {
	                    this.painter.refreshHover();
	                }
	            },

	            /**
	             * 鼠标（手指）离开响应函数
	             * @inner
	             * @param {Event} event
	             */
	            mouseout: function (event) {
	                event = this._zrenderEventFixed(event);

	                var element = event.toElement || event.relatedTarget;
	                if (element != this.root) {
	                    while (element && element.nodeType != 9) {
	                        // 忽略包含在root中的dom引起的mouseOut
	                        if (element == this.root) {
	                            this._mousemoveHandler(event);
	                            return;
	                        }

	                        element = element.parentNode;
	                    }
	                }

	                event.zrenderX = this._lastX;
	                event.zrenderY = this._lastY;
	                this.root.style.cursor = 'default';
	                this._isMouseDown = 0;

	                this._processOutShape(event);
	                this._processDrop(event);
	                this._processDragEnd(event);
	                if (!this.painter.isLoading()) {
	                    this.painter.refreshHover();
	                }
	                
	                this.dispatch(EVENT.GLOBALOUT, event);
	            },

	            /**
	             * 鼠标（手指）按下响应函数
	             * @inner
	             * @param {Event} event
	             */
	            mousedown: function (event) {
	                // 重置 clickThreshold
	                this._clickThreshold = 0;

	                if (this._lastDownButton == 2) {
	                    this._lastDownButton = event.button;
	                    this._mouseDownTarget = null;
	                    // 仅作为关闭右键菜单使用
	                    return;
	                }

	                this._lastMouseDownMoment = new Date();
	                event = this._zrenderEventFixed(event);
	                this._isMouseDown = 1;

	                // 分发config.EVENT.MOUSEDOWN事件
	                this._mouseDownTarget = this._lastHover;
	                this._dispatchAgency(this._lastHover, EVENT.MOUSEDOWN, event);
	                this._lastDownButton = event.button;
	            },

	            /**
	             * 鼠标（手指）抬起响应函数
	             * @inner
	             * @param {Event} event
	             */
	            mouseup: function (event) {
	                event = this._zrenderEventFixed(event);
	                this.root.style.cursor = 'default';
	                this._isMouseDown = 0;
	                this._mouseDownTarget = null;

	                // 分发config.EVENT.MOUSEUP事件
	                this._dispatchAgency(this._lastHover, EVENT.MOUSEUP, event);
	                this._processDrop(event);
	                this._processDragEnd(event);
	            },

	            /**
	             * Touch开始响应函数
	             * @inner
	             * @param {Event} event
	             */
	            touchstart: function (event) {
	                // eventTool.stop(event);// 阻止浏览器默认事件，重要
	                event = this._zrenderEventFixed(event, true);
	                this._lastTouchMoment = new Date();

	                // 平板补充一次findHover
	                this._mobileFindFixed(event);
	                this._mousedownHandler(event);
	            },

	            /**
	             * Touch移动响应函数
	             * @inner
	             * @param {Event} event
	             */
	            touchmove: function (event) {
	                event = this._zrenderEventFixed(event, true);
	                this._mousemoveHandler(event);
	                if (this._isDragging) {
	                    eventTool.stop(event);// 阻止浏览器默认事件，重要
	                }
	            },

	            /**
	             * Touch结束响应函数
	             * @inner
	             * @param {Event} event
	             */
	            touchend: function (event) {
	                // eventTool.stop(event);// 阻止浏览器默认事件，重要
	                event = this._zrenderEventFixed(event, true);
	                this._mouseupHandler(event);
	                
	                var now = new Date();
	                if (now - this._lastTouchMoment < EVENT.touchClickDelay) {
	                    this._mobileFindFixed(event);
	                    this._clickHandler(event);
	                    if (now - this._lastClickMoment < EVENT.touchClickDelay / 2) {
	                        this._dblclickHandler(event);
	                        if (this._lastHover && this._lastHover.clickable) {
	                            eventTool.stop(event);// 阻止浏览器默认事件，重要
	                        }
	                    }
	                    this._lastClickMoment = now;
	                }
	                this.painter.clearHover();
	            }
	        };

	        /**
	         * bind一个参数的function
	         * 
	         * @inner
	         * @param {Function} handler 要bind的function
	         * @param {Object} context 运行时this环境
	         * @return {Function}
	         */
	        function bind1Arg(handler, context) {
	            return function (e) {
	                return handler.call(context, e);
	            };
	        }
	        /**function bind2Arg(handler, context) {
	            return function (arg1, arg2) {
	                return handler.call(context, arg1, arg2);
	            };
	        }*/

	        function bind3Arg(handler, context) {
	            return function (arg1, arg2, arg3) {
	                return handler.call(context, arg1, arg2, arg3);
	            };
	        }
	        /**
	         * 为控制类实例初始化dom 事件处理函数
	         * 
	         * @inner
	         * @param {module:zrender/Handler} instance 控制类实例
	         */
	        function initDomHandler(instance) {
	            var len = domHandlerNames.length;
	            while (len--) {
	                var name = domHandlerNames[len];
	                instance['_' + name + 'Handler'] = bind1Arg(domHandlers[name], instance);
	            }
	        }

	        /**
	         * @alias module:zrender/Handler
	         * @constructor
	         * @extends module:zrender/mixin/Eventful
	         * @param {HTMLElement} root 绘图区域
	         * @param {module:zrender/Storage} storage Storage实例
	         * @param {module:zrender/Painter} painter Painter实例
	         */
	        var Handler = function(root, storage, painter) {
	            // 添加事件分发器特性
	            Eventful.call(this);

	            this.root = root;
	            this.storage = storage;
	            this.painter = painter;

	            // 各种事件标识的私有变量
	            // this._hasfound = false;              //是否找到hover图形元素
	            // this._lastHover = null;              //最后一个hover图形元素
	            // this._mouseDownTarget = null;
	            // this._draggingTarget = null;         //当前被拖拽的图形元素
	            // this._isMouseDown = false;
	            // this._isDragging = false;
	            // this._lastMouseDownMoment;
	            // this._lastTouchMoment;
	            // this._lastDownButton;

	            this._lastX = 
	            this._lastY = 
	            this._mouseX = 
	            this._mouseY = 0;

	            this._findHover = bind3Arg(findHover, this);
	            this._domHover = painter.getDomHover();
	            initDomHandler(this);

	            // 初始化，事件绑定，支持的所有事件都由如下原生事件计算得来
	            if (window.addEventListener) {
	                window.addEventListener('resize', this._resizeHandler);
	                
	                if (env.os.tablet || env.os.phone) {
	                    // mobile支持
	                    root.addEventListener('touchstart', this._touchstartHandler);
	                    root.addEventListener('touchmove', this._touchmoveHandler);
	                    root.addEventListener('touchend', this._touchendHandler);
	                }
	                else {
	                    // mobile的click/move/up/down自己模拟
	                    root.addEventListener('click', this._clickHandler);
	                    root.addEventListener('dblclick', this._dblclickHandler);
	                    root.addEventListener('mousewheel', this._mousewheelHandler);
	                    root.addEventListener('mousemove', this._mousemoveHandler);
	                    root.addEventListener('mousedown', this._mousedownHandler);
	                    root.addEventListener('mouseup', this._mouseupHandler);
	                } 
	                root.addEventListener('DOMMouseScroll', this._mousewheelHandler);
	                root.addEventListener('mouseout', this._mouseoutHandler);
	            }
	            else {
	                window.attachEvent('onresize', this._resizeHandler);

	                root.attachEvent('onclick', this._clickHandler);
	                //root.attachEvent('ondblclick ', this._dblclickHandler);
	                root.ondblclick = this._dblclickHandler;
	                root.attachEvent('onmousewheel', this._mousewheelHandler);
	                root.attachEvent('onmousemove', this._mousemoveHandler);
	                root.attachEvent('onmouseout', this._mouseoutHandler);
	                root.attachEvent('onmousedown', this._mousedownHandler);
	                root.attachEvent('onmouseup', this._mouseupHandler);
	            }
	        };

	        /**
	         * 自定义事件绑定
	         * @param {string} eventName 事件名称，resize，hover，drag，etc~
	         * @param {Function} handler 响应函数
	         * @param {Object} [context] 响应函数
	         */
	        Handler.prototype.on = function (eventName, handler, context) {
	            this.bind(eventName, handler, context);
	            return this;
	        };

	        /**
	         * 自定义事件解绑
	         * @param {string} eventName 事件名称，resize，hover，drag，etc~
	         * @param {Function} handler 响应函数
	         */
	        Handler.prototype.un = function (eventName, handler) {
	            this.unbind(eventName, handler);
	            return this;
	        };

	        /**
	         * 事件触发
	         * @param {string} eventName 事件名称，resize，hover，drag，etc~
	         * @param {event=} eventArgs event dom事件对象
	         */
	        Handler.prototype.trigger = function (eventName, eventArgs) {
	            switch (eventName) {
	                case EVENT.RESIZE:
	                case EVENT.CLICK:
	                case EVENT.DBLCLICK:
	                case EVENT.MOUSEWHEEL:
	                case EVENT.MOUSEMOVE:
	                case EVENT.MOUSEDOWN:
	                case EVENT.MOUSEUP:
	                case EVENT.MOUSEOUT:
	                    this['_' + eventName + 'Handler'](eventArgs);
	                    break;
	            }
	        };

	        /**
	         * 释放，解绑所有事件
	         */
	        Handler.prototype.dispose = function () {
	            var root = this.root;

	            if (window.removeEventListener) {
	                window.removeEventListener('resize', this._resizeHandler);

	                if (env.os.tablet || env.os.phone) {
	                    // mobile支持
	                    root.removeEventListener('touchstart', this._touchstartHandler);
	                    root.removeEventListener('touchmove', this._touchmoveHandler);
	                    root.removeEventListener('touchend', this._touchendHandler);
	                }
	                else {
	                    // mobile的click自己模拟
	                    root.removeEventListener('click', this._clickHandler);
	                    root.removeEventListener('dblclick', this._dblclickHandler);
	                    root.removeEventListener('mousewheel', this._mousewheelHandler);
	                    root.removeEventListener('mousemove', this._mousemoveHandler);
	                    root.removeEventListener('mousedown', this._mousedownHandler);
	                    root.removeEventListener('mouseup', this._mouseupHandler);
	                }
	                root.removeEventListener('DOMMouseScroll', this._mousewheelHandler);
	                root.removeEventListener('mouseout', this._mouseoutHandler);
	            }
	            else {
	                window.detachEvent('onresize', this._resizeHandler);

	                root.detachEvent('onclick', this._clickHandler);
	                root.detachEvent('dblclick', this._dblclickHandler);
	                root.detachEvent('onmousewheel', this._mousewheelHandler);
	                root.detachEvent('onmousemove', this._mousemoveHandler);
	                root.detachEvent('onmouseout', this._mouseoutHandler);
	                root.detachEvent('onmousedown', this._mousedownHandler);
	                root.detachEvent('onmouseup', this._mouseupHandler);
	            }

	            this.root =
	            this._domHover =
	            this.storage =
	            this.painter = null;
	            
	            this.un();
	        };

	        /**
	         * 拖拽开始
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDragStart = function (event) {
	            var _lastHover = this._lastHover;

	            if (this._isMouseDown
	                && _lastHover
	                && _lastHover.draggable
	                && !this._draggingTarget
	                && this._mouseDownTarget == _lastHover
	            ) {
	                // 拖拽点击生效时长阀门，某些场景需要降低拖拽敏感度
	                if (_lastHover.dragEnableTime && 
	                    new Date() - this._lastMouseDownMoment < _lastHover.dragEnableTime
	                ) {
	                    return;
	                }

	                var _draggingTarget = _lastHover;
	                this._draggingTarget = _draggingTarget;
	                this._isDragging = 1;

	                _draggingTarget.invisible = true;
	                this.storage.mod(_draggingTarget.id);

	                // 分发config.EVENT.DRAGSTART事件
	                this._dispatchAgency(
	                    _draggingTarget,
	                    EVENT.DRAGSTART,
	                    event
	                );
	                this.painter.refresh();
	            }
	        };

	        /**
	         * 拖拽进入目标元素
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDragEnter = function (event) {
	            if (this._draggingTarget) {
	                // 分发config.EVENT.DRAGENTER事件
	                this._dispatchAgency(
	                    this._lastHover,
	                    EVENT.DRAGENTER,
	                    event,
	                    this._draggingTarget
	                );
	            }
	        };

	        /**
	         * 拖拽在目标元素上移动
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDragOver = function (event) {
	            if (this._draggingTarget) {
	                // 分发config.EVENT.DRAGOVER事件
	                this._dispatchAgency(
	                    this._lastHover,
	                    EVENT.DRAGOVER,
	                    event,
	                    this._draggingTarget
	                );
	            }
	        };

	        /**
	         * 拖拽离开目标元素
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDragLeave = function (event) {
	            if (this._draggingTarget) {
	                // 分发config.EVENT.DRAGLEAVE事件
	                this._dispatchAgency(
	                    this._lastHover,
	                    EVENT.DRAGLEAVE,
	                    event,
	                    this._draggingTarget
	                );
	            }
	        };

	        /**
	         * 拖拽在目标元素上完成
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDrop = function (event) {
	            if (this._draggingTarget) {
	                this._draggingTarget.invisible = false;
	                this.storage.mod(this._draggingTarget.id);
	                this.painter.refresh();

	                // 分发config.EVENT.DROP事件
	                this._dispatchAgency(
	                    this._lastHover,
	                    EVENT.DROP,
	                    event,
	                    this._draggingTarget
	                );
	            }
	        };

	        /**
	         * 拖拽结束
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processDragEnd = function (event) {
	            if (this._draggingTarget) {
	                // 分发config.EVENT.DRAGEND事件
	                this._dispatchAgency(
	                    this._draggingTarget,
	                    EVENT.DRAGEND,
	                    event
	                );

	                this._lastHover = null;
	            }

	            this._isDragging = 0;
	            this._draggingTarget = null;
	        };

	        /**
	         * 鼠标在某个图形元素上移动
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processOverShape = function (event) {
	            // 分发config.EVENT.MOUSEOVER事件
	            this._dispatchAgency(this._lastHover, EVENT.MOUSEOVER, event);
	        };

	        /**
	         * 鼠标离开某个图形元素
	         * 
	         * @private
	         * @param {Object} event 事件对象
	         */
	        Handler.prototype._processOutShape = function (event) {
	            // 分发config.EVENT.MOUSEOUT事件
	            this._dispatchAgency(this._lastHover, EVENT.MOUSEOUT, event);
	        };

	        /**
	         * 事件分发代理
	         * 
	         * @private
	         * @param {Object} targetShape 目标图形元素
	         * @param {string} eventName 事件名称
	         * @param {Object} event 事件对象
	         * @param {Object=} draggedShape 拖拽事件特有，当前被拖拽图形元素
	         */
	        Handler.prototype._dispatchAgency = function (targetShape, eventName, event, draggedShape) {
	            var eventHandler = 'on' + eventName;
	            var eventPacket = {
	                type : eventName,
	                event : event,
	                target : targetShape,
	                cancelBubble: false
	            };

	            var el = targetShape;

	            if (draggedShape) {
	                eventPacket.dragged = draggedShape;
	            }

	            while (el) {
	                el[eventHandler] 
	                && (eventPacket.cancelBubble = el[eventHandler](eventPacket));
	                el.dispatch(eventName, eventPacket);

	                el = el.parent;
	                
	                if (eventPacket.cancelBubble) {
	                    break;
	                }
	            }

	            if (targetShape) {
	                // 冒泡到顶级 zrender 对象
	                if (!eventPacket.cancelBubble) {
	                    this.dispatch(eventName, eventPacket);
	                }
	            }
	            else if (!draggedShape) {
	                // 无hover目标，无拖拽对象，原生事件分发
	                var eveObj = {
	                    type: eventName,
	                    event: event
	                };
	                this.dispatch(eventName, eveObj);
	                // 分发事件到用户自定义层
	                this.painter.eachOtherLayer(function (layer) {
	                    if (typeof(layer[eventHandler]) == 'function') {
	                        layer[eventHandler](eveObj);
	                    }
	                    if (layer.dispatch) {
	                        layer.dispatch(eventName, eveObj);
	                    }
	                });
	            }
	        };

	        /**
	         * 迭代寻找hover shape
	         * @private
	         * @method
	         */
	        Handler.prototype._iterateAndFindHover = (function() {
	            var invTransform = mat2d.create();
	            return function() {
	                var list = this.storage.getShapeList();
	                var currentZLevel;
	                var currentLayer;
	                var tmp = [ 0, 0 ];
	                for (var i = list.length - 1; i >= 0 ; i--) {
	                    var shape = list[i];

	                    if (currentZLevel !== shape.zlevel) {
	                        currentLayer = this.painter.getLayer(shape.zlevel, currentLayer);
	                        tmp[0] = this._mouseX;
	                        tmp[1] = this._mouseY;

	                        if (currentLayer.needTransform) {
	                            mat2d.invert(invTransform, currentLayer.transform);
	                            vec2.applyTransform(tmp, tmp, invTransform);
	                        }
	                    }

	                    if (this._findHover(shape, tmp[0], tmp[1])) {
	                        break;
	                    }
	                }
	            };
	        })();
	        
	        // touch指尖错觉的尝试偏移量配置
	        var MOBILE_TOUCH_OFFSETS = [
	            { x: 10 },
	            { x: -20 },
	            { x: 10, y: 10 },
	            { y: -20 }
	        ];

	        // touch有指尖错觉，四向尝试，让touch上的点击更好触发事件
	        Handler.prototype._mobileFindFixed = function (event) {
	            this._lastHover = null;
	            this._mouseX = event.zrenderX;
	            this._mouseY = event.zrenderY;

	            this._event = event;

	            this._iterateAndFindHover();
	            for (var i = 0; !this._lastHover && i < MOBILE_TOUCH_OFFSETS.length ; i++) {
	                var offset = MOBILE_TOUCH_OFFSETS[ i ];
	                offset.x && (this._mouseX += offset.x);
	                offset.y && (this._mouseY += offset.y);

	                this._iterateAndFindHover();
	            }

	            if (this._lastHover) {
	                event.zrenderX = this._mouseX;
	                event.zrenderY = this._mouseY;
	            }
	        };

	        /**
	         * 迭代函数，查找hover到的图形元素并即时做些事件分发
	         * 
	         * @inner
	         * @param {Object} shape 图形元素
	         * @param {number} x
	         * @param {number} y
	         */
	        function findHover(shape, x, y) {
	            if (
	                (this._draggingTarget && this._draggingTarget.id == shape.id) // 迭代到当前拖拽的图形上
	                || shape.isSilent() // 打酱油的路过，啥都不响应的shape~
	            ) {
	                return false;
	            }

	            var event = this._event;
	            if (shape.isCover(x, y)) {
	                if (shape.hoverable) {
	                    this.storage.addHover(shape);
	                }
	                // 查找是否在 clipShape 中
	                var p = shape.parent;
	                while (p) {
	                    if (p.clipShape && !p.clipShape.isCover(this._mouseX, this._mouseY))  {
	                        // 已经被祖先 clip 掉了
	                        return false;
	                    }
	                    p = p.parent;
	                }

	                if (this._lastHover != shape) {
	                    this._processOutShape(event);

	                    // 可能出现config.EVENT.DRAGLEAVE事件
	                    this._processDragLeave(event);

	                    this._lastHover = shape;

	                    // 可能出现config.EVENT.DRAGENTER事件
	                    this._processDragEnter(event);
	                }

	                this._processOverShape(event);

	                // 可能出现config.EVENT.DRAGOVER
	                this._processDragOver(event);

	                this._hasfound = 1;

	                return true;    // 找到则中断迭代查找
	            }

	            return false;
	        }

	        /**
	         * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标
	         * 
	         * @private
	         */
	        Handler.prototype._zrenderEventFixed = function (event, isTouch) {
	            if (event.zrenderFixed) {
	                return event;
	            }

	            if (!isTouch) {
	                event = event || window.event;
	                // 进入对象优先~
	                var target = event.toElement
	                              || event.relatedTarget
	                              || event.srcElement
	                              || event.target;

	                if (target && target != this._domHover) {
	                    event.zrenderX = (typeof event.offsetX != 'undefined'
	                                        ? event.offsetX
	                                        : event.layerX)
	                                      + target.offsetLeft;
	                    event.zrenderY = (typeof event.offsetY != 'undefined'
	                                        ? event.offsetY
	                                        : event.layerY)
	                                      + target.offsetTop;
	                }
	            }
	            else {
	                var touch = event.type != 'touchend'
	                                ? event.targetTouches[0]
	                                : event.changedTouches[0];
	                if (touch) {
	                    var rBounding = this.painter._domRoot.getBoundingClientRect();
	                    // touch事件坐标是全屏的~
	                    event.zrenderX = touch.clientX - rBounding.left;
	                    event.zrenderY = touch.clientY - rBounding.top;
	                }
	            }

	            event.zrenderFixed = 1;
	            return event;
	        };

	        util.merge(Handler.prototype, Eventful.prototype, true);

	        return Handler;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Painter绘图模块
	 * @module zrender/Painter
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 *         pissang (https://www.github.com/pissang)
	 */
	 !(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        'use strict';

	        var config = __webpack_require__(49);
	        var util = __webpack_require__(33);
	        // var vec2 = require('./tool/vector');
	        var log = __webpack_require__(34);
	        // var matrix = require('./tool/matrix');
	        var BaseLoadingEffect = __webpack_require__(53);

	        var Layer = __webpack_require__(54);

	        // 返回false的方法，用于避免页面被选中
	        function returnFalse() {
	            return false;
	        }

	        // 什么都不干的空方法
	        function doNothing() {}

	        function isLayerValid(layer) {
	            if (!layer) {
	                return false;
	            }
	            
	            if (layer.isBuildin) {
	                return true;
	            }

	            if (typeof(layer.resize) !== 'function'
	                || typeof(layer.refresh) !== 'function'
	            ) {
	                return false;
	            }

	            return true;
	        }

	        /**
	         * @alias module:zrender/Painter
	         * @constructor
	         * @param {HTMLElement} root 绘图容器
	         * @param {module:zrender/Storage} storage
	         */
	        var Painter = function (root, storage) {
	            /**
	             * 绘图容器
	             * @type {HTMLElement}
	             */
	            this.root = root;
	            root.style['-webkit-tap-highlight-color'] = 'transparent';
	            root.style['-webkit-user-select'] = 'none';
	            root.style['user-select'] = 'none';
	            root.style['-webkit-touch-callout'] = 'none';

	            /**
	             * @type {module:zrender/Storage}
	             */
	            this.storage = storage;

	            root.innerHTML = '';
	            this._width = this._getWidth(); // 宽，缓存记录
	            this._height = this._getHeight(); // 高，缓存记录

	            var domRoot = document.createElement('div');
	            this._domRoot = domRoot;

	            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬
	            domRoot.style.position = 'relative';
	            domRoot.style.overflow = 'hidden';
	            domRoot.style.width = this._width + 'px';
	            domRoot.style.height = this._height + 'px';
	            root.appendChild(domRoot);

	            this._layers = {};

	            this._zlevelList = [];

	            this._layerConfig = {};

	            this._loadingEffect = new BaseLoadingEffect({});
	            this.shapeToImage = this._createShapeToImageProcessor();

	            // 创建各层canvas
	            // 背景
	            this._bgDom = document.createElement('div');
	            this._bgDom.style.cssText = [
	                'position:absolute;left:0px;top:0px;width:',
	                this._width, 'px;height:', this._height + 'px;', 
	                '-webkit-user-select:none;user-select;none;',
	                '-webkit-touch-callout:none;'
	            ].join('');
	            this._bgDom.setAttribute('data-zr-dom-id', 'bg');

	            domRoot.appendChild(this._bgDom);
	            this._bgDom.onselectstart = returnFalse;

	            // 高亮
	            var hoverLayer = new Layer('_zrender_hover_', this);
	            this._layers['hover'] = hoverLayer;
	            domRoot.appendChild(hoverLayer.dom);
	            hoverLayer.initContext();

	            hoverLayer.dom.onselectstart = returnFalse;
	            hoverLayer.dom.style['-webkit-user-select'] = 'none';
	            hoverLayer.dom.style['user-select'] = 'none';
	            hoverLayer.dom.style['-webkit-touch-callout'] = 'none';

	            // Will be injected by zrender instance
	            this.refreshNextFrame = null;
	        };

	        /**
	         * 首次绘图，创建各种dom和context
	         * 
	         * @param {Function} callback 绘画结束后的回调函数
	         */
	        Painter.prototype.render = function (callback) {
	            if (this.isLoading()) {
	                this.hideLoading();
	            }
	            // TODO
	            this.refresh(callback, true);

	            return this;
	        };

	        /**
	         * 刷新
	         * @param {Function} callback 刷新结束后的回调函数
	         * @param {boolean} paintAll 强制绘制所有shape
	         */
	        Painter.prototype.refresh = function (callback, paintAll) {
	            var list = this.storage.getShapeList(true);
	            this._paintList(list, paintAll);

	            // Paint custum layers
	            for (var i = 0; i < this._zlevelList.length; i++) {
	                var z = this._zlevelList[i];
	                var layer = this._layers[z];
	                if (! layer.isBuildin && layer.refresh) {
	                    layer.refresh();
	                }
	            }

	            if (typeof callback == 'function') {
	                callback();
	            }

	            return this;
	        };

	        Painter.prototype._preProcessLayer = function (layer) {
	            layer.unusedCount++;
	            layer.updateTransform();
	        };

	        Painter.prototype._postProcessLayer = function (layer) {
	            layer.dirty = false;
	            // 删除过期的层
	            // PENDING
	            // if (layer.unusedCount >= 500) {
	            //     this.delLayer(z);
	            // }
	            if (layer.unusedCount == 1) {
	                layer.clear();
	            }
	        };
	 
	        Painter.prototype._paintList = function (list, paintAll) {

	            if (typeof(paintAll) == 'undefined') {
	                paintAll = false;
	            }

	            this._updateLayerStatus(list);

	            var currentLayer;
	            var currentZLevel;
	            var ctx;

	            this.eachBuildinLayer(this._preProcessLayer);

	            // var invTransform = [];

	            for (var i = 0, l = list.length; i < l; i++) {
	                var shape = list[i];

	                // Change draw layer
	                if (currentZLevel !== shape.zlevel) {
	                    if (currentLayer) {
	                        if (currentLayer.needTransform) {
	                            ctx.restore();
	                        }
	                        ctx.flush && ctx.flush();
	                    }

	                    currentZLevel = shape.zlevel;
	                    currentLayer = this.getLayer(currentZLevel);

	                    if (!currentLayer.isBuildin) {
	                        log(
	                            'ZLevel ' + currentZLevel
	                            + ' has been used by unkown layer ' + currentLayer.id
	                        );
	                    }

	                    ctx = currentLayer.ctx;

	                    // Reset the count
	                    currentLayer.unusedCount = 0;

	                    if (currentLayer.dirty || paintAll) {
	                        currentLayer.clear();
	                    }

	                    if (currentLayer.needTransform) {
	                        ctx.save();
	                        currentLayer.setTransform(ctx);
	                    }
	                }

	                if ((currentLayer.dirty || paintAll) && !shape.invisible) {
	                    if (
	                        !shape.onbrush
	                        || (shape.onbrush && !shape.onbrush(ctx, false))
	                    ) {
	                        if (config.catchBrushException) {
	                            try {
	                                shape.brush(ctx, false, this.refreshNextFrame);
	                            }
	                            catch (error) {
	                                log(
	                                    error,
	                                    'brush error of ' + shape.type,
	                                    shape
	                                );
	                            }
	                        }
	                        else {
	                            shape.brush(ctx, false, this.refreshNextFrame);
	                        }
	                    }
	                }

	                shape.__dirty = false;
	            }

	            if (currentLayer) {
	                if (currentLayer.needTransform) {
	                    ctx.restore();
	                }
	                ctx.flush && ctx.flush();
	            }

	            this.eachBuildinLayer(this._postProcessLayer);
	        };

	        /**
	         * 获取 zlevel 所在层，如果不存在则会创建一个新的层
	         * @param {number} zlevel
	         * @return {module:zrender/Layer}
	         */
	        Painter.prototype.getLayer = function (zlevel) {
	            var layer = this._layers[zlevel];
	            if (!layer) {
	                // Create a new layer
	                layer = new Layer(zlevel, this);
	                layer.isBuildin = true;

	                if (this._layerConfig[zlevel]) {
	                    util.merge(layer, this._layerConfig[zlevel], true);
	                }

	                layer.updateTransform();

	                this.insertLayer(zlevel, layer);

	                // Context is created after dom inserted to document
	                // Or excanvas will get 0px clientWidth and clientHeight
	                layer.initContext();
	            }

	            return layer;
	        };

	        Painter.prototype.insertLayer = function (zlevel, layer) {
	            if (this._layers[zlevel]) {
	                log('ZLevel ' + zlevel + ' has been used already');
	                return;
	            }
	            // Check if is a valid layer
	            if (!isLayerValid(layer)) {
	                log('Layer of zlevel ' + zlevel + ' is not valid');
	                return;
	            }

	            var len = this._zlevelList.length;
	            var prevLayer = null;
	            var i = -1;
	            if (len > 0 && zlevel > this._zlevelList[0]) {
	                for (i = 0; i < len - 1; i++) {
	                    if (
	                        this._zlevelList[i] < zlevel
	                        && this._zlevelList[i + 1] > zlevel
	                    ) {
	                        break;
	                    }
	                }
	                prevLayer = this._layers[this._zlevelList[i]];
	            }
	            this._zlevelList.splice(i + 1, 0, zlevel);

	            var prevDom = prevLayer ? prevLayer.dom : this._bgDom;
	            if (prevDom.nextSibling) {
	                prevDom.parentNode.insertBefore(
	                    layer.dom,
	                    prevDom.nextSibling
	                );
	            }
	            else {
	                prevDom.parentNode.appendChild(layer.dom);
	            }

	            this._layers[zlevel] = layer;
	        };

	        // Iterate each layer
	        Painter.prototype.eachLayer = function (cb, context) {
	            for (var i = 0; i < this._zlevelList.length; i++) {
	                var z = this._zlevelList[i];
	                cb.call(context, this._layers[z], z);
	            }
	        };

	        // Iterate each buildin layer
	        Painter.prototype.eachBuildinLayer = function (cb, context) {
	            for (var i = 0; i < this._zlevelList.length; i++) {
	                var z = this._zlevelList[i];
	                var layer = this._layers[z];
	                if (layer.isBuildin) {
	                    cb.call(context, layer, z);
	                }
	            }
	        };

	        // Iterate each other layer except buildin layer
	        Painter.prototype.eachOtherLayer = function (cb, context) {
	            for (var i = 0; i < this._zlevelList.length; i++) {
	                var z = this._zlevelList[i];
	                var layer = this._layers[z];
	                if (! layer.isBuildin) {
	                    cb.call(context, layer, z);
	                }
	            }
	        };

	        /**
	         * 获取所有已创建的层
	         * @param {Array.<module:zrender/Layer>} [prevLayer]
	         */
	        Painter.prototype.getLayers = function () {
	            return this._layers;
	        };

	        Painter.prototype._updateLayerStatus = function (list) {
	            
	            var layers = this._layers;

	            var elCounts = {};

	            this.eachBuildinLayer(function (layer, z) {
	                elCounts[z] = layer.elCount;
	                layer.elCount = 0;
	            });

	            for (var i = 0, l = list.length; i < l; i++) {
	                var shape = list[i];
	                var zlevel = shape.zlevel;
	                var layer = layers[zlevel];
	                if (layer) {
	                    layer.elCount++;
	                    // 已经被标记为需要刷新
	                    if (layer.dirty) {
	                        continue;
	                    }
	                    layer.dirty = shape.__dirty;
	                }
	            }

	            // 层中的元素数量有发生变化
	            this.eachBuildinLayer(function (layer, z) {
	                if (elCounts[z] !== layer.elCount) {
	                    layer.dirty = true;
	                }
	            });
	        };

	        /**
	         * 指定的图形列表
	         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形元素列表
	         * @param {Function} [callback] 视图更新后回调函数
	         */
	        Painter.prototype.refreshShapes = function (shapeList, callback) {
	            for (var i = 0, l = shapeList.length; i < l; i++) {
	                var shape = shapeList[i];
	                shape.modSelf();
	            }

	            this.refresh(callback);
	            return this;
	        };

	        /**
	         * 设置loading特效
	         * 
	         * @param {Object} loadingEffect loading特效
	         * @return {Painter}
	         */
	        Painter.prototype.setLoadingEffect = function (loadingEffect) {
	            this._loadingEffect = loadingEffect;
	            return this;
	        };

	        /**
	         * 清除hover层外所有内容
	         */
	        Painter.prototype.clear = function () {
	            this.eachBuildinLayer(this._clearLayer);
	            return this;
	        };

	        Painter.prototype._clearLayer = function (layer) {
	            layer.clear();
	        };

	        /**
	         * 修改指定zlevel的绘制参数
	         * 
	         * @param {string} zlevel
	         * @param {Object} config 配置对象
	         * @param {string} [config.clearColor=0] 每次清空画布的颜色
	         * @param {string} [config.motionBlur=false] 是否开启动态模糊
	         * @param {number} [config.lastFrameAlpha=0.7]
	         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
	         * @param {Array.<number>} [position] 层的平移
	         * @param {Array.<number>} [rotation] 层的旋转
	         * @param {Array.<number>} [scale] 层的缩放
	         * @param {boolean} [zoomable=false] 层是否支持鼠标缩放操作
	         * @param {boolean} [panable=false] 层是否支持鼠标平移操作
	         */
	        Painter.prototype.modLayer = function (zlevel, config) {
	            if (config) {
	                if (!this._layerConfig[zlevel]) {
	                    this._layerConfig[zlevel] = config;
	                }
	                else {
	                    util.merge(this._layerConfig[zlevel], config, true);
	                }

	                var layer = this._layers[zlevel];

	                if (layer) {
	                    util.merge(layer, this._layerConfig[zlevel], true);
	                }
	            }
	        };

	        /**
	         * 删除指定层
	         * @param {number} zlevel 层所在的zlevel
	         */
	        Painter.prototype.delLayer = function (zlevel) {
	            var layer = this._layers[zlevel];
	            if (!layer) {
	                return;
	            }
	            // Save config
	            this.modLayer(zlevel, {
	                position: layer.position,
	                rotation: layer.rotation,
	                scale: layer.scale
	            });
	            layer.dom.parentNode.removeChild(layer.dom);
	            delete this._layers[zlevel];

	            this._zlevelList.splice(util.indexOf(this._zlevelList, zlevel), 1);
	        };

	        /**
	         * 刷新hover层
	         */
	        Painter.prototype.refreshHover = function () {
	            this.clearHover();
	            var list = this.storage.getHoverShapes(true);
	            for (var i = 0, l = list.length; i < l; i++) {
	                this._brushHover(list[i]);
	            }
	            var ctx = this._layers.hover.ctx;
	            ctx.flush && ctx.flush();

	            this.storage.delHover();

	            return this;
	        };

	        /**
	         * 清除hover层所有内容
	         */
	        Painter.prototype.clearHover = function () {
	            var hover = this._layers.hover;
	            hover && hover.clear();

	            return this;
	        };

	        /**
	         * 显示loading
	         * 
	         * @param {Object=} loadingEffect loading效果对象
	         */
	        Painter.prototype.showLoading = function (loadingEffect) {
	            this._loadingEffect && this._loadingEffect.stop();
	            loadingEffect && this.setLoadingEffect(loadingEffect);
	            this._loadingEffect.start(this);
	            this.loading = true;

	            return this;
	        };

	        /**
	         * loading结束
	         */
	        Painter.prototype.hideLoading = function () {
	            this._loadingEffect.stop();

	            this.clearHover();
	            this.loading = false;
	            return this;
	        };

	        /**
	         * loading结束判断
	         */
	        Painter.prototype.isLoading = function () {
	            return this.loading;
	        };

	        /**
	         * 区域大小变化后重绘
	         */
	        Painter.prototype.resize = function () {
	            var domRoot = this._domRoot;
	            domRoot.style.display = 'none';

	            var width = this._getWidth();
	            var height = this._getHeight();

	            domRoot.style.display = '';

	            // 优化没有实际改变的resize
	            if (this._width != width || height != this._height) {
	                this._width = width;
	                this._height = height;

	                domRoot.style.width = width + 'px';
	                domRoot.style.height = height + 'px';

	                for (var id in this._layers) {

	                    this._layers[id].resize(width, height);
	                }

	                this.refresh(null, true);
	            }

	            return this;
	        };

	        /**
	         * 清除单独的一个层
	         * @param {number} zLevel
	         */
	        Painter.prototype.clearLayer = function (zLevel) {
	            var layer = this._layers[zLevel];
	            if (layer) {
	                layer.clear();
	            }
	        };

	        /**
	         * 释放
	         */
	        Painter.prototype.dispose = function () {
	            if (this.isLoading()) {
	                this.hideLoading();
	            }

	            this.root.innerHTML = '';

	            this.root =
	            this.storage =

	            this._domRoot = 
	            this._layers = null;
	        };

	        Painter.prototype.getDomHover = function () {
	            return this._layers.hover.dom;
	        };

	        /**
	         * 图像导出
	         * @param {string} type
	         * @param {string} [backgroundColor='#fff'] 背景色
	         * @return {string} 图片的Base64 url
	         */
	        Painter.prototype.toDataURL = function (type, backgroundColor, args) {
	            if (window['G_vmlCanvasManager']) {
	                return null;
	            }

	            var imageLayer = new Layer('image', this);
	            this._bgDom.appendChild(imageLayer.dom);
	            imageLayer.initContext();
	            
	            var ctx = imageLayer.ctx;
	            imageLayer.clearColor = backgroundColor || '#fff';
	            imageLayer.clear();
	            
	            var self = this;
	            // 升序遍历，shape上的zlevel指定绘画图层的z轴层叠

	            this.storage.iterShape(
	                function (shape) {
	                    if (!shape.invisible) {
	                        if (!shape.onbrush // 没有onbrush
	                            // 有onbrush并且调用执行返回false或undefined则继续粉刷
	                            || (shape.onbrush && !shape.onbrush(ctx, false))
	                        ) {
	                            if (config.catchBrushException) {
	                                try {
	                                    shape.brush(ctx, false, self.refreshNextFrame);
	                                }
	                                catch (error) {
	                                    log(
	                                        error,
	                                        'brush error of ' + shape.type,
	                                        shape
	                                    );
	                                }
	                            }
	                            else {
	                                shape.brush(ctx, false, self.refreshNextFrame);
	                            }
	                        }
	                    }
	                },
	                { normal: 'up', update: true }
	            );
	            var image = imageLayer.dom.toDataURL(type, args); 
	            ctx = null;
	            this._bgDom.removeChild(imageLayer.dom);
	            return image;
	        };

	        /**
	         * 获取绘图区域宽度
	         */
	        Painter.prototype.getWidth = function () {
	            return this._width;
	        };

	        /**
	         * 获取绘图区域高度
	         */
	        Painter.prototype.getHeight = function () {
	            return this._height;
	        };

	        Painter.prototype._getWidth = function () {
	            var root = this.root;
	            var stl = root.currentStyle
	                      || document.defaultView.getComputedStyle(root);

	            return ((root.clientWidth || parseInt(stl.width, 10))
	                    - parseInt(stl.paddingLeft, 10) // 请原谅我这比较粗暴
	                    - parseInt(stl.paddingRight, 10)).toFixed(0) - 0;
	        };

	        Painter.prototype._getHeight = function () {
	            var root = this.root;
	            var stl = root.currentStyle
	                      || document.defaultView.getComputedStyle(root);

	            return ((root.clientHeight || parseInt(stl.height, 10))
	                    - parseInt(stl.paddingTop, 10) // 请原谅我这比较粗暴
	                    - parseInt(stl.paddingBottom, 10)).toFixed(0) - 0;
	        };

	        Painter.prototype._brushHover = function (shape) {
	            var ctx = this._layers.hover.ctx;

	            if (!shape.onbrush // 没有onbrush
	                // 有onbrush并且调用执行返回false或undefined则继续粉刷
	                || (shape.onbrush && !shape.onbrush(ctx, true))
	            ) {
	                var layer = this.getLayer(shape.zlevel);
	                if (layer.needTransform) {
	                    ctx.save();
	                    layer.setTransform(ctx);
	                }
	                // Retina 优化
	                if (config.catchBrushException) {
	                    try {
	                        shape.brush(ctx, true, this.refreshNextFrame);
	                    }
	                    catch (error) {
	                        log(
	                            error, 'hoverBrush error of ' + shape.type, shape
	                        );
	                    }
	                }
	                else {
	                    shape.brush(ctx, true, this.refreshNextFrame);
	                }
	                if (layer.needTransform) {
	                    ctx.restore();
	                }
	            }
	        };

	        Painter.prototype._shapeToImage = function (
	            id, shape, width, height, devicePixelRatio
	        ) {
	            var canvas = document.createElement('canvas');
	            var ctx = canvas.getContext('2d');
	            
	            canvas.style.width = width + 'px';
	            canvas.style.height = height + 'px';
	            canvas.setAttribute('width', width * devicePixelRatio);
	            canvas.setAttribute('height', height * devicePixelRatio);

	            ctx.clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);

	            var shapeTransform = {
	                position : shape.position,
	                rotation : shape.rotation,
	                scale : shape.scale
	            };
	            shape.position = [ 0, 0, 0 ];
	            shape.rotation = 0;
	            shape.scale = [ 1, 1 ];
	            if (shape) {
	                shape.brush(ctx, false);
	            }

	            var ImageShape = __webpack_require__(55);
	            var imgShape = new ImageShape({
	                id : id,
	                style : {
	                    x : 0,
	                    y : 0,
	                    image : canvas
	                }
	            });

	            if (shapeTransform.position != null) {
	                imgShape.position = shape.position = shapeTransform.position;
	            }

	            if (shapeTransform.rotation != null) {
	                imgShape.rotation = shape.rotation = shapeTransform.rotation;
	            }

	            if (shapeTransform.scale != null) {
	                imgShape.scale = shape.scale = shapeTransform.scale;
	            }

	            return imgShape;
	        };

	        Painter.prototype._createShapeToImageProcessor = function () {
	            if (window['G_vmlCanvasManager']) {
	                return doNothing;
	            }

	            var me = this;

	            return function (id, e, width, height) {
	                return me._shapeToImage(
	                    id, e, width, height, config.devicePixelRatio
	                );
	            };
	        };

	        return Painter;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Storage内容仓库模块
	 * @module zrender/Storage
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 * @author errorrik (errorrik@gmail.com)
	 * @author pissang (https://github.com/pissang/)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	        'use strict';

	        var util = __webpack_require__(33);

	        var Group = __webpack_require__(56);

	        var defaultIterateOption = {
	            hover: false,
	            normal: 'down',
	            update: false
	        };

	        function shapeCompareFunc(a, b) {
	            if (a.zlevel == b.zlevel) {
	                if (a.z == b.z) {
	                    return a.__renderidx - b.__renderidx;
	                }
	                return a.z - b.z;
	            }
	            return a.zlevel - b.zlevel;
	        }
	        /**
	         * 内容仓库 (M)
	         * @alias module:zrender/Storage
	         * @constructor
	         */
	        var Storage = function () {
	            // 所有常规形状，id索引的map
	            this._elements = {};

	            // 高亮层形状，不稳定，动态增删，数组位置也是z轴方向，靠前显示在下方
	            this._hoverElements = [];

	            this._roots = [];

	            this._shapeList = [];

	            this._shapeListOffset = 0;
	        };

	        /**
	         * 遍历迭代器
	         * 
	         * @param {Function} fun 迭代回调函数，return true终止迭代
	         * @param {Object} [option] 迭代参数，缺省为仅降序遍历普通层图形
	         * @param {boolean} [option.hover=true] 是否是高亮层图形
	         * @param {string} [option.normal='up'] 是否是普通层图形，迭代时是否指定及z轴顺序
	         * @param {boolean} [option.update=false] 是否在迭代前更新形状列表
	         * 
	         */
	        Storage.prototype.iterShape = function (fun, option) {
	            if (!option) {
	                option = defaultIterateOption;
	            }

	            if (option.hover) {
	                // 高亮层数据遍历
	                for (var i = 0, l = this._hoverElements.length; i < l; i++) {
	                    var el = this._hoverElements[i];
	                    el.updateTransform();
	                    if (fun(el)) {
	                        return this;
	                    }
	                }
	            }

	            if (option.update) {
	                this.updateShapeList();
	            }

	            // 遍历: 'down' | 'up'
	            switch (option.normal) {
	                case 'down':
	                    // 降序遍历，高层优先
	                    var l = this._shapeList.length;
	                    while (l--) {
	                        if (fun(this._shapeList[l])) {
	                            return this;
	                        }
	                    }
	                    break;
	                // case 'up':
	                default:
	                    // 升序遍历，底层优先
	                    for (var i = 0, l = this._shapeList.length; i < l; i++) {
	                        if (fun(this._shapeList[i])) {
	                            return this;
	                        }
	                    }
	                    break;
	            }

	            return this;
	        };

	        /**
	         * 返回hover层的形状数组
	         * @param  {boolean} [update=false] 是否在返回前更新图形的变换
	         * @return {Array.<module:zrender/shape/Base>}
	         */
	        Storage.prototype.getHoverShapes = function (update) {
	            // hoverConnect
	            var hoverElements = [];
	            for (var i = 0, l = this._hoverElements.length; i < l; i++) {
	                hoverElements.push(this._hoverElements[i]);
	                var target = this._hoverElements[i].hoverConnect;
	                if (target) {
	                    var shape;
	                    target = target instanceof Array ? target : [target];
	                    for (var j = 0, k = target.length; j < k; j++) {
	                        shape = target[j].id ? target[j] : this.get(target[j]);
	                        if (shape) {
	                            hoverElements.push(shape);
	                        }
	                    }
	                }
	            }
	            hoverElements.sort(shapeCompareFunc);
	            if (update) {
	                for (var i = 0, l = hoverElements.length; i < l; i++) {
	                    hoverElements[i].updateTransform();
	                }
	            }
	            return hoverElements;
	        };

	        /**
	         * 返回所有图形的绘制队列
	         * @param  {boolean} [update=false] 是否在返回前更新该数组
	         * 详见{@link module:zrender/shape/Base.prototype.updateShapeList}
	         * @return {Array.<module:zrender/shape/Base>}
	         */
	        Storage.prototype.getShapeList = function (update) {
	            if (update) {
	                this.updateShapeList();
	            }
	            return this._shapeList;
	        };

	        /**
	         * 更新图形的绘制队列。
	         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，
	         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列
	         */
	        Storage.prototype.updateShapeList = function () {
	            this._shapeListOffset = 0;
	            for (var i = 0, len = this._roots.length; i < len; i++) {
	                var root = this._roots[i];
	                this._updateAndAddShape(root);
	            }
	            this._shapeList.length = this._shapeListOffset;

	            for (var i = 0, len = this._shapeList.length; i < len; i++) {
	                this._shapeList[i].__renderidx = i;
	            }

	            this._shapeList.sort(shapeCompareFunc);
	        };

	        Storage.prototype._updateAndAddShape = function (el, clipShapes) {
	            
	            if (el.ignore) {
	                return;
	            }

	            el.updateTransform();

	            if (el.type == 'group') {
	                
	                if (el.clipShape) {
	                    // clipShape 的变换是基于 group 的变换
	                    el.clipShape.parent = el;
	                    el.clipShape.updateTransform();

	                    // PENDING 效率影响
	                    if (clipShapes) {
	                        clipShapes = clipShapes.slice();
	                        clipShapes.push(el.clipShape);
	                    } else {
	                        clipShapes = [el.clipShape];
	                    }
	                }

	                for (var i = 0; i < el._children.length; i++) {
	                    var child = el._children[i];

	                    // Force to mark as dirty if group is dirty
	                    child.__dirty = el.__dirty || child.__dirty;

	                    this._updateAndAddShape(child, clipShapes);
	                }

	                // Mark group clean here
	                el.__dirty = false;
	                
	            }
	            else {
	                el.__clipShapes = clipShapes;

	                this._shapeList[this._shapeListOffset++] = el;
	            }
	        };

	        /**
	         * 修改图形(Shape)或者组(Group)
	         * 
	         * @param {string|module:zrender/shape/Base|module:zrender/Group} el
	         * @param {Object} [params] 参数
	         */
	        Storage.prototype.mod = function (el, params) {
	            if (typeof (el) === 'string') {
	                el = this._elements[el];
	            }
	            if (el) {

	                el.modSelf();

	                if (params) {
	                    // 如果第二个参数直接使用 shape
	                    // parent, _storage, __clipShapes 三个属性会有循环引用
	                    // 主要为了向 1.x 版本兼容，2.x 版本不建议使用第二个参数
	                    if (params.parent || params._storage || params.__clipShapes) {
	                        var target = {};
	                        for (var name in params) {
	                            if (
	                                name === 'parent'
	                                || name === '_storage'
	                                || name === '__clipShapes'
	                            ) {
	                                continue;
	                            }
	                            if (params.hasOwnProperty(name)) {
	                                target[name] = params[name];
	                            }
	                        }
	                        util.merge(el, target, true);
	                    }
	                    else {
	                        util.merge(el, params, true);
	                    }
	                }
	            }

	            return this;
	        };

	        /**
	         * 移动指定的图形(Shape)或者组(Group)的位置
	         * @param {string} shapeId 形状唯一标识
	         * @param {number} dx
	         * @param {number} dy
	         */
	        Storage.prototype.drift = function (shapeId, dx, dy) {
	            var shape = this._elements[shapeId];
	            if (shape) {
	                shape.needTransform = true;
	                if (shape.draggable === 'horizontal') {
	                    dy = 0;
	                }
	                else if (shape.draggable === 'vertical') {
	                    dx = 0;
	                }
	                if (!shape.ondrift // ondrift
	                    // 有onbrush并且调用执行返回false或undefined则继续
	                    || (shape.ondrift && !shape.ondrift(dx, dy))
	                ) {
	                    shape.drift(dx, dy);
	                }
	            }

	            return this;
	        };

	        /**
	         * 添加高亮层数据
	         * 
	         * @param {module:zrender/shape/Base} shape
	         */
	        Storage.prototype.addHover = function (shape) {
	            shape.updateNeedTransform();
	            this._hoverElements.push(shape);
	            return this;
	        };

	        /**
	         * 清空高亮层数据
	         */
	        Storage.prototype.delHover = function () {
	            this._hoverElements = [];
	            return this;
	        };

	        /**
	         * 是否有图形在高亮层里
	         * @return {boolean}
	         */
	        Storage.prototype.hasHoverShape = function () {
	            return this._hoverElements.length > 0;
	        };

	        /**
	         * 添加图形(Shape)或者组(Group)到根节点
	         * @param {module:zrender/shape/Shape|module:zrender/Group} el
	         */
	        Storage.prototype.addRoot = function (el) {
	            // Element has been added
	            if (this._elements[el.id]) {
	                return;
	            }

	            if (el instanceof Group) {
	                el.addChildrenToStorage(this);
	            }

	            this.addToMap(el);
	            this._roots.push(el);
	        };

	        /**
	         * 删除指定的图形(Shape)或者组(Group)
	         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage
	         */
	        Storage.prototype.delRoot = function (elId) {
	            if (typeof(elId) == 'undefined') {
	                // 不指定elId清空
	                for (var i = 0; i < this._roots.length; i++) {
	                    var root = this._roots[i];
	                    if (root instanceof Group) {
	                        root.delChildrenFromStorage(this);
	                    }
	                }

	                this._elements = {};
	                this._hoverElements = [];
	                this._roots = [];
	                this._shapeList = [];
	                this._shapeListOffset = 0;

	                return;
	            }

	            if (elId instanceof Array) {
	                for (var i = 0, l = elId.length; i < l; i++) {
	                    this.delRoot(elId[i]);
	                }
	                return;
	            }

	            var el;
	            if (typeof(elId) == 'string') {
	                el = this._elements[elId];
	            }
	            else {
	                el = elId;
	            }

	            var idx = util.indexOf(this._roots, el);
	            if (idx >= 0) {
	                this.delFromMap(el.id);
	                this._roots.splice(idx, 1);
	                if (el instanceof Group) {
	                    el.delChildrenFromStorage(this);
	                }
	            }
	        };

	        Storage.prototype.addToMap = function (el) {
	            if (el instanceof Group) {
	                el._storage = this;
	            }
	            el.modSelf();

	            this._elements[el.id] = el;

	            return this;
	        };

	        Storage.prototype.get = function (elId) {
	            return this._elements[elId];
	        };

	        Storage.prototype.delFromMap = function (elId) {
	            var el = this._elements[elId];
	            if (el) {
	                delete this._elements[elId];

	                if (el instanceof Group) {
	                    el._storage = null;
	                }
	            }

	            return this;
	        };

	        /**
	         * 清空并且释放Storage
	         */
	        Storage.prototype.dispose = function () {
	            this._elements = 
	            this._renderList = 
	            this._roots =
	            this._hoverElements = null;
	        };

	        return Storage;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * echarts设备环境识别
	 *
	 * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。
	 * @author firede[firede@firede.us]
	 * @desc thanks zepto.
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	    // Zepto.js
	    // (c) 2010-2013 Thomas Fuchs
	    // Zepto.js may be freely distributed under the MIT license.

	    function detect(ua) {
	        var os = this.os = {};
	        var browser = this.browser = {};
	        var webkit = ua.match(/Web[kK]it[\/]{0,1}([\d.]+)/);
	        var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
	        var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
	        var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
	        var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
	        var webos = ua.match(/(webOS|hpwOS)[\s\/]([\d.]+)/);
	        var touchpad = webos && ua.match(/TouchPad/);
	        var kindle = ua.match(/Kindle\/([\d.]+)/);
	        var silk = ua.match(/Silk\/([\d._]+)/);
	        var blackberry = ua.match(/(BlackBerry).*Version\/([\d.]+)/);
	        var bb10 = ua.match(/(BB10).*Version\/([\d.]+)/);
	        var rimtabletos = ua.match(/(RIM\sTablet\sOS)\s([\d.]+)/);
	        var playbook = ua.match(/PlayBook/);
	        var chrome = ua.match(/Chrome\/([\d.]+)/) || ua.match(/CriOS\/([\d.]+)/);
	        var firefox = ua.match(/Firefox\/([\d.]+)/);
	        var ie = ua.match(/MSIE ([\d.]+)/);
	        var safari = webkit && ua.match(/Mobile\//) && !chrome;
	        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;
	        var ie = ua.match(/MSIE\s([\d.]+)/);

	        // Todo: clean this up with a better OS/browser seperation:
	        // - discern (more) between multiple browsers on android
	        // - decide if kindle fire in silk mode is android or not
	        // - Firefox on Android doesn't specify the Android version
	        // - possibly devide in os, device and browser hashes

	        if (browser.webkit = !!webkit) browser.version = webkit[1];

	        if (android) os.android = true, os.version = android[2];
	        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');
	        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');
	        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
	        if (webos) os.webos = true, os.version = webos[2];
	        if (touchpad) os.touchpad = true;
	        if (blackberry) os.blackberry = true, os.version = blackberry[2];
	        if (bb10) os.bb10 = true, os.version = bb10[2];
	        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];
	        if (playbook) browser.playbook = true;
	        if (kindle) os.kindle = true, os.version = kindle[1];
	        if (silk) browser.silk = true, browser.version = silk[1];
	        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;
	        if (chrome) browser.chrome = true, browser.version = chrome[1];
	        if (firefox) browser.firefox = true, browser.version = firefox[1];
	        if (ie) browser.ie = true, browser.version = ie[1];
	        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;
	        if (webview) browser.webview = true;
	        if (ie) browser.ie = true, browser.version = ie[1];

	        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||
	            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));
	        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||
	            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\/([\d.]+)/)) ||
	            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));

	        return {
	            browser: browser,
	            os: os,
	            // 原生canvas支持，改极端点了
	            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)
	            canvasSupported : document.createElement('canvas').getContext ? true : false
	        };
	    }

	    return detect(navigator.userAgent);
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * shape基类
	 * @module zrender/shape/Base
	 * @author  Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *          errorrik (errorrik@gmail.com)
	 */

	/**
	 * @typedef {Object} IBaseShapeStyle
	 * @property {string} [brushType='fill']
	 * @property {string} [color='#000000'] 填充颜色
	 * @property {string} [strokeColor='#000000'] 描边颜色
	 * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square
	 * @property {number} [lineWidth=1] 描边宽度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 * @property {string} [text] 图形中的附加文本
	 * @property {string} [textColor='#000000'] 文本颜色
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom
	 * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。
	 *                                可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 */

	/**
	 * @typedef {Object} module:zrender/shape/Base~IBoundingRect
	 * @property {number} x 左上角顶点x轴坐标 
	 * @property {number} y 左上角顶点y轴坐标
	 * @property {number} width 包围盒矩形宽度
	 * @property {number} height 包围盒矩形高度
	 */

	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	        var vmlCanvasManager = window['G_vmlCanvasManager'];

	        var matrix = __webpack_require__(51);
	        var guid = __webpack_require__(35);
	        var util = __webpack_require__(33);
	        var log = __webpack_require__(34);

	        var Transformable = __webpack_require__(58);
	        var Eventful = __webpack_require__(52);

	        function _fillText(ctx, text, x, y, textFont, textAlign, textBaseline) {
	            if (textFont) {
	                ctx.font = textFont;
	            }
	            ctx.textAlign = textAlign;
	            ctx.textBaseline = textBaseline;
	            var rect = _getTextRect(
	                text, x, y, textFont, textAlign, textBaseline
	            );
	            
	            text = (text + '').split('\n');
	            var lineHeight = __webpack_require__(59).getTextHeight('国', textFont);
	            
	            switch (textBaseline) {
	                case 'top':
	                    y = rect.y;
	                    break;
	                case 'bottom':
	                    y = rect.y + lineHeight;
	                    break;
	                default:
	                    y = rect.y + lineHeight / 2;
	            }
	            
	            for (var i = 0, l = text.length; i < l; i++) {
	                ctx.fillText(text[i], x, y);
	                y += lineHeight;
	            }
	        }

	        /**
	         * 返回矩形区域，用于局部刷新和文字定位
	         * @inner
	         * @param {string} text
	         * @param {number} x
	         * @param {number} y
	         * @param {string} textFont
	         * @param {string} textAlign
	         * @param {string} textBaseline
	         */
	        function _getTextRect(text, x, y, textFont, textAlign, textBaseline) {
	            var area = __webpack_require__(59);
	            var width = area.getTextWidth(text, textFont);
	            var lineHeight = area.getTextHeight('国', textFont);
	            
	            text = (text + '').split('\n');
	            
	            switch (textAlign) {
	                case 'end':
	                case 'right':
	                    x -= width;
	                    break;
	                case 'center':
	                    x -= (width / 2);
	                    break;
	            }

	            switch (textBaseline) {
	                case 'top':
	                    break;
	                case 'bottom':
	                    y -= lineHeight * text.length;
	                    break;
	                default:
	                    y -= lineHeight * text.length / 2;
	            }

	            return {
	                x : x,
	                y : y,
	                width : width,
	                height : lineHeight * text.length
	            };
	        }

	        /**
	         * @alias module:zrender/shape/Base
	         * @constructor
	         * @extends module:zrender/mixin/Transformable
	         * @extends module:zrender/mixin/Eventful
	         * @param {Object} options 关于shape的配置项，可以是shape的自有属性，也可以是自定义的属性。
	         */
	        var Base = function(options) {
	            
	            options = options || {};
	            
	            /**
	             * Shape id, 全局唯一
	             * @type {string}
	             */
	            this.id = options.id || guid();

	            for (var key in options) {
	                this[key] = options[key];
	            }

	            /**
	             * 基础绘制样式
	             * @type {module:zrender/shape/Base~IBaseShapeStyle}
	             */
	            this.style = this.style || {};

	            /**
	             * 高亮样式
	             * @type {module:zrender/shape/Base~IBaseShapeStyle}
	             */
	            this.highlightStyle = this.highlightStyle || null;

	            /**
	             * 父节点
	             * @readonly
	             * @type {module:zrender/Group}
	             * @default null
	             */
	            this.parent = null;

	            this.__dirty = true;

	            this.__clipShapes = [];

	            Transformable.call(this);
	            Eventful.call(this);
	        };
	        /**
	         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件
	         * @name module:zrender/shape/Base#invisible
	         * @type {boolean}
	         * @default false
	         */
	        Base.prototype.invisible = false;

	        /**
	         * 图形是否忽略，为true时忽略图形的绘制以及事件触发
	         * @name module:zrender/shape/Base#ignore
	         * @type {boolean}
	         * @default false
	         */
	        Base.prototype.ignore = false;

	        /**
	         * z层level，决定绘画在哪层canvas中
	         * @name module:zrender/shape/Base#zlevel
	         * @type {number}
	         * @default 0
	         */
	        Base.prototype.zlevel = 0;

	        /**
	         * 是否可拖拽
	         * @name module:zrender/shape/Base#draggable
	         * @type {boolean}
	         * @default false
	         */
	        Base.prototype.draggable = false;

	        /**
	         * 是否可点击
	         * @name module:zrender/shape/Base#clickable
	         * @type {boolean}
	         * @default false
	         */
	        Base.prototype.clickable = false;

	        /**
	         * 是否可以hover
	         * @name module:zrender/shape/Base#hoverable
	         * @type {boolean}
	         * @default true
	         */
	        Base.prototype.hoverable = true;
	        
	        /**
	         * z值，跟zlevel一样影响shape绘制的前后顺序，z值大的shape会覆盖在z值小的上面，
	         * 但是并不会创建新的canvas，所以优先级低于zlevel，而且频繁改动的开销比zlevel小很多。
	         * 
	         * @name module:zrender/shape/Base#z
	         * @type {number}
	         * @default 0
	         */
	        Base.prototype.z = 0;

	        /**
	         * 绘制图形
	         * 
	         * @param {CanvasRenderingContext2D} ctx
	         * @param {boolean} [isHighlight=false] 是否使用高亮属性
	         * @param {Function} [updateCallback]
	         *        需要异步加载资源的shape可以通过这个callback(e), 
	         *        让painter更新视图，base.brush没用，需要的话重载brush
	         */
	        Base.prototype.brush = function (ctx, isHighlight) {

	            var style = this.beforeBrush(ctx, isHighlight);

	            ctx.beginPath();
	            this.buildPath(ctx, style);

	            switch (style.brushType) {
	                /* jshint ignore:start */
	                case 'both':
	                    ctx.fill();
	                case 'stroke':
	                    style.lineWidth > 0 && ctx.stroke();
	                    break;
	                /* jshint ignore:end */
	                default:
	                    ctx.fill();
	            }
	            
	            this.drawText(ctx, style, this.style);

	            this.afterBrush(ctx);
	        };

	        /**
	         * 具体绘制操作前的一些公共操作
	         * @param {CanvasRenderingContext2D} ctx
	         * @param {boolean} [isHighlight=false] 是否使用高亮属性
	         * @return {Object} 处理后的样式
	         */
	        Base.prototype.beforeBrush = function (ctx, isHighlight) {
	            var style = this.style;
	            
	            if (this.brushTypeOnly) {
	                style.brushType = this.brushTypeOnly;
	            }

	            if (isHighlight) {
	                // 根据style扩展默认高亮样式
	                style = this.getHighlightStyle(
	                    style,
	                    this.highlightStyle || {},
	                    this.brushTypeOnly
	                );
	            }

	            if (this.brushTypeOnly == 'stroke') {
	                style.strokeColor = style.strokeColor || style.color;
	            }

	            ctx.save();

	            this.doClip(ctx);

	            this.setContext(ctx, style);

	            // 设置transform
	            this.setTransform(ctx);

	            return style;
	        };

	        /**
	         * 绘制后的处理
	         * @param {CanvasRenderingContext2D} ctx
	         */
	        Base.prototype.afterBrush = function (ctx) {
	            ctx.restore();
	        };

	        var STYLE_CTX_MAP = [
	            [ 'color', 'fillStyle' ],
	            [ 'strokeColor', 'strokeStyle' ],
	            [ 'opacity', 'globalAlpha' ],
	            [ 'lineCap', 'lineCap' ],
	            [ 'lineJoin', 'lineJoin' ],
	            [ 'miterLimit', 'miterLimit' ],
	            [ 'lineWidth', 'lineWidth' ],
	            [ 'shadowBlur', 'shadowBlur' ],
	            [ 'shadowColor', 'shadowColor' ],
	            [ 'shadowOffsetX', 'shadowOffsetX' ],
	            [ 'shadowOffsetY', 'shadowOffsetY' ]
	        ];

	        /**
	         * 设置 fillStyle, strokeStyle, shadow 等通用绘制样式
	         * @param {CanvasRenderingContext2D} ctx
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} style
	         */
	        Base.prototype.setContext = function (ctx, style) {
	            for (var i = 0, len = STYLE_CTX_MAP.length; i < len; i++) {
	                var styleProp = STYLE_CTX_MAP[i][0];
	                var styleValue = style[styleProp];
	                var ctxProp = STYLE_CTX_MAP[i][1];

	                if (typeof styleValue != 'undefined') {
	                    ctx[ctxProp] = styleValue;
	                }
	            }
	        };

	        var clipShapeInvTransform = matrix.create();
	        Base.prototype.doClip = function (ctx) {
	            if (this.__clipShapes && !vmlCanvasManager) {
	                for (var i = 0; i < this.__clipShapes.length; i++) {
	                    var clipShape = this.__clipShapes[i];
	                    if (clipShape.needTransform) {
	                        var m = clipShape.transform;
	                        matrix.invert(clipShapeInvTransform, m);
	                        ctx.transform(
	                            m[0], m[1],
	                            m[2], m[3],
	                            m[4], m[5]
	                        );
	                    }
	                    ctx.beginPath();
	                    clipShape.buildPath(ctx, clipShape.style);
	                    ctx.clip();
	                    // Transform back
	                    if (clipShape.needTransform) {
	                        var m = clipShapeInvTransform;
	                        ctx.transform(
	                            m[0], m[1],
	                            m[2], m[3],
	                            m[4], m[5]
	                        );
	                    }
	                }
	            }
	        };
	    
	        /**
	         * 根据默认样式扩展高亮样式
	         * 
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 默认样式
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} highlightStyle 高亮样式
	         * @param {string} brushTypeOnly
	         */
	        Base.prototype.getHighlightStyle = function (style, highlightStyle, brushTypeOnly) {
	            var newStyle = {};
	            for (var k in style) {
	                newStyle[k] = style[k];
	            }

	            var color = __webpack_require__(43);
	            var highlightColor = color.getHighlightColor();
	            // 根据highlightStyle扩展
	            if (style.brushType != 'stroke') {
	                // 带填充则用高亮色加粗边线
	                newStyle.strokeColor = highlightColor;
	                newStyle.lineWidth = (style.lineWidth || 1)
	                                      + this.getHighlightZoom();
	                newStyle.brushType = 'both';
	            }
	            else {
	                if (brushTypeOnly != 'stroke') {
	                    // 描边型的则用原色加工高亮
	                    newStyle.strokeColor = highlightColor;
	                    newStyle.lineWidth = (style.lineWidth || 1)
	                                          + this.getHighlightZoom();
	                } 
	                else {
	                    // 线型的则用原色加工高亮
	                    newStyle.strokeColor = highlightStyle.strokeColor
	                                           || color.mix(
	                                                 style.strokeColor,
	                                                 color.toRGB(highlightColor)
	                                              );
	                }
	            }

	            // 可自定义覆盖默认值
	            for (var k in highlightStyle) {
	                if (typeof highlightStyle[k] != 'undefined') {
	                    newStyle[k] = highlightStyle[k];
	                }
	            }

	            return newStyle;
	        };

	        // 高亮放大效果参数
	        // 当前统一设置为6，如有需要差异设置，通过this.type判断实例类型
	        Base.prototype.getHighlightZoom = function () {
	            return this.type != 'text' ? 6 : 2;
	        };

	        /**
	         * 移动位置
	         * @param {number} dx 横坐标变化
	         * @param {number} dy 纵坐标变化
	         */
	        Base.prototype.drift = function (dx, dy) {
	            this.position[0] += dx;
	            this.position[1] += dy;
	        };

	        /**
	         * 构建绘制的Path
	         * @param {CanvasRenderingContext2D} ctx
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} style
	         */
	        Base.prototype.buildPath = function (ctx, style) {
	            log('buildPath not implemented in ' + this.type);
	        };

	        /**
	         * 计算返回包围盒矩形
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} style
	         * @return {module:zrender/shape/Base~IBoundingRect}
	         */
	        Base.prototype.getRect = function (style) {
	            log('getRect not implemented in ' + this.type);   
	        };
	        
	        /**
	         * 判断鼠标位置是否在图形内
	         * @param {number} x
	         * @param {number} y
	         * @return {boolean}
	         */
	        Base.prototype.isCover = function (x, y) {
	            var originPos = this.transformCoordToLocal(x, y);
	            x = originPos[0];
	            y = originPos[1];

	            // 快速预判并保留判断矩形
	            if (this.isCoverRect(x, y)) {
	                // 矩形内
	                return __webpack_require__(59).isInside(this, this.style, x, y);
	            }
	            
	            return false;
	        };

	        Base.prototype.isCoverRect = function (x, y) {
	            // 快速预判并保留判断矩形
	            var rect = this.style.__rect;
	            if (!rect) {
	                rect = this.style.__rect = this.getRect(this.style);
	            }
	            return x >= rect.x
	                && x <= (rect.x + rect.width)
	                && y >= rect.y
	                && y <= (rect.y + rect.height);
	        };

	        /**
	         * 绘制附加文本
	         * @param {CanvasRenderingContext2D} ctx
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 样式
	         * @param {module:zrender/shape/Base~IBaseShapeStyle} normalStyle 默认样式，用于定位文字显示
	         */
	        Base.prototype.drawText = function (ctx, style, normalStyle) {
	            if (typeof(style.text) == 'undefined' || style.text === false) {
	                return;
	            }
	            // 字体颜色策略
	            var textColor = style.textColor || style.color || style.strokeColor;
	            ctx.fillStyle = textColor;

	            // 文本与图形间空白间隙
	            var dd = 10;
	            var al;         // 文本水平对齐
	            var bl;         // 文本垂直对齐
	            var tx;         // 文本横坐标
	            var ty;         // 文本纵坐标

	            var textPosition = style.textPosition       // 用户定义
	                               || this.textPosition     // shape默认
	                               || 'top';                // 全局默认

	            switch (textPosition) {
	                case 'inside': 
	                case 'top': 
	                case 'bottom': 
	                case 'left': 
	                case 'right': 
	                    if (this.getRect) {
	                        var rect = (normalStyle || style).__rect
	                                   || this.getRect(normalStyle || style);

	                        switch (textPosition) {
	                            case 'inside':
	                                tx = rect.x + rect.width / 2;
	                                ty = rect.y + rect.height / 2;
	                                al = 'center';
	                                bl = 'middle';
	                                if (style.brushType != 'stroke'
	                                    && textColor == style.color
	                                ) {
	                                    ctx.fillStyle = '#fff';
	                                }
	                                break;
	                            case 'left':
	                                tx = rect.x - dd;
	                                ty = rect.y + rect.height / 2;
	                                al = 'end';
	                                bl = 'middle';
	                                break;
	                            case 'right':
	                                tx = rect.x + rect.width + dd;
	                                ty = rect.y + rect.height / 2;
	                                al = 'start';
	                                bl = 'middle';
	                                break;
	                            case 'top':
	                                tx = rect.x + rect.width / 2;
	                                ty = rect.y - dd;
	                                al = 'center';
	                                bl = 'bottom';
	                                break;
	                            case 'bottom':
	                                tx = rect.x + rect.width / 2;
	                                ty = rect.y + rect.height + dd;
	                                al = 'center';
	                                bl = 'top';
	                                break;
	                        }
	                    }
	                    break;
	                case 'start':
	                case 'end':
	                    var pointList = style.pointList
	                                    || [
	                                        [style.xStart || 0, style.yStart || 0],
	                                        [style.xEnd || 0, style.yEnd || 0]
	                                    ];
	                    var length = pointList.length;
	                    if (length < 2) {
	                        // 少于2个点就不画了~
	                        return;
	                    }
	                    var xStart;
	                    var xEnd;
	                    var yStart;
	                    var yEnd;
	                    switch (textPosition) {
	                        case 'start':
	                            xStart = pointList[1][0];
	                            xEnd = pointList[0][0];
	                            yStart = pointList[1][1];
	                            yEnd = pointList[0][1];
	                            break;
	                        case 'end':
	                            xStart = pointList[length - 2][0];
	                            xEnd = pointList[length - 1][0];
	                            yStart = pointList[length - 2][1];
	                            yEnd = pointList[length - 1][1];
	                            break;
	                    }
	                    tx = xEnd;
	                    ty = yEnd;
	                    
	                    var angle = Math.atan((yStart - yEnd) / (xEnd - xStart)) / Math.PI * 180;
	                    if ((xEnd - xStart) < 0) {
	                        angle += 180;
	                    }
	                    else if ((yStart - yEnd) < 0) {
	                        angle += 360;
	                    }
	                    
	                    dd = 5;
	                    if (angle >= 30 && angle <= 150) {
	                        al = 'center';
	                        bl = 'bottom';
	                        ty -= dd;
	                    }
	                    else if (angle > 150 && angle < 210) {
	                        al = 'right';
	                        bl = 'middle';
	                        tx -= dd;
	                    }
	                    else if (angle >= 210 && angle <= 330) {
	                        al = 'center';
	                        bl = 'top';
	                        ty += dd;
	                    }
	                    else {
	                        al = 'left';
	                        bl = 'middle';
	                        tx += dd;
	                    }
	                    break;
	                case 'specific':
	                    tx = style.textX || 0;
	                    ty = style.textY || 0;
	                    al = 'start';
	                    bl = 'middle';
	                    break;
	            }

	            if (tx != null && ty != null) {
	                _fillText(
	                    ctx,
	                    style.text, 
	                    tx, ty, 
	                    style.textFont,
	                    style.textAlign || al,
	                    style.textBaseline || bl
	                );
	            }
	        };

	        Base.prototype.modSelf = function() {
	            this.__dirty = true;
	            if (this.style) {
	                this.style.__rect = null;
	            }
	            if (this.highlightStyle) {
	                this.highlightStyle.__rect = null;
	            }
	        };

	        /**
	         * 图形是否会触发事件
	         * @return {boolean}
	         */
	        // TODO, 通过 bind 绑定的事件
	        Base.prototype.isSilent = function () {
	            return !(
	                this.hoverable || this.draggable || this.clickable
	                || this.onmousemove || this.onmouseover || this.onmouseout
	                || this.onmousedown || this.onmouseup || this.onclick
	                || this.ondragenter || this.ondragover || this.ondragleave
	                || this.ondrop
	            );
	        };

	        util.merge(Base.prototype, Transformable.prototype, true);
	        util.merge(Base.prototype, Eventful.prototype, true);

	        return Base;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 虚线lineTo 
	 *
	 * author:  Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *          errorrik (errorrik@gmail.com)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (/* require */) {

	        var dashPattern = [ 5, 5 ];
	        /**
	         * 虚线lineTo 
	         */
	        return function (ctx, x1, y1, x2, y2, dashLength) {
	            // http://msdn.microsoft.com/en-us/library/ie/dn265063(v=vs.85).aspx
	            if (ctx.setLineDash) {
	                dashPattern[0] = dashPattern[1] = dashLength;
	                ctx.setLineDash(dashPattern);
	                ctx.moveTo(x1, y1);
	                ctx.lineTo(x2, y2);
	                return;
	            }

	            dashLength = typeof dashLength != 'number'
	                            ? 5 
	                            : dashLength;

	            var dx = x2 - x1;
	            var dy = y2 - y1;
	            var numDashes = Math.floor(
	                Math.sqrt(dx * dx + dy * dy) / dashLength
	            );
	            dx = dx / numDashes;
	            dy = dy / numDashes;
	            var flag = true;
	            for (var i = 0; i < numDashes; ++i) {
	                if (flag) {
	                    ctx.moveTo(x1, y1);
	                }
	                else {
	                    ctx.lineTo(x1, y1);
	                }
	                flag = !flag;
	                x1 += dx;
	                y1 += dy;
	            }
	            ctx.lineTo(x2, y2);
	        };
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 动画主控制器
	 * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件
	 * @config life(1000) 动画时长
	 * @config delay(0) 动画延迟时间
	 * @config loop(true)
	 * @config gap(0) 循环的间隔时间
	 * @config onframe
	 * @config easing(optional)
	 * @config ondestroy(optional)
	 * @config onrestart(optional)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {

	        var Easing = __webpack_require__(57);

	        function Clip(options) {

	            this._targetPool = options.target || {};
	            if (!(this._targetPool instanceof Array)) {
	                this._targetPool = [ this._targetPool ];
	            }

	            // 生命周期
	            this._life = options.life || 1000;
	            // 延时
	            this._delay = options.delay || 0;
	            // 开始时间
	            this._startTime = new Date().getTime() + this._delay;// 单位毫秒

	            // 结束时间
	            this._endTime = this._startTime + this._life * 1000;

	            // 是否循环
	            this.loop = typeof options.loop == 'undefined'
	                        ? false : options.loop;

	            this.gap = options.gap || 0;

	            this.easing = options.easing || 'Linear';

	            this.onframe = options.onframe;
	            this.ondestroy = options.ondestroy;
	            this.onrestart = options.onrestart;
	        }

	        Clip.prototype = {
	            step : function (time) {
	                var percent = (time - this._startTime) / this._life;

	                // 还没开始
	                if (percent < 0) {
	                    return;
	                }

	                percent = Math.min(percent, 1);

	                var easingFunc = typeof this.easing == 'string'
	                                 ? Easing[this.easing]
	                                 : this.easing;
	                var schedule = typeof easingFunc === 'function'
	                    ? easingFunc(percent)
	                    : percent;

	                this.fire('frame', schedule);

	                // 结束
	                if (percent == 1) {
	                    if (this.loop) {
	                        this.restart();
	                        // 重新开始周期
	                        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件
	                        return 'restart';
	                    }
	                    
	                    // 动画完成将这个控制器标识为待删除
	                    // 在Animation.update中进行批量删除
	                    this._needsRemove = true;
	                    return 'destroy';
	                }
	                
	                return null;
	            },
	            restart : function() {
	                var time = new Date().getTime();
	                var remainder = (time - this._startTime) % this._life;
	                this._startTime = new Date().getTime() - remainder + this.gap;

	                this._needsRemove = false;
	            },
	            fire : function(eventType, arg) {
	                for (var i = 0, len = this._targetPool.length; i < len; i++) {
	                    if (this['on' + eventType]) {
	                        this['on' + eventType](this._targetPool[i], arg);
	                    }
	                }
	            },
	            constructor: Clip
	        };

	        return Clip;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 颜色辅助模块
	 * @module zrender/tool/color
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	    var util = __webpack_require__(33);

	    var _ctx;

	    // Color palette is an array containing the default colors for the chart's
	    // series.
	    // When all colors are used, new colors are selected from the start again.
	    // Defaults to:
	    // 默认色板
	    var palette = [
	        '#ff9277', ' #dddd00', ' #ffc877', ' #bbe3ff', ' #d5ffbb',
	        '#bbbbff', ' #ddb000', ' #b0dd00', ' #e2bbff', ' #ffbbe3',
	        '#ff7777', ' #ff9900', ' #83dd00', ' #77e3ff', ' #778fff',
	        '#c877ff', ' #ff77ab', ' #ff6600', ' #aa8800', ' #77c7ff',
	        '#ad77ff', ' #ff77ff', ' #dd0083', ' #777700', ' #00aa00',
	        '#0088aa', ' #8400dd', ' #aa0088', ' #dd0000', ' #772e00'
	    ];
	    var _palette = palette;

	    var highlightColor = 'rgba(255,255,0,0.5)';
	    var _highlightColor = highlightColor;

	    // 颜色格式
	    /*jshint maxlen: 330 */
	    var colorRegExp = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i;

	    var _nameColors = {
	        aliceblue : '#f0f8ff',
	        antiquewhite : '#faebd7',
	        aqua : '#0ff',
	        aquamarine : '#7fffd4',
	        azure : '#f0ffff',
	        beige : '#f5f5dc',
	        bisque : '#ffe4c4',
	        black : '#000',
	        blanchedalmond : '#ffebcd',
	        blue : '#00f',
	        blueviolet : '#8a2be2',
	        brown : '#a52a2a',
	        burlywood : '#deb887',
	        cadetblue : '#5f9ea0',
	        chartreuse : '#7fff00',
	        chocolate : '#d2691e',
	        coral : '#ff7f50',
	        cornflowerblue : '#6495ed',
	        cornsilk : '#fff8dc',
	        crimson : '#dc143c',
	        cyan : '#0ff',
	        darkblue : '#00008b',
	        darkcyan : '#008b8b',
	        darkgoldenrod : '#b8860b',
	        darkgray : '#a9a9a9',
	        darkgrey : '#a9a9a9',
	        darkgreen : '#006400',
	        darkkhaki : '#bdb76b',
	        darkmagenta : '#8b008b',
	        darkolivegreen : '#556b2f',
	        darkorange : '#ff8c00',
	        darkorchid : '#9932cc',
	        darkred : '#8b0000',
	        darksalmon : '#e9967a',
	        darkseagreen : '#8fbc8f',
	        darkslateblue : '#483d8b',
	        darkslategray : '#2f4f4f',
	        darkslategrey : '#2f4f4f',
	        darkturquoise : '#00ced1',
	        darkviolet : '#9400d3',
	        deeppink : '#ff1493',
	        deepskyblue : '#00bfff',
	        dimgray : '#696969',
	        dimgrey : '#696969',
	        dodgerblue : '#1e90ff',
	        firebrick : '#b22222',
	        floralwhite : '#fffaf0',
	        forestgreen : '#228b22',
	        fuchsia : '#f0f',
	        gainsboro : '#dcdcdc',
	        ghostwhite : '#f8f8ff',
	        gold : '#ffd700',
	        goldenrod : '#daa520',
	        gray : '#808080',
	        grey : '#808080',
	        green : '#008000',
	        greenyellow : '#adff2f',
	        honeydew : '#f0fff0',
	        hotpink : '#ff69b4',
	        indianred : '#cd5c5c',
	        indigo : '#4b0082',
	        ivory : '#fffff0',
	        khaki : '#f0e68c',
	        lavender : '#e6e6fa',
	        lavenderblush : '#fff0f5',
	        lawngreen : '#7cfc00',
	        lemonchiffon : '#fffacd',
	        lightblue : '#add8e6',
	        lightcoral : '#f08080',
	        lightcyan : '#e0ffff',
	        lightgoldenrodyellow : '#fafad2',
	        lightgray : '#d3d3d3',
	        lightgrey : '#d3d3d3',
	        lightgreen : '#90ee90',
	        lightpink : '#ffb6c1',
	        lightsalmon : '#ffa07a',
	        lightseagreen : '#20b2aa',
	        lightskyblue : '#87cefa',
	        lightslategray : '#789',
	        lightslategrey : '#789',
	        lightsteelblue : '#b0c4de',
	        lightyellow : '#ffffe0',
	        lime : '#0f0',
	        limegreen : '#32cd32',
	        linen : '#faf0e6',
	        magenta : '#f0f',
	        maroon : '#800000',
	        mediumaquamarine : '#66cdaa',
	        mediumblue : '#0000cd',
	        mediumorchid : '#ba55d3',
	        mediumpurple : '#9370d8',
	        mediumseagreen : '#3cb371',
	        mediumslateblue : '#7b68ee',
	        mediumspringgreen : '#00fa9a',
	        mediumturquoise : '#48d1cc',
	        mediumvioletred : '#c71585',
	        midnightblue : '#191970',
	        mintcream : '#f5fffa',
	        mistyrose : '#ffe4e1',
	        moccasin : '#ffe4b5',
	        navajowhite : '#ffdead',
	        navy : '#000080',
	        oldlace : '#fdf5e6',
	        olive : '#808000',
	        olivedrab : '#6b8e23',
	        orange : '#ffa500',
	        orangered : '#ff4500',
	        orchid : '#da70d6',
	        palegoldenrod : '#eee8aa',
	        palegreen : '#98fb98',
	        paleturquoise : '#afeeee',
	        palevioletred : '#d87093',
	        papayawhip : '#ffefd5',
	        peachpuff : '#ffdab9',
	        peru : '#cd853f',
	        pink : '#ffc0cb',
	        plum : '#dda0dd',
	        powderblue : '#b0e0e6',
	        purple : '#800080',
	        red : '#f00',
	        rosybrown : '#bc8f8f',
	        royalblue : '#4169e1',
	        saddlebrown : '#8b4513',
	        salmon : '#fa8072',
	        sandybrown : '#f4a460',
	        seagreen : '#2e8b57',
	        seashell : '#fff5ee',
	        sienna : '#a0522d',
	        silver : '#c0c0c0',
	        skyblue : '#87ceeb',
	        slateblue : '#6a5acd',
	        slategray : '#708090',
	        slategrey : '#708090',
	        snow : '#fffafa',
	        springgreen : '#00ff7f',
	        steelblue : '#4682b4',
	        tan : '#d2b48c',
	        teal : '#008080',
	        thistle : '#d8bfd8',
	        tomato : '#ff6347',
	        turquoise : '#40e0d0',
	        violet : '#ee82ee',
	        wheat : '#f5deb3',
	        white : '#fff',
	        whitesmoke : '#f5f5f5',
	        yellow : '#ff0',
	        yellowgreen : '#9acd32'
	    };

	    /**
	     * 自定义调色板
	     */
	    function customPalette(userPalete) {
	        palette = userPalete;
	    }

	    /**
	     * 复位默认色板
	     */
	    function resetPalette() {
	        palette = _palette;
	    }

	    /**
	     * 获取色板颜色
	     * @memberOf module:zrender/tool/color
	     * @param {number} idx 色板位置
	     * @param {Array.<string>} [userPalete] 自定义色板
	     * @return {string} 颜色
	     */
	    function getColor(idx, userPalete) {
	        idx = idx | 0;
	        userPalete = userPalete || palette;
	        return userPalete[idx % userPalete.length];
	    }

	    /**
	     * 自定义默认高亮颜色
	     */
	    function customHighlight(userHighlightColor) {
	        highlightColor = userHighlightColor;
	    }

	    /**
	     * 重置默认高亮颜色
	     */
	    function resetHighlight() {
	        _highlightColor = highlightColor;
	    }

	    /**
	     * 获取默认高亮颜色
	     */
	    function getHighlightColor() {
	        return highlightColor;
	    }

	    /**
	     * 径向渐变
	     * @memberOf module:zrender/tool/color
	     * @param {number} x0 渐变起点
	     * @param {number} y0
	     * @param {number} r0
	     * @param {number} x1 渐变终点
	     * @param {number} y1
	     * @param {number} r1
	     * @param {Array} colorList 颜色列表
	     * @return {CanvasGradient}
	     */
	    function getRadialGradient(x0, y0, r0, x1, y1, r1, colorList) {
	        if (!_ctx) {
	            _ctx = util.getContext();
	        }
	        var gradient = _ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);
	        for (var i = 0, l = colorList.length; i < l; i++) {
	            gradient.addColorStop(colorList[i][0], colorList[i][1]);
	        }
	        gradient.__nonRecursion = true;
	        return gradient;
	    }

	    /**
	     * 线性渐变
	     * @param {Object} x0 渐变起点
	     * @param {Object} y0
	     * @param {Object} x1 渐变终点
	     * @param {Object} y1
	     * @param {Array} colorList 颜色列表
	     */
	    function getLinearGradient(x0, y0, x1, y1, colorList) {
	        if (!_ctx) {
	            _ctx = util.getContext();
	        }
	        var gradient = _ctx.createLinearGradient(x0, y0, x1, y1);
	        for (var i = 0, l = colorList.length; i < l; i++) {
	            gradient.addColorStop(colorList[i][0], colorList[i][1]);
	        }
	        gradient.__nonRecursion = true;
	        return gradient;
	    }

	    /**
	     * 获取两种颜色之间渐变颜色数组
	     * @param {color} start 起始颜色
	     * @param {color} end 结束颜色
	     * @param {number} step 渐变级数
	     * @return {Array}  颜色数组
	     */
	    function getStepColors(start, end, step) {
	        start = toRGBA(start);
	        end = toRGBA(end);
	        start = getData(start);
	        end = getData(end);

	        var colors = [];
	        var stepR = (end[0] - start[0]) / step;
	        var stepG = (end[1] - start[1]) / step;
	        var stepB = (end[2] - start[2]) / step;
	        var stepA = (end[3] - start[3]) / step;
	        // 生成颜色集合
	        // fix by linfeng 颜色堆积
	        for (var i = 0, r = start[0], g = start[1], b = start[2], a = start[3]; i < step; i++) {
	            colors[i] = toColor([
	                adjust(Math.floor(r), [ 0, 255 ]),
	                adjust(Math.floor(g), [ 0, 255 ]), 
	                adjust(Math.floor(b), [ 0, 255 ]),
	                a.toFixed(4) - 0
	            ],'rgba');
	            r += stepR;
	            g += stepG;
	            b += stepB;
	            a += stepA;
	        }
	        r = end[0];
	        g = end[1];
	        b = end[2];
	        a = end[3];
	        colors[i] = toColor([r, g, b, a], 'rgba');
	        return colors;
	    }

	    /**
	     * 获取指定级数的渐变颜色数组
	     * @memberOf module:zrender/tool/color
	     * @param {Array.<string>} colors 颜色组
	     * @param {number} [step=20] 渐变级数
	     * @return {Array.<string>}  颜色数组
	     */
	    function getGradientColors(colors, step) {
	        var ret = [];
	        var len = colors.length;
	        if (step === undefined) {
	            step = 20;
	        }
	        if (len === 1) {
	            ret = getStepColors(colors[0], colors[0], step);
	        }
	        else if (len > 1) {
	            for (var i = 0, n = len - 1; i < n; i++) {
	                var steps = getStepColors(colors[i], colors[i + 1], step);
	                if (i < n - 1) {
	                    steps.pop();
	                }
	                ret = ret.concat(steps);
	            }
	        }
	        return ret;
	    }

	    /**
	     * 颜色值数组转为指定格式颜色,例如:<br/>
	     * data = [60,20,20,0.1] format = 'rgba'
	     * 返回：rgba(60,20,20,0.1)
	     * @param {Array} data 颜色值数组
	     * @param {string} format 格式,默认rgb
	     * @return {string} 颜色
	     */
	    function toColor(data, format) {
	        format = format || 'rgb';
	        if (data && (data.length === 3 || data.length === 4)) {
	            data = map(data,
	                function(c) {
	                    return c > 1 ? Math.ceil(c) : c;
	                }
	            );

	            if (format.indexOf('hex') > -1) {
	                return '#' + ((1 << 24) + (data[0] << 16) + (data[1] << 8) + (+data[2])).toString(16).slice(1);
	            }
	            else if (format.indexOf('hs') > -1) {
	                var sx = map(data.slice(1, 3),
	                    function(c) {
	                        return c + '%';
	                    }
	                );
	                data[1] = sx[0];
	                data[2] = sx[1];
	            }

	            if (format.indexOf('a') > -1) {
	                if (data.length === 3) {
	                    data.push(1);
	                }
	                data[3] = adjust(data[3], [ 0, 1 ]);
	                return format + '(' + data.slice(0, 4).join(',') + ')';
	            }

	            return format + '(' + data.slice(0, 3).join(',') + ')';
	        }
	    }

	    /**
	     * 颜色字符串转换为rgba数组
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {Array.<number>} 颜色值数组
	     */
	    function toArray(color) {
	        color = trim(color);
	        if (color.indexOf('rgba') < 0) {
	            color = toRGBA(color);
	        }

	        var data = [];
	        var i = 0;
	        color.replace(/[\d.]+/g, function (n) {
	            if (i < 3) {
	                n = n | 0;
	            }
	            else {
	                // Alpha
	                n = +n;
	            }
	            data[i++] = n;
	        });
	        return data;
	    }

	    /**
	     * 颜色格式转化
	     *
	     * @param {string} color 颜色值数组
	     * @param {string} format 格式,默认rgb
	     * @return {string} 颜色
	     */
	    function convert(color, format) {
	        if (!isCalculableColor(color)) {
	            return color;
	        }
	        var data = getData(color);
	        var alpha = data[3];
	        if (typeof alpha === 'undefined') {
	            alpha = 1;
	        }

	        if (color.indexOf('hsb') > -1) {
	            data = _HSV_2_RGB(data);
	        }
	        else if (color.indexOf('hsl') > -1) {
	            data = _HSL_2_RGB(data);
	        }

	        if (format.indexOf('hsb') > -1 || format.indexOf('hsv') > -1) {
	            data = _RGB_2_HSB(data);
	        }
	        else if (format.indexOf('hsl') > -1) {
	            data = _RGB_2_HSL(data);
	        }

	        data[3] = alpha;

	        return toColor(data, format);
	    }

	    /**
	     * 转换为rgba格式的颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} rgba颜色，rgba(r,g,b,a)
	     */
	    function toRGBA(color) {
	        return convert(color, 'rgba');
	    }

	    /**
	     * 转换为rgb数字格式的颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} rgb颜色，rgb(0,0,0)格式
	     */
	    function toRGB(color) {
	        return convert(color, 'rgb');
	    }

	    /**
	     * 转换为16进制颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} 16进制颜色，#rrggbb格式
	     */
	    function toHex(color) {
	        return convert(color, 'hex');
	    }

	    /**
	     * 转换为HSV颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSVA颜色，hsva(h,s,v,a)
	     */
	    function toHSVA(color) {
	        return convert(color, 'hsva');
	    }

	    /**
	     * 转换为HSV颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSV颜色，hsv(h,s,v)
	     */
	    function toHSV(color) {
	        return convert(color, 'hsv');
	    }

	    /**
	     * 转换为HSBA颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSBA颜色，hsba(h,s,b,a)
	     */
	    function toHSBA(color) {
	        return convert(color, 'hsba');
	    }

	    /**
	     * 转换为HSB颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSB颜色，hsb(h,s,b)
	     */
	    function toHSB(color) {
	        return convert(color, 'hsb');
	    }

	    /**
	     * 转换为HSLA颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSLA颜色，hsla(h,s,l,a)
	     */
	    function toHSLA(color) {
	        return convert(color, 'hsla');
	    }

	    /**
	     * 转换为HSL颜色
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} HSL颜色，hsl(h,s,l)
	     */
	    function toHSL(color) {
	        return convert(color, 'hsl');
	    }

	    /**
	     * 转换颜色名
	     * 
	     * @param {string} color 颜色
	     * @return {string} 颜色名
	     */
	    function toName(color) {
	        for (var key in _nameColors) {
	            if (toHex(_nameColors[key]) === toHex(color)) {
	                return key;
	            }
	        }
	        return null;
	    }

	    /**
	     * 移除颜色中多余空格
	     * 
	     * @param {string} color 颜色
	     * @return {string} 无空格颜色
	     */
	    function trim(color) {
	        return String(color).replace(/\s+/g, '');
	    }

	    /**
	     * 颜色规范化
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} 规范化后的颜色
	     */
	    function normalize(color) {
	        // 颜色名
	        if (_nameColors[color]) {
	            color = _nameColors[color];
	        }
	        // 去掉空格
	        color = trim(color);
	        // hsv与hsb等价
	        color = color.replace(/hsv/i, 'hsb');
	        // rgb转为rrggbb
	        if (/^#[\da-f]{3}$/i.test(color)) {
	            color = parseInt(color.slice(1), 16);
	            var r = (color & 0xf00) << 8;
	            var g = (color & 0xf0) << 4;
	            var b = color & 0xf;

	            color = '#' + ((1 << 24) + (r << 4) + r + (g << 4) + g + (b << 4) + b).toString(16).slice(1);
	        }
	        // 或者使用以下正则替换，不过 chrome 下性能相对差点
	        // color = color.replace(/^#([\da-f])([\da-f])([\da-f])$/i, '#$1$1$2$2$3$3');
	        return color;
	    }

	    /**
	     * 颜色加深或减淡，当level>0加深，当level<0减淡
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @param {number} level 升降程度,取值区间[-1,1]
	     * @return {string} 加深或减淡后颜色值
	     */
	    function lift(color, level) {
	        if (!isCalculableColor(color)) {
	            return color;
	        }
	        var direct = level > 0 ? 1 : -1;
	        if (typeof level === 'undefined') {
	            level = 0;
	        }
	        level = Math.abs(level) > 1 ? 1 : Math.abs(level);
	        color = toRGB(color);
	        var data = getData(color);
	        for (var i = 0; i < 3; i++) {
	            if (direct === 1) {
	                data[i] = data[i] * (1 - level) | 0;
	            }
	            else {
	                data[i] = ((255 - data[i]) * level + data[i]) | 0;
	            }
	        }
	        return 'rgb(' + data.join(',') + ')';
	    }

	    /**
	     * 颜色翻转,[255-r,255-g,255-b,1-a]
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @return {string} 翻转颜色
	     */
	    function reverse(color) {
	        if (!isCalculableColor(color)) {
	            return color;
	        }
	        var data = getData(toRGBA(color));
	        data = map(data,
	            function(c) {
	                return 255 - c;
	            }
	        );
	        return toColor(data, 'rgb');
	    }

	    /**
	     * 简单两种颜色混合
	     * @memberOf module:zrender/tool/color
	     * @param {string} color1 第一种颜色
	     * @param {string} color2 第二种颜色
	     * @param {number} weight 混合权重[0-1]
	     * @return {string} 结果色,rgb(r,g,b)或rgba(r,g,b,a)
	     */
	    function mix(color1, color2, weight) {
	        if (!isCalculableColor(color1) || !isCalculableColor(color2)) {
	            return color1;
	        }
	        
	        if (typeof weight === 'undefined') {
	            weight = 0.5;
	        }
	        weight = 1 - adjust(weight, [ 0, 1 ]);

	        var w = weight * 2 - 1;
	        var data1 = getData(toRGBA(color1));
	        var data2 = getData(toRGBA(color2));

	        var d = data1[3] - data2[3];

	        var weight1 = (((w * d === -1) ? w : (w + d) / (1 + w * d)) + 1) / 2;
	        var weight2 = 1 - weight1;

	        var data = [];

	        for (var i = 0; i < 3; i++) {
	            data[i] = data1[i] * weight1 + data2[i] * weight2;
	        }

	        var alpha = data1[3] * weight + data2[3] * (1 - weight);
	        alpha = Math.max(0, Math.min(1, alpha));

	        if (data1[3] === 1 && data2[3] === 1) {// 不考虑透明度
	            return toColor(data, 'rgb');
	        }
	        data[3] = alpha;
	        return toColor(data, 'rgba');
	    }

	    /**
	     * 随机颜色
	     * 
	     * @return {string} 颜色值，#rrggbb格式
	     */
	    function random() {
	        return '#' + (Math.random().toString(16) + '0000').slice(2, 8);
	    }

	    /**
	     * 获取颜色值数组,返回值范围： <br/>
	     * RGB 范围[0-255] <br/>
	     * HSL/HSV/HSB 范围[0-1]<br/>
	     * A透明度范围[0-1]
	     * 支持格式：
	     * #rgb
	     * #rrggbb
	     * rgb(r,g,b)
	     * rgb(r%,g%,b%)
	     * rgba(r,g,b,a)
	     * hsb(h,s,b) // hsv与hsb等价
	     * hsb(h%,s%,b%)
	     * hsba(h,s,b,a)
	     * hsl(h,s,l)
	     * hsl(h%,s%,l%)
	     * hsla(h,s,l,a)
	     *
	     * @param {string} color 颜色
	     * @return {Array.<number>} 颜色值数组或null
	     */
	    function getData(color) {
	        color = normalize(color);
	        var r = color.match(colorRegExp);
	        if (r === null) {
	            throw new Error('The color format error'); // 颜色格式错误
	        }
	        var d;
	        var a;
	        var data = [];
	        var rgb;

	        if (r[2]) {
	            // #rrggbb
	            d = r[2].replace('#', '').split('');
	            rgb = [ d[0] + d[1], d[2] + d[3], d[4] + d[5] ];
	            data = map(rgb,
	                function(c) {
	                    return adjust(parseInt(c, 16), [ 0, 255 ]);
	                }
	            );

	        }
	        else if (r[4]) {
	            // rgb rgba
	            var rgba = (r[4]).split(',');
	            a = rgba[3];
	            rgb = rgba.slice(0, 3);
	            data = map(
	                rgb,
	                function(c) {
	                    c = Math.floor(
	                        c.indexOf('%') > 0 ? parseInt(c, 0) * 2.55 : c
	                    );
	                    return adjust(c, [ 0, 255 ]);
	                }
	            );

	            if (typeof a !== 'undefined') {
	                data.push(adjust(parseFloat(a), [ 0, 1 ]));
	            }
	        }
	        else if (r[5] || r[6]) {
	            // hsb hsba hsl hsla
	            var hsxa = (r[5] || r[6]).split(',');
	            var h = parseInt(hsxa[0], 0) / 360;
	            var s = hsxa[1];
	            var x = hsxa[2];
	            a = hsxa[3];
	            data = map([ s, x ],
	                function(c) {
	                    return adjust(parseFloat(c) / 100, [ 0, 1 ]);
	                }
	            );
	            data.unshift(h);
	            if (typeof a !== 'undefined') {
	                data.push(adjust(parseFloat(a), [ 0, 1 ]));
	            }
	        }
	        return data;
	    }

	    /**
	     * 设置颜色透明度
	     * @memberOf module:zrender/tool/color
	     * @param {string} color 颜色
	     * @param {number} a 透明度,区间[0,1]
	     * @return {string} rgba颜色值
	     */
	    function alpha(color, a) {
	        if (!isCalculableColor(color)) {
	            return color;
	        }
	        if (a === null) {
	            a = 1;
	        }
	        var data = getData(toRGBA(color));
	        data[3] = adjust(Number(a).toFixed(4), [ 0, 1 ]);

	        return toColor(data, 'rgba');
	    }

	    // 数组映射
	    function map(array, fun) {
	        if (typeof fun !== 'function') {
	            throw new TypeError();
	        }
	        var len = array ? array.length : 0;
	        for (var i = 0; i < len; i++) {
	            array[i] = fun(array[i]);
	        }
	        return array;
	    }

	    // 调整值区间
	    function adjust(value, region) {
	        // < to <= & > to >=
	        // modify by linzhifeng 2014-05-25 because -0 == 0
	        if (value <= region[0]) {
	            value = region[0];
	        }
	        else if (value >= region[1]) {
	            value = region[1];
	        }
	        return value;
	    }
	    
	    function isCalculableColor(color) {
	        return color instanceof Array || typeof color === 'string';
	    }

	    // 参见 http:// www.easyrgb.com/index.php?X=MATH
	    function _HSV_2_RGB(data) {
	        var H = data[0];
	        var S = data[1];
	        var V = data[2];
	        // HSV from 0 to 1
	        var R; 
	        var G;
	        var B;
	        if (S === 0) {
	            R = V * 255;
	            G = V * 255;
	            B = V * 255;
	        }
	        else {
	            var h = H * 6;
	            if (h === 6) {
	                h = 0;
	            }
	            var i = h | 0;
	            var v1 = V * (1 - S);
	            var v2 = V * (1 - S * (h - i));
	            var v3 = V * (1 - S * (1 - (h - i)));
	            var r = 0;
	            var g = 0;
	            var b = 0;

	            if (i === 0) {
	                r = V;
	                g = v3;
	                b = v1;
	            }
	            else if (i === 1) {
	                r = v2;
	                g = V;
	                b = v1;
	            }
	            else if (i === 2) {
	                r = v1;
	                g = V;
	                b = v3;
	            }
	            else if (i === 3) {
	                r = v1;
	                g = v2;
	                b = V;
	            }
	            else if (i === 4) {
	                r = v3;
	                g = v1;
	                b = V;
	            }
	            else {
	                r = V;
	                g = v1;
	                b = v2;
	            }

	            // RGB results from 0 to 255
	            R = r * 255;
	            G = g * 255;
	            B = b * 255;
	        }
	        return [ R, G, B ];
	    }

	    function _HSL_2_RGB(data) {
	        var H = data[0];
	        var S = data[1];
	        var L = data[2];
	        // HSL from 0 to 1
	        var R;
	        var G;
	        var B;
	        if (S === 0) {
	            R = L * 255;
	            G = L * 255;
	            B = L * 255;
	        }
	        else {
	            var v2;
	            if (L < 0.5) {
	                v2 = L * (1 + S);
	            }
	            else {
	                v2 = (L + S) - (S * L);
	            }

	            var v1 = 2 * L - v2;

	            R = 255 * _HUE_2_RGB(v1, v2, H + (1 / 3));
	            G = 255 * _HUE_2_RGB(v1, v2, H);
	            B = 255 * _HUE_2_RGB(v1, v2, H - (1 / 3));
	        }
	        return [ R, G, B ];
	    }

	    function _HUE_2_RGB(v1, v2, vH) {
	        if (vH < 0) {
	            vH += 1;
	        }
	        if (vH > 1) {
	            vH -= 1;
	        }
	        if ((6 * vH) < 1) {
	            return (v1 + (v2 - v1) * 6 * vH);
	        }
	        if ((2 * vH) < 1) {
	            return (v2);
	        }
	        if ((3 * vH) < 2) {
	            return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);
	        }
	        return v1;
	    }

	    function _RGB_2_HSB(data) {
	        // RGB from 0 to 255
	        var R = (data[0] / 255);
	        var G = (data[1] / 255);
	        var B = (data[2] / 255);

	        var vMin = Math.min(R, G, B); // Min. value of RGB
	        var vMax = Math.max(R, G, B); // Max. value of RGB
	        var delta = vMax - vMin; // Delta RGB value
	        var V = vMax;
	        var H;
	        var S;

	        // HSV results from 0 to 1
	        if (delta === 0) {
	            H = 0;
	            S = 0;
	        }
	        else {
	            S = delta / vMax;

	            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;
	            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;
	            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;

	            if (R === vMax) {
	                H = deltaB - deltaG;
	            }
	            else if (G === vMax) {
	                H = (1 / 3) + deltaR - deltaB;
	            }
	            else if (B === vMax) {
	                H = (2 / 3) + deltaG - deltaR;
	            }

	            if (H < 0) {
	                H += 1;
	            }
	            if (H > 1) {
	                H -= 1;
	            }
	        }
	        H = H * 360;
	        S = S * 100;
	        V = V * 100;
	        return [ H, S, V ];
	    }

	    function _RGB_2_HSL(data) {
	        // RGB from 0 to 255
	        var R = (data[0] / 255);
	        var G = (data[1] / 255);
	        var B = (data[2] / 255);

	        var vMin = Math.min(R, G, B); // Min. value of RGB
	        var vMax = Math.max(R, G, B); // Max. value of RGB
	        var delta = vMax - vMin; // Delta RGB value

	        var L = (vMax + vMin) / 2;
	        var H;
	        var S;
	        // HSL results from 0 to 1
	        if (delta === 0) {
	            H = 0;
	            S = 0;
	        }
	        else {
	            if (L < 0.5) {
	                S = delta / (vMax + vMin);
	            }
	            else {
	                S = delta / (2 - vMax - vMin);
	            }

	            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;
	            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;
	            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;

	            if (R === vMax) {
	                H = deltaB - deltaG;
	            }
	            else if (G === vMax) {
	                H = (1 / 3) + deltaR - deltaB;
	            }
	            else if (B === vMax) {
	                H = (2 / 3) + deltaG - deltaR;
	            }

	            if (H < 0) {
	                H += 1;
	            }

	            if (H > 1) {
	                H -= 1;
	            }
	        }

	        H = H * 360;
	        S = S * 100;
	        L = L * 100;

	        return [ H, S, L ];
	    }

	    return {
	        customPalette : customPalette,
	        resetPalette : resetPalette,
	        getColor : getColor,
	        getHighlightColor : getHighlightColor,
	        customHighlight : customHighlight,
	        resetHighlight : resetHighlight,
	        getRadialGradient : getRadialGradient,
	        getLinearGradient : getLinearGradient,
	        getGradientColors : getGradientColors,
	        getStepColors : getStepColors,
	        reverse : reverse,
	        mix : mix,
	        lift : lift,
	        trim : trim,
	        random : random,
	        toRGB : toRGB,
	        toRGBA : toRGBA,
	        toHex : toHex,
	        toHSL : toHSL,
	        toHSLA : toHSLA,
	        toHSB : toHSB,
	        toHSBA : toHSBA,
	        toHSV : toHSV,
	        toHSVA : toHSVA,
	        toName : toName,
	        toColor : toColor,
	        toArray : toArray,
	        alpha : alpha,
	        getData : getData
	    };
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));



/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 事件辅助类
	 * @module zrender/tool/event
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {

	        'use strict';

	        var Eventful = __webpack_require__(52);

	        /**
	        * 提取鼠标（手指）x坐标
	        * @memberOf module:zrender/tool/event
	        * @param  {Event} e 事件.
	        * @return {number} 鼠标（手指）x坐标.
	        */
	        function getX(e) {
	            return typeof e.zrenderX != 'undefined' && e.zrenderX
	                   || typeof e.offsetX != 'undefined' && e.offsetX
	                   || typeof e.layerX != 'undefined' && e.layerX
	                   || typeof e.clientX != 'undefined' && e.clientX;
	        }

	        /**
	        * 提取鼠标y坐标
	        * @memberOf module:zrender/tool/event
	        * @param  {Event} e 事件.
	        * @return {number} 鼠标（手指）y坐标.
	        */
	        function getY(e) {
	            return typeof e.zrenderY != 'undefined' && e.zrenderY
	                   || typeof e.offsetY != 'undefined' && e.offsetY
	                   || typeof e.layerY != 'undefined' && e.layerY
	                   || typeof e.clientY != 'undefined' && e.clientY;
	        }

	        /**
	        * 提取鼠标滚轮变化
	        * @memberOf module:zrender/tool/event
	        * @param  {Event} e 事件.
	        * @return {number} 滚轮变化，正值说明滚轮是向上滚动，如果是负值说明滚轮是向下滚动
	        */
	        function getDelta(e) {
	            return typeof e.zrenderDelta != 'undefined' && e.zrenderDelta
	                   || typeof e.wheelDelta != 'undefined' && e.wheelDelta
	                   || typeof e.detail != 'undefined' && -e.detail;
	        }

	        /**
	         * 停止冒泡和阻止默认行为
	         * @memberOf module:zrender/tool/event
	         * @method
	         * @param {Event} e : event对象
	         */
	        var stop = typeof window.addEventListener === 'function'
	            ? function (e) {
	                e.preventDefault();
	                e.stopPropagation();
	                e.cancelBubble = true;
	            }
	            : function (e) {
	                e.returnValue = false;
	                e.cancelBubble = true;
	            };
	        
	        return {
	            getX : getX,
	            getY : getY,
	            getDelta : getDelta,
	            stop : stop,
	            // 做向上兼容
	            Dispatcher : Eventful
	        };
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(60),__webpack_require__(61),__webpack_require__(62)], __WEBPACK_AMD_DEFINE_RESULT__ = function (login,regester,success) {
	    return function (inside) {
	        var tmpl 
	        if (inside == 'login'){
	            tmpl = "<div class='m-login-and-regester'>" + login + "</div>";
	        }else if (inside == 'regester'){
	            tmpl = "<div class='m-login-and-regester'>" + regester + "</div>";
	        }else if (inside == 'success'){
	            tmpl = "<div class='m-login-and-regester'>" + success + "</div>";
	        }
	        return tmpl;
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(9),__webpack_require__(2),__webpack_require__(45),__webpack_require__(26),__webpack_require__(63),__webpack_require__(14),__webpack_require__(47),__webpack_require__(48),__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require,handlebar,ajax,logWindow_tmp,login,success,iva_alert,validator,flash,$) {
	    return function (container,callback,close_callback) {
	        if (!$('.m-login-and-regester').length){
	            var $regester = $(handlebar.compile(logWindow_tmp('regester'))());
	            container.before($regester);
	            $regester.hide();
	            $regester.fadeIn(300);
	            $exit = $regester.find('.exit')
	            $input_box = $regester.find('.input-box')
	            $account_input = $regester.find('.account-input');
	            $name_input = $regester.find('.name-input');
	            $passwd_input = $regester.find('.passwd-input');
	            $regester_button = $regester.find('.regester-button');
	            $login = $regester.find('.login')
	            $exit.click(function(){
	                $('.m-login-and-regester').fadeOut(300,function(){
	                    $(this).remove();
	                    if (close_callback)
	                        close_callback();
	                });
	            });
	            $input_box.focus(function(){
	                $(this).parent().find('.input-icon').addClass('input-icon-focus')
	            });
	            $input_box.blur(function(){
	                $(this).parent().find('.input-icon').removeClass('input-icon-focus')
	            });
	            $regester_button.click(function(){
	                pack = {
	                    mail: $account_input.val(),
	                    pwd: $passwd_input.val()
	                }
	                if (pack.mail == ''){
	                    iva_alert(container,'邮箱或密码不能为空');
	                    flash('.account-input',8,10,100);
	                }else if (!(validator.isEmail(pack.mail))){
	                    iva_alert(container,'邮箱格式错误');
	                    flash('.account-input',8,10,100);
	                }
	                if (pack.pwd == ''){
	                    iva_alert(container,'邮箱或密码不能为空');
	                    flash('.passwd-input',8,10,100);
	                }else if(pack.pwd.length < 6 || pack.pwd.length > 30){
	                    iva_alert(container,'密码长度应在6-30位之间');
	                    flash('.passwd-input',8,10,100);
	                }
	                if (pack.mail != '' && validator.isEmail(pack.mail) && pack.pwd != '' && (pack.pwd.length >= 6 || pack.pwd.length <= 30)){
	                    ajax('/sign/signupMail', 'POST', pack
	                    , function (data) {
	                        if(data.status == 0){
	                            $regester.remove();
	                            success(container,data.msg.avatar,data.msg.mail,data.msg._id);
	                        }else if (data.status == 500) {
	                            iva_alert(container,'邮箱已存在');
	                        }
	                    });
	                }
	            });

	            $login.click(function(){
	                $regester.fadeOut(300,function(){
	                    $regester.remove();
	                    __webpack_require__(26)(container);
	                });
	            });
	        }else{
	            $('.m-login-and-regester').fadeOut(300,function(){
	                $(this).remove();
	                if (close_callback)
	                    close_callback();
	            });
	        }
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * "Software"), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
	 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
	 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 */

	(function (name, definition) {
	    if (true) {
	        module.exports = definition();
	    } else if (typeof define === 'function' && typeof define.amd === 'object') {
	        define(definition);
	    } else {
	        this[name] = definition();
	    }
	})('validator', function (validator) {

	    'use strict';

	    validator = { version: '3.40.0' };

	    var emailUser = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e])|(\\[\x01-\x09\x0b\x0c\x0d-\x7f])))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i;

	    var emailUserUtf8 = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i;

	    var displayName = /^(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\s)*<(.+)>$/i;

	    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;

	    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

	    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/
	      , isbn13Maybe = /^(?:[0-9]{13})$/;

	    var ipv4Maybe = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/
	      , ipv6Block = /^[0-9A-F]{1,4}$/i;

	    var uuid = {
	        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i
	      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
	      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
	      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
	    };

	    var alpha = /^[A-Z]+$/i
	      , alphanumeric = /^[0-9A-Z]+$/i
	      , numeric = /^[-+]?[0-9]+$/
	      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/
	      , float = /^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/
	      , hexadecimal = /^[0-9A-F]+$/i
	      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

	    var ascii = /^[\x00-\x7F]+$/
	      , multibyte = /[^\x00-\x7F]/
	      , fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/
	      , halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

	    var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

	    var base64 = /^(?:[A-Z0-9+\/]{4})*(?:[A-Z0-9+\/]{2}==|[A-Z0-9+\/]{3}=|[A-Z0-9+\/]{4})$/i;

	    var phones = {
	      'zh-CN': /^(\+?0?86\-?)?1[345789]\d{9}$/,
	      'en-ZA': /^(\+?27|0)\d{9}$/,
	      'en-AU': /^(\+?61|0)4\d{8}$/,
	      'en-HK': /^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,
	      'fr-FR': /^(\+?33|0)[67]\d{8}$/,
	      'pt-PT': /^(\+351)?9[1236]\d{7}$/,
	      'el-GR': /^(\+30)?((2\d{9})|(69\d{8}))$/,
	      'en-GB': /^(\+?44|0)7\d{9}$/,
	      'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
	      'en-ZM': /^(\+26)?09[567]\d{7}$/
	    };

	    validator.extend = function (name, fn) {
	        validator[name] = function () {
	            var args = Array.prototype.slice.call(arguments);
	            args[0] = validator.toString(args[0]);
	            return fn.apply(validator, args);
	        };
	    };

	    //Right before exporting the validator object, pass each of the builtins
	    //through extend() so that their first argument is coerced to a string
	    validator.init = function () {
	        for (var name in validator) {
	            if (typeof validator[name] !== 'function' || name === 'toString' ||
	                    name === 'toDate' || name === 'extend' || name === 'init') {
	                continue;
	            }
	            validator.extend(name, validator[name]);
	        }
	    };

	    validator.toString = function (input) {
	        if (typeof input === 'object' && input !== null && input.toString) {
	            input = input.toString();
	        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {
	            input = '';
	        } else if (typeof input !== 'string') {
	            input += '';
	        }
	        return input;
	    };

	    validator.toDate = function (date) {
	        if (Object.prototype.toString.call(date) === '[object Date]') {
	            return date;
	        }
	        date = Date.parse(date);
	        return !isNaN(date) ? new Date(date) : null;
	    };

	    validator.toFloat = function (str) {
	        return parseFloat(str);
	    };

	    validator.toInt = function (str, radix) {
	        return parseInt(str, radix || 10);
	    };

	    validator.toBoolean = function (str, strict) {
	        if (strict) {
	            return str === '1' || str === 'true';
	        }
	        return str !== '0' && str !== 'false' && str !== '';
	    };

	    validator.equals = function (str, comparison) {
	        return str === validator.toString(comparison);
	    };

	    validator.contains = function (str, elem) {
	        return str.indexOf(validator.toString(elem)) >= 0;
	    };

	    validator.matches = function (str, pattern, modifiers) {
	        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
	            pattern = new RegExp(pattern, modifiers);
	        }
	        return pattern.test(str);
	    };

	    var default_email_options = {
	        allow_display_name: false,
	        allow_utf8_local_part: true,
	        require_tld: true
	    };

	    validator.isEmail = function (str, options) {
	        options = merge(options, default_email_options);

	        if (options.allow_display_name) {
	            var display_email = str.match(displayName);
	            if (display_email) {
	                str = display_email[1];
	            }
	        } else if (/\s/.test(str)) {
	            return false;
	        }

	        var parts = str.split('@')
	          , domain = parts.pop()
	          , user = parts.join('@');

	        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {
	            return false;
	        }

	        return options.allow_utf8_local_part ?
	            emailUserUtf8.test(user) :
	            emailUser.test(user);
	    };

	    var default_url_options = {
	        protocols: [ 'http', 'https', 'ftp' ]
	      , require_tld: true
	      , require_protocol: false
	      , allow_underscores: false
	      , allow_trailing_dot: false
	      , allow_protocol_relative_urls: false
	    };

	    validator.isURL = function (url, options) {
	        if (!url || url.length >= 2083 || /\s/.test(url)) {
	            return false;
	        }
	        if (url.indexOf('mailto:') === 0) {
	            return false;
	        }
	        options = merge(options, default_url_options);
	        var protocol, auth, host, hostname, port,
	            port_str, split;
	        split = url.split('://');
	        if (split.length > 1) {
	            protocol = split.shift();
	            if (options.protocols.indexOf(protocol) === -1) {
	                return false;
	            }
	        } else if (options.require_protocol) {
	            return false;
	        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
	            split[0] = url.substr(2);
	        }
	        url = split.join('://');
	        split = url.split('#');
	        url = split.shift();

	        split = url.split('?');
	        url = split.shift();

	        split = url.split('/');
	        url = split.shift();
	        split = url.split('@');
	        if (split.length > 1) {
	            auth = split.shift();
	            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
	                return false;
	            }
	        }
	        hostname = split.join('@');
	        split = hostname.split(':');
	        host = split.shift();
	        if (split.length) {
	            port_str = split.join(':');
	            port = parseInt(port_str, 10);
	            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
	                return false;
	            }
	        }
	        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&
	                host !== 'localhost') {
	            return false;
	        }
	        if (options.host_whitelist &&
	                options.host_whitelist.indexOf(host) === -1) {
	            return false;
	        }
	        if (options.host_blacklist &&
	                options.host_blacklist.indexOf(host) !== -1) {
	            return false;
	        }
	        return true;
	    };

	    validator.isIP = function (str, version) {
	        version = validator.toString(version);
	        if (!version) {
	            return validator.isIP(str, 4) || validator.isIP(str, 6);
	        } else if (version === '4') {
	            if (!ipv4Maybe.test(str)) {
	                return false;
	            }
	            var parts = str.split('.').sort(function (a, b) {
	                return a - b;
	            });
	            return parts[3] <= 255;
	        } else if (version === '6') {
	            var blocks = str.split(':');
	            var foundOmissionBlock = false; // marker to indicate ::

	            if (blocks.length > 8)
	                return false;

	            // initial or final ::
	            if (str === '::') {
	                return true;
	            } else if (str.substr(0, 2) === '::') {
	                blocks.shift();
	                blocks.shift();
	                foundOmissionBlock = true;
	            } else if (str.substr(str.length - 2) === '::') {
	                blocks.pop();
	                blocks.pop();
	                foundOmissionBlock = true;
	            }

	            for (var i = 0; i < blocks.length; ++i) {
	                // test for a :: which can not be at the string start/end
	                // since those cases have been handled above
	                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {
	                    if (foundOmissionBlock)
	                        return false; // multiple :: in address
	                    foundOmissionBlock = true;
	                } else if (!ipv6Block.test(blocks[i])) {
	                    return false;
	                }
	            }

	            if (foundOmissionBlock) {
	                return blocks.length >= 1;
	            } else {
	                return blocks.length === 8;
	            }
	        }
	        return false;
	    };

	    var default_fqdn_options = {
	        require_tld: true
	      , allow_underscores: false
	      , allow_trailing_dot: false
	    };

	    validator.isFQDN = function (str, options) {
	        options = merge(options, default_fqdn_options);

	        /* Remove the optional trailing dot before checking validity */
	        if (options.allow_trailing_dot && str[str.length - 1] === '.') {
	            str = str.substring(0, str.length - 1);
	        }
	        var parts = str.split('.');
	        if (options.require_tld) {
	            var tld = parts.pop();
	            if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
	                return false;
	            }
	        }
	        for (var part, i = 0; i < parts.length; i++) {
	            part = parts[i];
	            if (options.allow_underscores) {
	                if (part.indexOf('__') >= 0) {
	                    return false;
	                }
	                part = part.replace(/_/g, '');
	            }
	            if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
	                return false;
	            }
	            if (part[0] === '-' || part[part.length - 1] === '-' ||
	                    part.indexOf('---') >= 0) {
	                return false;
	            }
	        }
	        return true;
	    };

	    validator.isBoolean = function(str) {
	        return (['true', 'false', '1', '0'].indexOf(str) >= 0);
	    };

	    validator.isAlpha = function (str) {
	        return alpha.test(str);
	    };

	    validator.isAlphanumeric = function (str) {
	        return alphanumeric.test(str);
	    };

	    validator.isNumeric = function (str) {
	        return numeric.test(str);
	    };

	    validator.isHexadecimal = function (str) {
	        return hexadecimal.test(str);
	    };

	    validator.isHexColor = function (str) {
	        return hexcolor.test(str);
	    };

	    validator.isLowercase = function (str) {
	        return str === str.toLowerCase();
	    };

	    validator.isUppercase = function (str) {
	        return str === str.toUpperCase();
	    };

	    validator.isInt = function (str, options) {
	        options = options || {};
	        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
	    };

	    validator.isFloat = function (str, options) {
	        options = options || {};
	        return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
	    };

	    validator.isDivisibleBy = function (str, num) {
	        return validator.toFloat(str) % validator.toInt(num) === 0;
	    };

	    validator.isNull = function (str) {
	        return str.length === 0;
	    };

	    validator.isLength = function (str, min, max) {
	        var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
	        var len = str.length - surrogatePairs.length;
	        return len >= min && (typeof max === 'undefined' || len <= max);
	    };

	    validator.isByteLength = function (str, min, max) {
	        return str.length >= min && (typeof max === 'undefined' || str.length <= max);
	    };

	    validator.isUUID = function (str, version) {
	        var pattern = uuid[version ? version : 'all'];
	        return pattern && pattern.test(str);
	    };

	    validator.isDate = function (str) {
	        return !isNaN(Date.parse(str));
	    };

	    validator.isAfter = function (str, date) {
	        var comparison = validator.toDate(date || new Date())
	          , original = validator.toDate(str);
	        return !!(original && comparison && original > comparison);
	    };

	    validator.isBefore = function (str, date) {
	        var comparison = validator.toDate(date || new Date())
	          , original = validator.toDate(str);
	        return original && comparison && original < comparison;
	    };

	    validator.isIn = function (str, options) {
	        var i;
	        if (Object.prototype.toString.call(options) === '[object Array]') {
	            var array = [];
	            for (i in options) {
	                array[i] = validator.toString(options[i]);
	            }
	            return array.indexOf(str) >= 0;
	        } else if (typeof options === 'object') {
	            return options.hasOwnProperty(str);
	        } else if (options && typeof options.indexOf === 'function') {
	            return options.indexOf(str) >= 0;
	        }
	        return false;
	    };

	    validator.isCreditCard = function (str) {
	        var sanitized = str.replace(/[^0-9]+/g, '');
	        if (!creditCard.test(sanitized)) {
	            return false;
	        }
	        var sum = 0, digit, tmpNum, shouldDouble;
	        for (var i = sanitized.length - 1; i >= 0; i--) {
	            digit = sanitized.substring(i, (i + 1));
	            tmpNum = parseInt(digit, 10);
	            if (shouldDouble) {
	                tmpNum *= 2;
	                if (tmpNum >= 10) {
	                    sum += ((tmpNum % 10) + 1);
	                } else {
	                    sum += tmpNum;
	                }
	            } else {
	                sum += tmpNum;
	            }
	            shouldDouble = !shouldDouble;
	        }
	        return !!((sum % 10) === 0 ? sanitized : false);
	    };

	    validator.isISIN = function (str) {
	        if (!isin.test(str)) {
	            return false;
	        }

	        var checksumStr = str.replace(/[A-Z]/g, function(character) {
	            return parseInt(character, 36);
	        });

	        var sum = 0, digit, tmpNum, shouldDouble = true;
	        for (var i = checksumStr.length - 2; i >= 0; i--) {
	            digit = checksumStr.substring(i, (i + 1));
	            tmpNum = parseInt(digit, 10);
	            if (shouldDouble) {
	                tmpNum *= 2;
	                if (tmpNum >= 10) {
	                    sum += tmpNum + 1;
	                } else {
	                    sum += tmpNum;
	                }
	            } else {
	                sum += tmpNum;
	            }
	            shouldDouble = !shouldDouble;
	        }

	        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
	    };

	    validator.isISBN = function (str, version) {
	        version = validator.toString(version);
	        if (!version) {
	            return validator.isISBN(str, 10) || validator.isISBN(str, 13);
	        }
	        var sanitized = str.replace(/[\s-]+/g, '')
	          , checksum = 0, i;
	        if (version === '10') {
	            if (!isbn10Maybe.test(sanitized)) {
	                return false;
	            }
	            for (i = 0; i < 9; i++) {
	                checksum += (i + 1) * sanitized.charAt(i);
	            }
	            if (sanitized.charAt(9) === 'X') {
	                checksum += 10 * 10;
	            } else {
	                checksum += 10 * sanitized.charAt(9);
	            }
	            if ((checksum % 11) === 0) {
	                return !!sanitized;
	            }
	        } else  if (version === '13') {
	            if (!isbn13Maybe.test(sanitized)) {
	                return false;
	            }
	            var factor = [ 1, 3 ];
	            for (i = 0; i < 12; i++) {
	                checksum += factor[i % 2] * sanitized.charAt(i);
	            }
	            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {
	                return !!sanitized;
	            }
	        }
	        return false;
	    };

	    validator.isMobilePhone = function(str, locale) {
	        if (locale in phones) {
	            return phones[locale].test(str);
	        }
	        return false;
	    };

	    var default_currency_options = {
	        symbol: '$'
	      , require_symbol: false
	      , allow_space_after_symbol: false
	      , symbol_after_digits: false
	      , allow_negatives: true
	      , parens_for_negatives: false
	      , negative_sign_before_digits: false
	      , negative_sign_after_digits: false
	      , allow_negative_sign_placeholder: false
	      , thousands_separator: ','
	      , decimal_separator: '.'
	      , allow_space_after_digits: false
	    };

	    validator.isCurrency = function (str, options) {
	        options = merge(options, default_currency_options);

	        return currencyRegex(options).test(str);
	    };

	    validator.isJSON = function (str) {
	        try {
	            JSON.parse(str);
	        } catch (e) {
	            return false;
	        }
	        return true;
	    };

	    validator.isMultibyte = function (str) {
	        return multibyte.test(str);
	    };

	    validator.isAscii = function (str) {
	        return ascii.test(str);
	    };

	    validator.isFullWidth = function (str) {
	        return fullWidth.test(str);
	    };

	    validator.isHalfWidth = function (str) {
	        return halfWidth.test(str);
	    };

	    validator.isVariableWidth = function (str) {
	        return fullWidth.test(str) && halfWidth.test(str);
	    };

	    validator.isSurrogatePair = function (str) {
	        return surrogatePair.test(str);
	    };

	    validator.isBase64 = function (str) {
	        return base64.test(str);
	    };

	    validator.isMongoId = function (str) {
	        return validator.isHexadecimal(str) && str.length === 24;
	    };

	    validator.ltrim = function (str, chars) {
	        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
	        return str.replace(pattern, '');
	    };

	    validator.rtrim = function (str, chars) {
	        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\s+$/g;
	        return str.replace(pattern, '');
	    };

	    validator.trim = function (str, chars) {
	        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\s+|\s+$/g;
	        return str.replace(pattern, '');
	    };

	    validator.escape = function (str) {
	        return (str.replace(/&/g, '&amp;')
	            .replace(/"/g, '&quot;')
	            .replace(/'/g, '&#x27;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;')
	            .replace(/\//g, '&#x2F;')
	            .replace(/\`/g, '&#96;'));
	    };

	    validator.stripLow = function (str, keep_new_lines) {
	        var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
	        return validator.blacklist(str, chars);
	    };

	    validator.whitelist = function (str, chars) {
	        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
	    };

	    validator.blacklist = function (str, chars) {
	        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
	    };

	    var default_normalize_email_options = {
	        lowercase: true
	    };

	    validator.normalizeEmail = function (email, options) {
	        options = merge(options, default_normalize_email_options);
	        if (!validator.isEmail(email)) {
	            return false;
	        }
	        var parts = email.split('@', 2);
	        parts[1] = parts[1].toLowerCase();
	        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
	            parts[0] = parts[0].toLowerCase().replace(/\./g, '');
	            if (parts[0][0] === '+') {
	                return false;
	            }
	            parts[0] = parts[0].split('+')[0];
	            parts[1] = 'gmail.com';
	        } else if (options.lowercase) {
	            parts[0] = parts[0].toLowerCase();
	        }
	        return parts.join('@');
	    };

	    function merge(obj, defaults) {
	        obj = obj || {};
	        for (var key in defaults) {
	            if (typeof obj[key] === 'undefined') {
	                obj[key] = defaults[key];
	            }
	        }
	        return obj;
	    }

	    function currencyRegex(options) {
	        var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?')
	            , negative = '-?'
	            , whole_dollar_amount_without_sep = '[1-9]\\d*'
	            , whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*'
	            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]
	            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'
	            , decimal_amount = '(\\' + options.decimal_separator + '\\d{2})?';
	        var pattern = whole_dollar_amount + decimal_amount;
	        // default is negative sign before symbol, but there are two other options (besides parens)
	        if (options.allow_negatives && !options.parens_for_negatives) {
	            if (options.negative_sign_after_digits) {
	                pattern += negative;
	            }
	            else if (options.negative_sign_before_digits) {
	                pattern = negative + pattern;
	            }
	        }
	        // South African Rand, for example, uses R 123 (space) and R-123 (no space)
	        if (options.allow_negative_sign_placeholder) {
	            pattern = '( (?!\\-))?' + pattern;
	        }
	        else if (options.allow_space_after_symbol) {
	            pattern = ' ?' + pattern;
	        }
	        else if (options.allow_space_after_digits) {
	            pattern += '( (?!$))?';
	        }
	        if (options.symbol_after_digits) {
	            pattern += symbol;
	        } else {
	            pattern = symbol + pattern;
	        }
	        if (options.allow_negatives) {
	            if (options.parens_for_negatives) {
	                pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
	            }
	            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
	                pattern = negative + pattern;
	            }
	        }
	        return new RegExp(
	            '^' +
	            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space
	            '(?!-? )(?=.*\\d)' +
	            pattern +
	            '$'
	        );
	    }

	    validator.init();

	    return validator;

	});


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($) {
		return function (obj,time,wh,fx){ 
	            $(function(){
	            var $panel = $(obj);
	            if($panel.attr('is_shake') != 'true'){
	                $panel.attr('is_shake','true');
	                var offset = $panel.offset()-$panel.width();
	                var x= offset.left;
	                var y= offset.top;
	                setTimeout(function(){
	                    $panel.attr('is_shake','false')
	                },time * fx);
	                for(var i=1; i<=time; i++){
	                    if(i%2==0)
	                    {
	                        $panel.animate({left:'51%'},fx);
	                    }else
	                    {
	                        $panel.animate({left:'49%'},fx);
	                    }
	                        
	                }
	                $panel.animate({left:'50%'},fx);
	                $panel.offset({ top: y, left: x });
	            }
	                
	        })
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    /**
	     * config默认配置项
	     * @exports zrender/config
	     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	     */
	    var config = {
	        /**
	         * @namespace module:zrender/config.EVENT
	         */
	        EVENT : {
	            /**
	             * 窗口大小变化
	             * @type {string}
	             */
	            RESIZE : 'resize',
	            /**
	             * 鼠标按钮被（手指）按下，事件对象是：目标图形元素或空
	             * @type {string}
	             */
	            CLICK : 'click',
	            /**
	             * 双击事件
	             * @type {string}
	             */
	            DBLCLICK : 'dblclick',
	            /**
	             * 鼠标滚轮变化，事件对象是：目标图形元素或空
	             * @type {string}
	             */
	            MOUSEWHEEL : 'mousewheel',
	            /**
	             * 鼠标（手指）被移动，事件对象是：目标图形元素或空
	             * @type {string}
	             */
	            MOUSEMOVE : 'mousemove',
	            /**
	             * 鼠标移到某图形元素之上，事件对象是：目标图形元素
	             * @type {string}
	             */
	            MOUSEOVER : 'mouseover',
	            /**
	             * 鼠标从某图形元素移开，事件对象是：目标图形元素
	             * @type {string}
	             */
	            MOUSEOUT : 'mouseout',
	            /**
	             * 鼠标按钮（手指）被按下，事件对象是：目标图形元素或空
	             * @type {string}
	             */
	            MOUSEDOWN : 'mousedown',
	            /**
	             * 鼠标按键（手指）被松开，事件对象是：目标图形元素或空
	             * @type {string}
	             */
	            MOUSEUP : 'mouseup',
	            /**
	             * 全局离开，MOUSEOUT触发比较频繁，一次离开优化绑定
	             * @type {string}
	             */
	            GLOBALOUT : 'globalout',    // 

	            // 一次成功元素拖拽的行为事件过程是：
	            // dragstart > dragenter > dragover [> dragleave] > drop > dragend
	            /**
	             * 开始拖拽时触发，事件对象是：被拖拽图形元素
	             * @type {string}
	             */
	            DRAGSTART : 'dragstart',
	            /**
	             * 拖拽完毕时触发（在drop之后触发），事件对象是：被拖拽图形元素
	             * @type {string}
	             */
	            DRAGEND : 'dragend',
	            /**
	             * 拖拽图形元素进入目标图形元素时触发，事件对象是：目标图形元素
	             * @type {string}
	             */
	            DRAGENTER : 'dragenter',
	            /**
	             * 拖拽图形元素在目标图形元素上移动时触发，事件对象是：目标图形元素
	             * @type {string}
	             */
	            DRAGOVER : 'dragover',
	            /**
	             * 拖拽图形元素离开目标图形元素时触发，事件对象是：目标图形元素
	             * @type {string}
	             */
	            DRAGLEAVE : 'dragleave',
	            /**
	             * 拖拽图形元素放在目标图形元素内时触发，事件对象是：目标图形元素
	             * @type {string}
	             */
	            DROP : 'drop',
	            /**
	             * touch end - start < delay is click
	             * @type {number}
	             */
	            touchClickDelay : 300
	        },

	        // 是否异常捕获
	        catchBrushException: false,

	        /**
	         * debug日志选项：catchBrushException为true下有效
	         * 0 : 不生成debug数据，发布用
	         * 1 : 异常抛出，调试用
	         * 2 : 控制台输出，调试用
	         */
	        debugMode: 0,

	        // retina 屏幕优化
	        devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)
	    };
	    return config;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));



/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	        var ArrayCtor = typeof Float32Array === 'undefined'
	            ? Array
	            : Float32Array;

	        /**
	         * @typedef {Float32Array|Array.<number>} Vector2
	         */
	        /**
	         * 二维向量类
	         * @exports zrender/tool/vector
	         */
	        var vector = {
	            /**
	             * 创建一个向量
	             * @param {number} [x=0]
	             * @param {number} [y=0]
	             * @return {Vector2}
	             */
	            create: function (x, y) {
	                var out = new ArrayCtor(2);
	                out[0] = x || 0;
	                out[1] = y || 0;
	                return out;
	            },

	            /**
	             * 复制向量数据
	             * @param {Vector2} out
	             * @param {Vector2} v
	             * @return {Vector2}
	             */
	            copy: function (out, v) {
	                out[0] = v[0];
	                out[1] = v[1];
	                return out;
	            },

	            /**
	             * 克隆一个向量
	             * @param {Vector2} v
	             * @return {Vector2}
	             */
	            clone: function (v) {
	                var out = new ArrayCtor(2);
	                out[0] = v[0];
	                out[1] = v[1];
	                return out;
	            },

	            /**
	             * 设置向量的两个项
	             * @param {Vector2} out
	             * @param {number} a
	             * @param {number} b
	             * @return {Vector2} 结果
	             */
	            set: function (out, a, b) {
	                out[0] = a;
	                out[1] = b;
	                return out;
	            },

	            /**
	             * 向量相加
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             */
	            add: function (out, v1, v2) {
	                out[0] = v1[0] + v2[0];
	                out[1] = v1[1] + v2[1];
	                return out;
	            },

	            /**
	             * 向量缩放后相加
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             * @param {number} a
	             */
	            scaleAndAdd: function (out, v1, v2, a) {
	                out[0] = v1[0] + v2[0] * a;
	                out[1] = v1[1] + v2[1] * a;
	                return out;
	            },

	            /**
	             * 向量相减
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             */
	            sub: function (out, v1, v2) {
	                out[0] = v1[0] - v2[0];
	                out[1] = v1[1] - v2[1];
	                return out;
	            },

	            /**
	             * 向量长度
	             * @param {Vector2} v
	             * @return {number}
	             */
	            len: function (v) {
	                return Math.sqrt(this.lenSquare(v));
	            },

	            /**
	             * 向量长度平方
	             * @param {Vector2} v
	             * @return {number}
	             */
	            lenSquare: function (v) {
	                return v[0] * v[0] + v[1] * v[1];
	            },

	            /**
	             * 向量乘法
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             */
	            mul: function (out, v1, v2) {
	                out[0] = v1[0] * v2[0];
	                out[1] = v1[1] * v2[1];
	                return out;
	            },

	            /**
	             * 向量除法
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             */
	            div: function (out, v1, v2) {
	                out[0] = v1[0] / v2[0];
	                out[1] = v1[1] / v2[1];
	                return out;
	            },

	            /**
	             * 向量点乘
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             * @return {number}
	             */
	            dot: function (v1, v2) {
	                return v1[0] * v2[0] + v1[1] * v2[1];
	            },

	            /**
	             * 向量缩放
	             * @param {Vector2} out
	             * @param {Vector2} v
	             * @param {number} s
	             */
	            scale: function (out, v, s) {
	                out[0] = v[0] * s;
	                out[1] = v[1] * s;
	                return out;
	            },

	            /**
	             * 向量归一化
	             * @param {Vector2} out
	             * @param {Vector2} v
	             */
	            normalize: function (out, v) {
	                var d = vector.len(v);
	                if (d === 0) {
	                    out[0] = 0;
	                    out[1] = 0;
	                }
	                else {
	                    out[0] = v[0] / d;
	                    out[1] = v[1] / d;
	                }
	                return out;
	            },

	            /**
	             * 计算向量间距离
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             * @return {number}
	             */
	            distance: function (v1, v2) {
	                return Math.sqrt(
	                    (v1[0] - v2[0]) * (v1[0] - v2[0])
	                    + (v1[1] - v2[1]) * (v1[1] - v2[1])
	                );
	            },

	            /**
	             * 向量距离平方
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             * @return {number}
	             */
	            distanceSquare: function (v1, v2) {
	                return (v1[0] - v2[0]) * (v1[0] - v2[0])
	                    + (v1[1] - v2[1]) * (v1[1] - v2[1]);
	            },

	            /**
	             * 求负向量
	             * @param {Vector2} out
	             * @param {Vector2} v
	             */
	            negate: function (out, v) {
	                out[0] = -v[0];
	                out[1] = -v[1];
	                return out;
	            },

	            /**
	             * 插值两个点
	             * @param {Vector2} out
	             * @param {Vector2} v1
	             * @param {Vector2} v2
	             * @param {number} t
	             */
	            lerp: function (out, v1, v2, t) {
	                // var ax = v1[0];
	                // var ay = v1[1];
	                out[0] = v1[0] + t * (v2[0] - v1[0]);
	                out[1] = v1[1] + t * (v2[1] - v1[1]);
	                return out;
	            },
	            
	            /**
	             * 矩阵左乘向量
	             * @param {Vector2} out
	             * @param {Vector2} v
	             * @param {Vector2} m
	             */
	            applyTransform: function (out, v, m) {
	                var x = v[0];
	                var y = v[1];
	                out[0] = m[0] * x + m[2] * y + m[4];
	                out[1] = m[1] * x + m[3] * y + m[5];
	                return out;
	            },
	            /**
	             * 求两个向量最小值
	             * @param  {Vector2} out
	             * @param  {Vector2} v1
	             * @param  {Vector2} v2
	             */
	            min: function (out, v1, v2) {
	                out[0] = Math.min(v1[0], v2[0]);
	                out[1] = Math.min(v1[1], v2[1]);
	                return out;
	            },
	            /**
	             * 求两个向量最大值
	             * @param  {Vector2} out
	             * @param  {Vector2} v1
	             * @param  {Vector2} v2
	             */
	            max: function (out, v1, v2) {
	                out[0] = Math.max(v1[0], v2[0]);
	                out[1] = Math.max(v1[1], v2[1]);
	                return out;
	            }
	        };

	        vector.length = vector.len;
	        vector.lengthSquare = vector.lenSquare;
	        vector.dist = vector.distance;
	        vector.distSquare = vector.distanceSquare;
	        
	        return vector;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {

	        var ArrayCtor = typeof Float32Array === 'undefined'
	            ? Array
	            : Float32Array;
	        /**
	         * 3x2矩阵操作类
	         * @exports zrender/tool/matrix
	         */
	        var matrix = {
	            /**
	             * 创建一个单位矩阵
	             * @return {Float32Array|Array.<number>}
	             */
	            create : function() {
	                var out = new ArrayCtor(6);
	                matrix.identity(out);
	                
	                return out;
	            },
	            /**
	             * 设置矩阵为单位矩阵
	             * @param {Float32Array|Array.<number>} out
	             */
	            identity : function(out) {
	                out[0] = 1;
	                out[1] = 0;
	                out[2] = 0;
	                out[3] = 1;
	                out[4] = 0;
	                out[5] = 0;
	                return out;
	            },
	            /**
	             * 复制矩阵
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} m
	             */
	            copy: function(out, m) {
	                out[0] = m[0];
	                out[1] = m[1];
	                out[2] = m[2];
	                out[3] = m[3];
	                out[4] = m[4];
	                out[5] = m[5];
	                return out;
	            },
	            /**
	             * 矩阵相乘
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} m1
	             * @param {Float32Array|Array.<number>} m2
	             */
	            mul : function (out, m1, m2) {
	                out[0] = m1[0] * m2[0] + m1[2] * m2[1];
	                out[1] = m1[1] * m2[0] + m1[3] * m2[1];
	                out[2] = m1[0] * m2[2] + m1[2] * m2[3];
	                out[3] = m1[1] * m2[2] + m1[3] * m2[3];
	                out[4] = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];
	                out[5] = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];
	                return out;
	            },
	            /**
	             * 平移变换
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} a
	             * @param {Float32Array|Array.<number>} v
	             */
	            translate : function(out, a, v) {
	                out[0] = a[0];
	                out[1] = a[1];
	                out[2] = a[2];
	                out[3] = a[3];
	                out[4] = a[4] + v[0];
	                out[5] = a[5] + v[1];
	                return out;
	            },
	            /**
	             * 旋转变换
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} a
	             * @param {number} rad
	             */
	            rotate : function(out, a, rad) {
	                var aa = a[0];
	                var ac = a[2];
	                var atx = a[4];
	                var ab = a[1];
	                var ad = a[3];
	                var aty = a[5];
	                var st = Math.sin(rad);
	                var ct = Math.cos(rad);

	                out[0] = aa * ct + ab * st;
	                out[1] = -aa * st + ab * ct;
	                out[2] = ac * ct + ad * st;
	                out[3] = -ac * st + ct * ad;
	                out[4] = ct * atx + st * aty;
	                out[5] = ct * aty - st * atx;
	                return out;
	            },
	            /**
	             * 缩放变换
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} a
	             * @param {Float32Array|Array.<number>} v
	             */
	            scale : function(out, a, v) {
	                var vx = v[0];
	                var vy = v[1];
	                out[0] = a[0] * vx;
	                out[1] = a[1] * vy;
	                out[2] = a[2] * vx;
	                out[3] = a[3] * vy;
	                out[4] = a[4] * vx;
	                out[5] = a[5] * vy;
	                return out;
	            },
	            /**
	             * 求逆矩阵
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} a
	             */
	            invert : function(out, a) {
	            
	                var aa = a[0];
	                var ac = a[2];
	                var atx = a[4];
	                var ab = a[1];
	                var ad = a[3];
	                var aty = a[5];

	                var det = aa * ad - ab * ac;
	                if (!det) {
	                    return null;
	                }
	                det = 1.0 / det;

	                out[0] = ad * det;
	                out[1] = -ab * det;
	                out[2] = -ac * det;
	                out[3] = aa * det;
	                out[4] = (ac * aty - ad * atx) * det;
	                out[5] = (ab * atx - aa * aty) * det;
	                return out;
	            },

	            /**
	             * 矩阵左乘向量
	             * @param {Float32Array|Array.<number>} out
	             * @param {Float32Array|Array.<number>} a
	             * @param {Float32Array|Array.<number>} v
	             */
	            mulVector : function(out, a, v) {
	                var aa = a[0];
	                var ac = a[2];
	                var atx = a[4];
	                var ab = a[1];
	                var ad = a[3];
	                var aty = a[5];

	                out[0] = v[0] * aa + v[1] * ac + atx;
	                out[1] = v[0] * ab + v[1] * ad + aty;

	                return out;
	            }
	        };

	        return matrix;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 事件扩展
	 * @module zrender/mixin/Eventful
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         pissang (https://www.github.com/pissang)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	    /**
	     * 事件分发器
	     * @alias module:zrender/mixin/Eventful
	     * @constructor
	     */
	    var Eventful = function () {
	        this._handlers = {};
	    };
	    /**
	     * 单次触发绑定，dispatch后销毁
	     * 
	     * @param {string} event 事件名
	     * @param {Function} handler 响应函数
	     * @param {Object} context
	     */
	    Eventful.prototype.one = function (event, handler, context) {
	        var _h = this._handlers;

	        if (!handler || !event) {
	            return this;
	        }

	        if (!_h[event]) {
	            _h[event] = [];
	        }

	        _h[event].push({
	            h : handler,
	            one : true,
	            ctx: context || this
	        });

	        return this;
	    };

	    /**
	     * 绑定事件
	     * @param {string} event 事件名
	     * @param {Function} handler 事件处理函数
	     * @param {Object} [context]
	     */
	    Eventful.prototype.bind = function (event, handler, context) {
	        var _h = this._handlers;

	        if (!handler || !event) {
	            return this;
	        }

	        if (!_h[event]) {
	            _h[event] = [];
	        }

	        _h[event].push({
	            h : handler,
	            one : false,
	            ctx: context || this
	        });

	        return this;
	    };

	    /**
	     * 解绑事件
	     * @param {string} event 事件名
	     * @param {Function} [handler] 事件处理函数
	     */
	    Eventful.prototype.unbind = function (event, handler) {
	        var _h = this._handlers;

	        if (!event) {
	            this._handlers = {};
	            return this;
	        }

	        if (handler) {
	            if (_h[event]) {
	                var newList = [];
	                for (var i = 0, l = _h[event].length; i < l; i++) {
	                    if (_h[event][i]['h'] != handler) {
	                        newList.push(_h[event][i]);
	                    }
	                }
	                _h[event] = newList;
	            }

	            if (_h[event] && _h[event].length === 0) {
	                delete _h[event];
	            }
	        }
	        else {
	            delete _h[event];
	        }

	        return this;
	    };

	    /**
	     * 事件分发
	     * 
	     * @param {string} type 事件类型
	     */
	    Eventful.prototype.dispatch = function (type) {
	        if (this._handlers[type]) {
	            var args = arguments;
	            var argLen = args.length;

	            if (argLen > 3) {
	                args = Array.prototype.slice.call(args, 1);
	            }
	            
	            var _h = this._handlers[type];
	            var len = _h.length;
	            for (var i = 0; i < len;) {
	                // Optimize advise from backbone
	                switch (argLen) {
	                    case 1:
	                        _h[i]['h'].call(_h[i]['ctx']);
	                        break;
	                    case 2:
	                        _h[i]['h'].call(_h[i]['ctx'], args[1]);
	                        break;
	                    case 3:
	                        _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);
	                        break;
	                    default:
	                        // have more than 2 given arguments
	                        _h[i]['h'].apply(_h[i]['ctx'], args);
	                        break;
	                }
	                
	                if (_h[i]['one']) {
	                    _h.splice(i, 1);
	                    len--;
	                }
	                else {
	                    i++;
	                }
	            }
	        }

	        return this;
	    };

	    /**
	     * 带有context的事件分发, 最后一个参数是事件回调的context
	     * @param {string} type 事件类型
	     */
	    Eventful.prototype.dispatchWithContext = function (type) {
	        if (this._handlers[type]) {
	            var args = arguments;
	            var argLen = args.length;

	            if (argLen > 4) {
	                args = Array.prototype.slice.call(args, 1, args.length - 1);
	            }
	            var ctx = args[args.length - 1];

	            var _h = this._handlers[type];
	            var len = _h.length;
	            for (var i = 0; i < len;) {
	                // Optimize advise from backbone
	                switch (argLen) {
	                    case 1:
	                        _h[i]['h'].call(ctx);
	                        break;
	                    case 2:
	                        _h[i]['h'].call(ctx, args[1]);
	                        break;
	                    case 3:
	                        _h[i]['h'].call(ctx, args[1], args[2]);
	                        break;
	                    default:
	                        // have more than 2 given arguments
	                        _h[i]['h'].apply(ctx, args);
	                        break;
	                }
	                
	                if (_h[i]['one']) {
	                    _h.splice(i, 1);
	                    len--;
	                }
	                else {
	                    i++;
	                }
	            }
	        }

	        return this;
	    };

	    // 对象可以通过 onxxxx 绑定事件
	    /**
	     * @event module:zrender/mixin/Eventful#onclick
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseover
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseout
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousemove
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousewheel
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousedown
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseup
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragstart
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragend
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragenter
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragleave
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragover
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondrop
	     * @type {Function}
	     * @default null
	     */
	    
	    return Eventful;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * zrender: loading特效类
	 *
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 */

	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {
	        var util = __webpack_require__(33);
	        var TextShape = __webpack_require__(64);
	        var RectangleShape = __webpack_require__(65);


	        var DEFAULT_TEXT = 'Loading...';
	        var DEFAULT_TEXT_FONT = 'normal 16px Arial';

	        /**
	         * @constructor
	         * 
	         * @param {Object} options 选项
	         * @param {color} options.backgroundColor 背景颜色
	         * @param {Object} options.textStyle 文字样式，同shape/text.style
	         * @param {number=} options.progress 进度参数，部分特效有用
	         * @param {Object=} options.effect 特效参数，部分特效有用
	         * 
	         * {
	         *     effect,
	         *     //loading话术
	         *     text:'',
	         *     // 水平安放位置，默认为 'center'，可指定x坐标
	         *     x:'center' || 'left' || 'right' || {number},
	         *     // 垂直安放位置，默认为'top'，可指定y坐标
	         *     y:'top' || 'bottom' || {number},
	         *
	         *     textStyle:{
	         *         textFont: 'normal 20px Arial' || {textFont}, //文本字体
	         *         color: {color}
	         *     }
	         * }
	         */
	        function Base(options) {
	            this.setOptions(options);
	        }

	        /**
	         * 创建loading文字图形
	         * 
	         * @param {Object} textStyle 文字style，同shape/text.style
	         */
	        Base.prototype.createTextShape = function (textStyle) {
	            return new TextShape({
	                highlightStyle : util.merge(
	                    {
	                        x : this.canvasWidth / 2,
	                        y : this.canvasHeight / 2,
	                        text : DEFAULT_TEXT,
	                        textAlign : 'center',
	                        textBaseline : 'middle',
	                        textFont : DEFAULT_TEXT_FONT,
	                        color: '#333',
	                        brushType : 'fill'
	                    },
	                    textStyle,
	                    true
	                )
	            });
	        };
	        
	        /**
	         * 获取loading背景图形
	         * 
	         * @param {color} color 背景颜色
	         */
	        Base.prototype.createBackgroundShape = function (color) {
	            return new RectangleShape({
	                highlightStyle : {
	                    x : 0,
	                    y : 0,
	                    width : this.canvasWidth,
	                    height : this.canvasHeight,
	                    brushType : 'fill',
	                    color : color
	                }
	            });
	        };

	        Base.prototype.start = function (painter) {
	            this.canvasWidth = painter._width;
	            this.canvasHeight = painter._height;

	            function addShapeHandle(param) {
	                painter.storage.addHover(param);
	            }
	            function refreshHandle() {
	                painter.refreshHover();
	            }
	            this.loadingTimer = this._start(addShapeHandle, refreshHandle);
	        };

	        Base.prototype._start = function (/*addShapeHandle, refreshHandle*/) {
	            return setInterval(function () {
	            }, 10000);
	        };

	        Base.prototype.stop = function () {
	            clearInterval(this.loadingTimer);
	        };

	        Base.prototype.setOptions = function (options) {
	            this.options = options || {};
	        };
	        
	        Base.prototype.adjust = function (value, region) {
	            if (value <= region[0]) {
	                value = region[0];
	            }
	            else if (value >= region[1]) {
	                value = region[1];
	            }
	            return value;
	        };
	        
	        Base.prototype.getLocation = function(loc, totalWidth, totalHeight) {
	            var x = loc.x != null ? loc.x : 'center';
	            switch (x) {
	                case 'center' :
	                    x = Math.floor((this.canvasWidth - totalWidth) / 2);
	                    break;
	                case 'left' :
	                    x = 0;
	                    break;
	                case 'right' :
	                    x = this.canvasWidth - totalWidth;
	                    break;
	            }
	            var y = loc.y != null ? loc.y : 'center';
	            switch (y) {
	                case 'center' :
	                    y = Math.floor((this.canvasHeight - totalHeight) / 2);
	                    break;
	                case 'top' :
	                    y = 0;
	                    break;
	                case 'bottom' :
	                    y = this.canvasHeight - totalHeight;
	                    break;
	            }
	            return {
	                x : x,
	                y : y,
	                width : totalWidth,
	                height : totalHeight
	            };
	        };

	        return Base;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * @module zrender/Layer
	 * @author pissang(https://www.github.com/pissang)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	    var Transformable = __webpack_require__(58);
	    var util = __webpack_require__(33);
	    var vmlCanvasManager = window['G_vmlCanvasManager'];
	    var config = __webpack_require__(49);

	    function returnFalse() {
	        return false;
	    }

	    /**
	     * 创建dom
	     * 
	     * @inner
	     * @param {string} id dom id 待用
	     * @param {string} type dom type，such as canvas, div etc.
	     * @param {Painter} painter painter instance
	     */
	    function createDom(id, type, painter) {
	        var newDom = document.createElement(type);
	        var width = painter.getWidth();
	        var height = painter.getHeight();

	        // 没append呢，请原谅我这样写，清晰~
	        newDom.style.position = 'absolute';
	        newDom.style.left = 0;
	        newDom.style.top = 0;
	        newDom.style.width = width + 'px';
	        newDom.style.height = height + 'px';
	        newDom.width = width * config.devicePixelRatio;
	        newDom.height = height * config.devicePixelRatio;

	        // id不作为索引用，避免可能造成的重名，定义为私有属性
	        newDom.setAttribute('data-zr-dom-id', id);
	        return newDom;
	    }

	    /**
	     * @alias module:zrender/Layer
	     * @constructor
	     * @extends module:zrender/mixin/Transformable
	     * @param {string} id
	     * @param {module:zrender/Painter} painter
	     */
	    var Layer = function(id, painter) {

	        this.id = id;

	        this.dom = createDom(id, 'canvas', painter);
	        this.dom.onselectstart = returnFalse; // 避免页面选中的尴尬
	        this.dom.style['-webkit-user-select'] = 'none';
	        this.dom.style['user-select'] = 'none';
	        this.dom.style['-webkit-touch-callout'] = 'none';
	        this.dom.style['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';

	        vmlCanvasManager && vmlCanvasManager.initElement(this.dom);

	        this.domBack = null;
	        this.ctxBack = null;

	        this.painter = painter;

	        this.unusedCount = 0;

	        this.config = null;

	        this.dirty = true;

	        this.elCount = 0;

	        // Configs
	        /**
	         * 每次清空画布的颜色
	         * @type {string}
	         * @default 0
	         */
	        this.clearColor = 0;
	        /**
	         * 是否开启动态模糊
	         * @type {boolean}
	         * @default false
	         */
	        this.motionBlur = false;
	        /**
	         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
	         * @type {number}
	         * @default 0.7
	         */
	        this.lastFrameAlpha = 0.7;
	        /**
	         * 层是否支持鼠标平移操作
	         * @type {boolean}
	         * @default false
	         */
	        this.zoomable = false;
	        /**
	         * 层是否支持鼠标缩放操作
	         * @type {boolean}
	         * @default false
	         */
	        this.panable = false;

	        this.maxZoom = Infinity;
	        this.minZoom = 0;

	        Transformable.call(this);
	    };

	    Layer.prototype.initContext = function () {
	        this.ctx = this.dom.getContext('2d');

	        var dpr = config.devicePixelRatio;
	        if (dpr != 1) { 
	            this.ctx.scale(dpr, dpr);
	        }
	    };

	    Layer.prototype.createBackBuffer = function () {
	        if (vmlCanvasManager) { // IE 8- should not support back buffer
	            return;
	        }
	        this.domBack = createDom('back-' + this.id, 'canvas', this.painter);
	        this.ctxBack = this.domBack.getContext('2d');

	        var dpr = config.devicePixelRatio;

	        if (dpr != 1) { 
	            this.ctxBack.scale(dpr, dpr);
	        }
	    };

	    /**
	     * @param  {number} width
	     * @param  {number} height
	     */
	    Layer.prototype.resize = function (width, height) {
	        var dpr = config.devicePixelRatio;

	        this.dom.style.width = width + 'px';
	        this.dom.style.height = height + 'px';

	        this.dom.setAttribute('width', width * dpr);
	        this.dom.setAttribute('height', height * dpr);

	        if (dpr != 1) { 
	            this.ctx.scale(dpr, dpr);
	        }

	        if (this.domBack) {
	            this.domBack.setAttribute('width', width * dpr);
	            this.domBack.setAttribute('height', height * dpr);

	            if (dpr != 1) { 
	                this.ctxBack.scale(dpr, dpr);
	            }
	        }
	    };

	    /**
	     * 清空该层画布
	     */
	    Layer.prototype.clear = function () {
	        var dom = this.dom;
	        var ctx = this.ctx;
	        var width = dom.width;
	        var height = dom.height;

	        var haveClearColor = this.clearColor && !vmlCanvasManager;
	        var haveMotionBLur = this.motionBlur && !vmlCanvasManager;
	        var lastFrameAlpha = this.lastFrameAlpha;
	        
	        var dpr = config.devicePixelRatio;

	        if (haveMotionBLur) {
	            if (!this.domBack) {
	                this.createBackBuffer();
	            } 

	            this.ctxBack.globalCompositeOperation = 'copy';
	            this.ctxBack.drawImage(
	                dom, 0, 0,
	                width / dpr,
	                height / dpr
	            );
	        }

	        ctx.clearRect(0, 0, width / dpr, height / dpr);
	        if (haveClearColor) {
	            ctx.save();
	            ctx.fillStyle = this.clearColor;
	            ctx.fillRect(0, 0, width / dpr, height / dpr);
	            ctx.restore();
	        }

	        if (haveMotionBLur) {
	            var domBack = this.domBack;
	            ctx.save();
	            ctx.globalAlpha = lastFrameAlpha;
	            ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);
	            ctx.restore();
	        }
	    };

	    util.merge(Layer.prototype, Transformable.prototype);

	    return Layer;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 图片绘制
	 * @module zrender/shape/Image
	 * @author pissang(https://www.github.com/pissang)
	 * @example
	 *     var ImageShape = require('zrender/shape/Image');
	 *     var image = new ImageShape({
	 *         style: {
	 *             image: 'test.jpg',
	 *             x: 100,
	 *             y: 100
	 *         }
	 *     });
	 *     zr.addShape(image);
	 */

	/**
	 * @typedef {Object} IImageStyle
	 * @property {string|HTMLImageElement|HTMLCanvasElement} image 图片url或者图片对象
	 * @property {number} x 左上角横坐标
	 * @property {number} y 左上角纵坐标
	 * @property {number} [width] 绘制到画布上的宽度，默认为图片宽度
	 * @property {number} [height] 绘制到画布上的高度，默认为图片高度
	 * @property {number} [sx=0] 从图片中裁剪的左上角横坐标
	 * @property {number} [sy=0] 从图片中裁剪的左上角纵坐标
	 * @property {number} [sWidth] 从图片中裁剪的宽度，默认为图片高度
	 * @property {number} [sHeight] 从图片中裁剪的高度，默认为图片高度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 * @property {string} [text] 图形中的附加文本
	 * @property {string} [textColor='#000000'] 文本颜色
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom
	 * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。
	 *                                可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	        var Base = __webpack_require__(40);

	        /**
	         * @alias zrender/shape/Image
	         * @constructor
	         * @extends module:zrender/shape/Base
	         * @param {Object} options
	         */
	        var ZImage = function(options) {
	            Base.call(this, options);
	            /**
	             * 图片绘制样式
	             * @name module:zrender/shape/Image#style
	             * @type {module:zrender/shape/Image~IImageStyle}
	             */
	            /**
	             * 图片高亮绘制样式
	             * @name module:zrender/shape/Image#highlightStyle
	             * @type {module:zrender/shape/Image~IImageStyle}
	             */
	        };

	        ZImage.prototype = {
	            
	            type: 'image',

	            brush : function(ctx, isHighlight, refreshNextFrame) {
	                var style = this.style || {};

	                if (isHighlight) {
	                    // 根据style扩展默认高亮样式
	                    style = this.getHighlightStyle(
	                        style, this.highlightStyle || {}
	                    );
	                }

	                var image = style.image;
	                var self = this;

	                if (!this._imageCache) {
	                    this._imageCache = {};
	                }
	                if (typeof(image) === 'string') {
	                    var src = image;
	                    if (this._imageCache[src]) {
	                        image = this._imageCache[src];
	                    } else {
	                        image = new Image();
	                        image.onload = function () {
	                            image.onload = null;
	                            self.modSelf();
	                            refreshNextFrame();
	                        };

	                        image.src = src;
	                        this._imageCache[src] = image;
	                    }
	                }
	                if (image) {
	                    // 图片已经加载完成
	                    if (image.nodeName.toUpperCase() == 'IMG') {
	                        if (window.ActiveXObject) {
	                            if (image.readyState != 'complete') {
	                                return;
	                            }
	                        }
	                        else {
	                            if (!image.complete) {
	                                return;
	                            }
	                        }
	                    }
	                    // Else is canvas
	                    var width = style.width || image.width;
	                    var height = style.height || image.height;
	                    var x = style.x;
	                    var y = style.y;
	                    // 图片加载失败
	                    if (!image.width || !image.height) {
	                        return;
	                    }

	                    ctx.save();

	                    this.doClip(ctx);

	                    this.setContext(ctx, style);

	                    // 设置transform
	                    this.setTransform(ctx);

	                    if (style.sWidth && style.sHeight) {
	                        var sx = style.sx || 0;
	                        var sy = style.sy || 0;
	                        ctx.drawImage(
	                            image,
	                            sx, sy, style.sWidth, style.sHeight,
	                            x, y, width, height
	                        );
	                    }
	                    else if (style.sx && style.sy) {
	                        var sx = style.sx;
	                        var sy = style.sy;
	                        var sWidth = width - sx;
	                        var sHeight = height - sy;
	                        ctx.drawImage(
	                            image,
	                            sx, sy, sWidth, sHeight,
	                            x, y, width, height
	                        );
	                    }
	                    else {
	                        ctx.drawImage(image, x, y, width, height);
	                    }
	                    // 如果没设置宽和高的话自动根据图片宽高设置
	                    if (!style.width) {
	                        style.width = width;
	                    }
	                    if (!style.height) {
	                        style.height = height;
	                    }
	                    if (!this.style.width) {
	                        this.style.width = width;
	                    }
	                    if (!this.style.height) {
	                        this.style.height = height;
	                    }

	                    this.drawText(ctx, style, this.style);

	                    ctx.restore();
	                }
	            },

	            /**
	             * 计算返回图片的包围盒矩形
	             * @param {module:zrender/shape/Image~IImageStyle} style
	             * @return {module:zrender/shape/Base~IBoundingRect}
	             */
	            getRect: function(style) {
	                return {
	                    x : style.x,
	                    y : style.y,
	                    width : style.width,
	                    height : style.height
	                };
	            },

	            clearCache: function() {
	                this._imageCache = {};
	            }
	        };

	        __webpack_require__(33).inherits(ZImage, Base);
	        return ZImage;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上
	 * @module zrender/Group
	 * @example
	 *     var Group = require('zrender/Group');
	 *     var Circle = require('zrender/shape/Circle');
	 *     var g = new Group();
	 *     g.position[0] = 100;
	 *     g.position[1] = 100;
	 *     g.addChild(new Circle({
	 *         style: {
	 *             x: 100,
	 *             y: 100,
	 *             r: 20,
	 *             brushType: 'fill'
	 *         }
	 *     }));
	 *     zr.addGroup(g);
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {

	    var guid = __webpack_require__(35);
	    var util = __webpack_require__(33);

	    var Transformable = __webpack_require__(58);
	    var Eventful = __webpack_require__(52);

	    /**
	     * @alias module:zrender/Group
	     * @constructor
	     * @extends module:zrender/mixin/Transformable
	     * @extends module:zrender/mixin/Eventful
	     */
	    var Group = function(options) {

	        options = options || {};

	        /**
	         * Group id
	         * @type {string}
	         */
	        this.id = options.id || guid();

	        for (var key in options) {
	            this[key] = options[key];
	        }

	        /**
	         * @type {string}
	         */
	        this.type = 'group';

	        /**
	         * 用于裁剪的图形(shape)，所有 Group 内的图形在绘制时都会被这个图形裁剪
	         * 该图形会继承Group的变换
	         * @type {module:zrender/shape/Base}
	         * @see http://www.w3.org/TR/2dcontext/#clipping-region
	         */
	        this.clipShape = null;

	        this._children = [];

	        this._storage = null;

	        this.__dirty = true;

	        // Mixin
	        Transformable.call(this);
	        Eventful.call(this);
	    };

	    /**
	     * 是否忽略该 Group 及其所有子节点
	     * @type {boolean}
	     * @default false
	     */
	    Group.prototype.ignore = false;

	    /**
	     * 复制并返回一份新的包含所有儿子节点的数组
	     * @return {Array.<module:zrender/Group|module:zrender/shape/Base>}
	     */
	    Group.prototype.children = function() {
	        return this._children.slice();
	    };

	    /**
	     * 获取指定 index 的儿子节点
	     * @param  {number} idx
	     * @return {module:zrender/Group|module:zrender/shape/Base}
	     */
	    Group.prototype.childAt = function(idx) {
	        return this._children[idx];
	    };

	    /**
	     * 添加子节点，可以是Shape或者Group
	     * @param {module:zrender/Group|module:zrender/shape/Base} child
	     */
	    // TODO Type Check
	    Group.prototype.addChild = function(child) {
	        if (child == this) {
	            return;
	        }
	        
	        if (child.parent == this) {
	            return;
	        }
	        if (child.parent) {
	            child.parent.removeChild(child);
	        }

	        this._children.push(child);
	        child.parent = this;

	        if (this._storage && this._storage !== child._storage) {
	            
	            this._storage.addToMap(child);

	            if (child instanceof Group) {
	                child.addChildrenToStorage(this._storage);
	            }
	        }
	    };

	    /**
	     * 移除子节点
	     * @param {module:zrender/Group|module:zrender/shape/Base} child
	     */
	    // TODO Type Check
	    Group.prototype.removeChild = function(child) {
	        var idx = util.indexOf(this._children, child);

	        if (idx >= 0) {
	            this._children.splice(idx, 1);
	        }
	        child.parent = null;

	        if (this._storage) {
	            
	            this._storage.delFromMap(child.id);

	            if (child instanceof Group) {
	                child.delChildrenFromStorage(this._storage);
	            }
	        }
	    };

	    /**
	     * 移除所有子节点
	     */
	    Group.prototype.clearChildren = function () {
	        for (var i = 0; i < this._children.length; i++) {
	            var child = this._children[i];
	            if (this._storage) {
	                this._storage.delFromMap(child.id);
	                if (child instanceof Group) {
	                    child.delChildrenFromStorage(this._storage);
	                }
	            }
	        }
	        this._children.length = 0;
	    };

	    /**
	     * 遍历所有子节点
	     * @param  {Function} cb
	     * @param  {}   context
	     */
	    Group.prototype.eachChild = function(cb, context) {
	        var haveContext = !!context;
	        for (var i = 0; i < this._children.length; i++) {
	            var child = this._children[i];
	            if (haveContext) {
	                cb.call(context, child);
	            } else {
	                cb(child);
	            }
	        }
	    };

	    /**
	     * 深度优先遍历所有子孙节点
	     * @param  {Function} cb
	     * @param  {}   context
	     */
	    Group.prototype.traverse = function(cb, context) {
	        var haveContext = !!context;
	        for (var i = 0; i < this._children.length; i++) {
	            var child = this._children[i];
	            if (haveContext) {
	                cb.call(context, child);
	            } else {
	                cb(child);
	            }

	            if (child.type === 'group') {
	                child.traverse(cb, context);
	            }
	        }
	    };

	    Group.prototype.addChildrenToStorage = function(storage) {
	        for (var i = 0; i < this._children.length; i++) {
	            var child = this._children[i];
	            storage.addToMap(child);
	            if (child instanceof Group) {
	                child.addChildrenToStorage(storage);
	            }
	        }
	    };

	    Group.prototype.delChildrenFromStorage = function(storage) {
	        for (var i = 0; i < this._children.length; i++) {
	            var child = this._children[i];
	            storage.delFromMap(child.id);
	            if (child instanceof Group) {
	                child.delChildrenFromStorage(storage);
	            }
	        }
	    };

	    Group.prototype.modSelf = function() {
	        this.__dirty = true;
	    };

	    util.merge(Group.prototype, Transformable.prototype, true);
	    util.merge(Group.prototype, Eventful.prototype, true);

	    return Group;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	        /**
	         * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js
	         * @see http://sole.github.io/tween.js/examples/03_graphs.html
	         * @exports zrender/animation/easing
	         */
	        var easing = {
	            // 线性
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            Linear: function (k) {
	                return k;
	            },

	            // 二次方的缓动（t^2）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuadraticIn: function (k) {
	                return k * k;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuadraticOut: function (k) {
	                return k * (2 - k);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuadraticInOut: function (k) {
	                if ((k *= 2) < 1) {
	                    return 0.5 * k * k;
	                }
	                return -0.5 * (--k * (k - 2) - 1);
	            },

	            // 三次方的缓动（t^3）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CubicIn: function (k) {
	                return k * k * k;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CubicOut: function (k) {
	                return --k * k * k + 1;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CubicInOut: function (k) {
	                if ((k *= 2) < 1) {
	                    return 0.5 * k * k * k;
	                }
	                return 0.5 * ((k -= 2) * k * k + 2);
	            },

	            // 四次方的缓动（t^4）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuarticIn: function (k) {
	                return k * k * k * k;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuarticOut: function (k) {
	                return 1 - (--k * k * k * k);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuarticInOut: function (k) {
	                if ((k *= 2) < 1) {
	                    return 0.5 * k * k * k * k;
	                }
	                return -0.5 * ((k -= 2) * k * k * k - 2);
	            },

	            // 五次方的缓动（t^5）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuinticIn: function (k) {
	                return k * k * k * k * k;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuinticOut: function (k) {
	                return --k * k * k * k * k + 1;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            QuinticInOut: function (k) {
	                if ((k *= 2) < 1) {
	                    return 0.5 * k * k * k * k * k;
	                }
	                return 0.5 * ((k -= 2) * k * k * k * k + 2);
	            },

	            // 正弦曲线的缓动（sin(t)）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            SinusoidalIn: function (k) {
	                return 1 - Math.cos(k * Math.PI / 2);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            SinusoidalOut: function (k) {
	                return Math.sin(k * Math.PI / 2);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            SinusoidalInOut: function (k) {
	                return 0.5 * (1 - Math.cos(Math.PI * k));
	            },

	            // 指数曲线的缓动（2^t）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ExponentialIn: function (k) {
	                return k === 0 ? 0 : Math.pow(1024, k - 1);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ExponentialOut: function (k) {
	                return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ExponentialInOut: function (k) {
	                if (k === 0) {
	                    return 0;
	                }
	                if (k === 1) {
	                    return 1;
	                }
	                if ((k *= 2) < 1) {
	                    return 0.5 * Math.pow(1024, k - 1);
	                }
	                return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);
	            },

	            // 圆形曲线的缓动（sqrt(1-t^2)）
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CircularIn: function (k) {
	                return 1 - Math.sqrt(1 - k * k);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CircularOut: function (k) {
	                return Math.sqrt(1 - (--k * k));
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            CircularInOut: function (k) {
	                if ((k *= 2) < 1) {
	                    return -0.5 * (Math.sqrt(1 - k * k) - 1);
	                }
	                return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);
	            },

	            // 创建类似于弹簧在停止前来回振荡的动画
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ElasticIn: function (k) {
	                var s; 
	                var a = 0.1;
	                var p = 0.4;
	                if (k === 0) {
	                    return 0;
	                }
	                if (k === 1) {
	                    return 1;
	                }
	                if (!a || a < 1) {
	                    a = 1; s = p / 4;
	                }
	                else {
	                    s = p * Math.asin(1 / a) / (2 * Math.PI);
	                }
	                return -(a * Math.pow(2, 10 * (k -= 1)) *
	                            Math.sin((k - s) * (2 * Math.PI) / p));
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ElasticOut: function (k) {
	                var s;
	                var a = 0.1;
	                var p = 0.4;
	                if (k === 0) {
	                    return 0;
	                }
	                if (k === 1) {
	                    return 1;
	                }
	                if (!a || a < 1) {
	                    a = 1; s = p / 4;
	                }
	                else {
	                    s = p * Math.asin(1 / a) / (2 * Math.PI);
	                }
	                return (a * Math.pow(2, -10 * k) *
	                        Math.sin((k - s) * (2 * Math.PI) / p) + 1);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            ElasticInOut: function (k) {
	                var s;
	                var a = 0.1;
	                var p = 0.4;
	                if (k === 0) {
	                    return 0;
	                }
	                if (k === 1) {
	                    return 1;
	                }
	                if (!a || a < 1) {
	                    a = 1; s = p / 4;
	                }
	                else {
	                    s = p * Math.asin(1 / a) / (2 * Math.PI);
	                }
	                if ((k *= 2) < 1) {
	                    return -0.5 * (a * Math.pow(2, 10 * (k -= 1))
	                        * Math.sin((k - s) * (2 * Math.PI) / p));
	                }
	                return a * Math.pow(2, -10 * (k -= 1))
	                        * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;

	            },

	            // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BackIn: function (k) {
	                var s = 1.70158;
	                return k * k * ((s + 1) * k - s);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BackOut: function (k) {
	                var s = 1.70158;
	                return --k * k * ((s + 1) * k + s) + 1;
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BackInOut: function (k) {
	                var s = 1.70158 * 1.525;
	                if ((k *= 2) < 1) {
	                    return 0.5 * (k * k * ((s + 1) * k - s));
	                }
	                return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
	            },

	            // 创建弹跳效果
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BounceIn: function (k) {
	                return 1 - easing.BounceOut(1 - k);
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BounceOut: function (k) {
	                if (k < (1 / 2.75)) {
	                    return 7.5625 * k * k;
	                }
	                else if (k < (2 / 2.75)) {
	                    return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;
	                }
	                else if (k < (2.5 / 2.75)) {
	                    return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;
	                }
	                else {
	                    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;
	                }
	            },
	            /**
	             * @param {number} k
	             * @return {number}
	             */
	            BounceInOut: function (k) {
	                if (k < 0.5) {
	                    return easing.BounceIn(k * 2) * 0.5;
	                }
	                return easing.BounceOut(k * 2 - 1) * 0.5 + 0.5;
	            }
	        };

	        return easing;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));



/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 提供变换扩展
	 * @module zrender/mixin/Transformable
	 * @author pissang (https://www.github.com/pissang)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	    'use strict';

	    var matrix = __webpack_require__(51);
	    var vector = __webpack_require__(50);
	    var origin = [0, 0];

	    var mTranslate = matrix.translate;

	    var EPSILON = 5e-5;

	    function isAroundZero(val) {
	        return val > -EPSILON && val < EPSILON;
	    }
	    function isNotAroundZero(val) {
	        return val > EPSILON || val < -EPSILON;
	    }

	    /**
	     * @alias module:zrender/mixin/Transformable
	     * @constructor
	     */
	    var Transformable = function () {

	        if (!this.position) {
	            /**
	             * 平移
	             * @type {Array.<number>}
	             * @default [0, 0]
	             */
	            this.position = [ 0, 0 ];
	        }
	        if (typeof(this.rotation) == 'undefined') {
	            /**
	             * 旋转，可以通过数组二三项指定旋转的原点
	             * @type {Array.<number>}
	             * @default [0, 0, 0]
	             */
	            this.rotation = [ 0, 0, 0 ];
	        }
	        if (!this.scale) {
	            /**
	             * 缩放，可以通过数组三四项指定缩放的原点
	             * @type {Array.<number>}
	             * @default [1, 1, 0, 0]
	             */
	            this.scale = [ 1, 1, 0, 0 ];
	        }

	        this.needLocalTransform = false;

	        /**
	         * 是否有坐标变换
	         * @type {boolean}
	         * @readOnly
	         */
	        this.needTransform = false;
	    };

	    Transformable.prototype = {
	        
	        constructor: Transformable,

	        updateNeedTransform: function () {
	            this.needLocalTransform = isNotAroundZero(this.rotation[0])
	                || isNotAroundZero(this.position[0])
	                || isNotAroundZero(this.position[1])
	                || isNotAroundZero(this.scale[0] - 1)
	                || isNotAroundZero(this.scale[1] - 1);
	        },

	        /**
	         * 判断是否需要有坐标变换，更新needTransform属性。
	         * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵
	         */
	        updateTransform: function () {
	            
	            this.updateNeedTransform();

	            var parentHasTransform = this.parent && this.parent.needTransform;
	            this.needTransform = this.needLocalTransform || parentHasTransform;
	            
	            if (!this.needTransform) {
	                return;
	            }

	            var m = this.transform || matrix.create();
	            matrix.identity(m);

	            if (this.needLocalTransform) {
	                var scale = this.scale;
	                if (
	                    isNotAroundZero(scale[0])
	                 || isNotAroundZero(scale[1])
	                ) {
	                    origin[0] = -scale[2] || 0;
	                    origin[1] = -scale[3] || 0;
	                    var haveOrigin = isNotAroundZero(origin[0])
	                                  || isNotAroundZero(origin[1]);
	                    if (haveOrigin) {
	                        mTranslate(m, m, origin);
	                    }
	                    matrix.scale(m, m, scale);
	                    if (haveOrigin) {
	                        origin[0] = -origin[0];
	                        origin[1] = -origin[1];
	                        mTranslate(m, m, origin);
	                    }
	                }

	                if (this.rotation instanceof Array) {
	                    if (this.rotation[0] !== 0) {
	                        origin[0] = -this.rotation[1] || 0;
	                        origin[1] = -this.rotation[2] || 0;
	                        var haveOrigin = isNotAroundZero(origin[0])
	                                      || isNotAroundZero(origin[1]);
	                        if (haveOrigin) {
	                            mTranslate(m, m, origin);
	                        }
	                        matrix.rotate(m, m, this.rotation[0]);
	                        if (haveOrigin) {
	                            origin[0] = -origin[0];
	                            origin[1] = -origin[1];
	                            mTranslate(m, m, origin);
	                        }
	                    }
	                }
	                else {
	                    if (this.rotation !== 0) {
	                        matrix.rotate(m, m, this.rotation);
	                    }
	                }

	                if (
	                    isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1])
	                ) {
	                    mTranslate(m, m, this.position);
	                }
	            }

	            // 应用父节点变换
	            if (parentHasTransform) {
	                if (this.needLocalTransform) {
	                    matrix.mul(m, this.parent.transform, m);
	                }
	                else {
	                    matrix.copy(m, this.parent.transform);
	                }
	            }
	            // 保存这个变换矩阵
	            this.transform = m;

	            this.invTransform = this.invTransform || matrix.create();
	            matrix.invert(this.invTransform, m);
	        },
	        /**
	         * 将自己的transform应用到context上
	         * @param {Context2D} ctx
	         */
	        setTransform: function (ctx) {
	            if (this.needTransform) {
	                var m = this.transform;
	                ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	            }
	        },
	        /**
	         * 设置图形的朝向
	         * @param  {Array.<number>|Float32Array} target
	         * @method
	         */
	        lookAt: (function () {
	            var v = vector.create();
	            return function(target) {
	                if (!this.transform) {
	                    this.transform = matrix.create();
	                }
	                var m = this.transform;
	                vector.sub(v, target, this.position);
	                if (isAroundZero(v[0]) && isAroundZero(v[1])) {
	                    return;
	                }
	                vector.normalize(v, v);
	                var scale = this.scale;
	                // Y Axis
	                // TODO Scale origin ?
	                m[2] = v[0] * scale[1];
	                m[3] = v[1] * scale[1];
	                // X Axis
	                m[0] = v[1] * scale[0];
	                m[1] = -v[0] * scale[0];
	                // Position
	                m[4] = this.position[0];
	                m[5] = this.position[1];

	                this.decomposeTransform();
	            };
	        })(),
	        /**
	         * 分解`transform`矩阵到`position`, `rotation`, `scale`
	         */
	        decomposeTransform: function () {
	            if (!this.transform) {
	                return;
	            }
	            var m = this.transform;
	            var sx = m[0] * m[0] + m[1] * m[1];
	            var position = this.position;
	            var scale = this.scale;
	            var rotation = this.rotation;
	            if (isNotAroundZero(sx - 1)) {
	                sx = Math.sqrt(sx);
	            }
	            var sy = m[2] * m[2] + m[3] * m[3];
	            if (isNotAroundZero(sy - 1)) {
	                sy = Math.sqrt(sy);
	            }
	            position[0] = m[4];
	            position[1] = m[5];
	            scale[0] = sx;
	            scale[1] = sy;
	            scale[2] = scale[3] = 0;
	            rotation[0] = Math.atan2(-m[1] / sy, m[0] / sx);
	            rotation[1] = rotation[2] = 0;
	        },

	        /**
	         * 变换坐标位置到 shape 的局部坐标空间
	         * @method
	         * @param {number} x
	         * @param {number} y
	         * @return {Array.<number>}
	         */
	        transformCoordToLocal: function (x, y) {
	            var v2 = [x, y];
	            if (this.needTransform && this.invTransform) {
	                matrix.mulVector(v2, this.invTransform, v2);
	            }
	            return v2;
	        }
	    };

	    return Transformable;
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * zrender: 图形空间辅助类
	 *
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         pissang (https://www.github.com/pissang)
	 *
	 * isInside：是否在区域内部
	 * isOutside：是否在区域外部
	 * getTextWidth：测算单行文本宽度
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {

	        'use strict';

	        var util = __webpack_require__(33);
	        var curve = __webpack_require__(66);

	        var _ctx;
	        
	        var _textWidthCache = {};
	        var _textHeightCache = {};
	        var _textWidthCacheCounter = 0;
	        var _textHeightCacheCounter = 0;
	        var TEXT_CACHE_MAX = 5000;
	            
	        var PI2 = Math.PI * 2;

	        function normalizeRadian(angle) {
	            angle %= PI2;
	            if (angle < 0) {
	                angle += PI2;
	            }
	            return angle;
	        }
	        /**
	         * 包含判断
	         *
	         * @param {Object} shape : 图形
	         * @param {Object} area ： 目标区域
	         * @param {number} x ： 横坐标
	         * @param {number} y ： 纵坐标
	         */
	        function isInside(shape, area, x, y) {
	            if (!area || !shape) {
	                // 无参数或不支持类型
	                return false;
	            }
	            var zoneType = shape.type;

	            _ctx = _ctx || util.getContext();

	            // 未实现或不可用时(excanvas不支持)则数学运算，主要是line，polyline，ring
	            var _mathReturn = _mathMethod(shape, area, x, y);
	            if (typeof _mathReturn != 'undefined') {
	                return _mathReturn;
	            }

	            if (shape.buildPath && _ctx.isPointInPath) {
	                return _buildPathMethod(shape, _ctx, area, x, y);
	            }

	            // 上面的方法都行不通时
	            switch (zoneType) {
	                case 'ellipse': // Todo，不精确
	                    return true;
	                // 旋轮曲线  不准确
	                case 'trochoid':
	                    var _r = area.location == 'out'
	                            ? area.r1 + area.r2 + area.d
	                            : area.r1 - area.r2 + area.d;
	                    return isInsideCircle(area, x, y, _r);
	                // 玫瑰线 不准确
	                case 'rose' :
	                    return isInsideCircle(area, x, y, area.maxr);
	                // 路径，椭圆，曲线等-----------------13
	                default:
	                    return false;   // Todo，暂不支持
	            }
	        }

	        /**
	         * @param {Object} shape : 图形
	         * @param {Object} area ：目标区域
	         * @param {number} x ： 横坐标
	         * @param {number} y ： 纵坐标
	         * @return {boolean=} true表示坐标处在图形中
	         */
	        function _mathMethod(shape, area, x, y) {
	            var zoneType = shape.type;
	            // 在矩形内则部分图形需要进一步判断
	            switch (zoneType) {
	                // 贝塞尔曲线
	                case 'bezier-curve':
	                    if (typeof(area.cpX2) === 'undefined') {
	                        return isInsideQuadraticStroke(
	                            area.xStart, area.yStart,
	                            area.cpX1, area.cpY1, 
	                            area.xEnd, area.yEnd,
	                            area.lineWidth, x, y
	                        );
	                    }
	                    return isInsideCubicStroke(
	                        area.xStart, area.yStart,
	                        area.cpX1, area.cpY1, 
	                        area.cpX2, area.cpY2, 
	                        area.xEnd, area.yEnd,
	                        area.lineWidth, x, y
	                    );
	                // 线
	                case 'line':
	                    return isInsideLine(
	                        area.xStart, area.yStart,
	                        area.xEnd, area.yEnd,
	                        area.lineWidth, x, y
	                    );
	                // 折线
	                case 'polyline':
	                    return isInsidePolyline(
	                        area.pointList, area.lineWidth, x, y
	                    );
	                // 圆环
	                case 'ring':
	                    return isInsideRing(
	                        area.x, area.y, area.r0, area.r, x, y
	                    );
	                // 圆形
	                case 'circle':
	                    return isInsideCircle(
	                        area.x, area.y, area.r, x, y
	                    );
	                // 扇形
	                case 'sector':
	                    var startAngle = area.startAngle * Math.PI / 180;
	                    var endAngle = area.endAngle * Math.PI / 180;
	                    if (!area.clockWise) {
	                        startAngle = -startAngle;
	                        endAngle = -endAngle;
	                    }
	                    return isInsideSector(
	                        area.x, area.y, area.r0, area.r,
	                        startAngle, endAngle,
	                        !area.clockWise,
	                        x, y
	                    );
	                // 多边形
	                case 'path':
	                    return area.pathArray && isInsidePath(
	                        area.pathArray, Math.max(area.lineWidth, 5),
	                        area.brushType, x, y
	                    );
	                case 'polygon':
	                case 'star':
	                case 'isogon':
	                    return isInsidePolygon(area.pointList, x, y);
	                // 文本
	                case 'text':
	                    var rect =  area.__rect || shape.getRect(area);
	                    return isInsideRect(
	                        rect.x, rect.y, rect.width, rect.height, x, y
	                    );
	                // 矩形
	                case 'rectangle':
	                // 图片
	                case 'image':
	                    return isInsideRect(
	                        area.x, area.y, area.width, area.height, x, y
	                    );
	            }
	        }

	        /**
	         * 通过buildPath方法来判断，三个方法中较快，但是不支持线条类型的shape，
	         * 而且excanvas不支持isPointInPath方法
	         *
	         * @param {Object} shape ： shape
	         * @param {Object} context : 上下文
	         * @param {Object} area ：目标区域
	         * @param {number} x ： 横坐标
	         * @param {number} y ： 纵坐标
	         * @return {boolean} true表示坐标处在图形中
	         */
	        function _buildPathMethod(shape, context, area, x, y) {
	            // 图形类实现路径创建了则用类的path
	            context.beginPath();
	            shape.buildPath(context, area);
	            context.closePath();
	            return context.isPointInPath(x, y);
	        }

	        /**
	         * !isInside
	         */
	        function isOutside(shape, area, x, y) {
	            return !isInside(shape, area, x, y);
	        }

	        /**
	         * 线段包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        function isInsideLine(x0, y0, x1, y1, lineWidth, x, y) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = Math.max(lineWidth, 5);
	            var _a = 0;
	            var _b = x0;
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l)
	                || (y < y0 - _l && y < y1 - _l)
	                || (x > x0 + _l && x > x1 + _l)
	                || (x < x0 - _l && x < x1 - _l)
	            ) {
	                return false;
	            }

	            if (x0 !== x1) {
	                _a = (y0 - y1) / (x0 - x1);
	                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;
	            }
	            else {
	                return Math.abs(x - x0) <= _l / 2;
	            }
	            var tmp = _a * x - y + _b;
	            var _s = tmp * tmp / (_a * _a + 1);
	            return _s <= _l / 2 * _l / 2;
	        }

	        /**
	         * 三次贝塞尔曲线描边包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  x2
	         * @param  {number}  y2
	         * @param  {number}  x3
	         * @param  {number}  y3
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        function isInsideCubicStroke(
	            x0, y0, x1, y1, x2, y2, x3, y3,
	            lineWidth, x, y
	        ) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = Math.max(lineWidth, 5);
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)
	                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)
	                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)
	                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)
	            ) {
	                return false;
	            }
	            var d =  curve.cubicProjectPoint(
	                x0, y0, x1, y1, x2, y2, x3, y3,
	                x, y, null
	            );
	            return d <= _l / 2;
	        }

	        /**
	         * 二次贝塞尔曲线描边包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  x2
	         * @param  {number}  y2
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        function isInsideQuadraticStroke(
	            x0, y0, x1, y1, x2, y2,
	            lineWidth, x, y
	        ) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = Math.max(lineWidth, 5);
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l && y > y2 + _l)
	                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)
	                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)
	                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)
	            ) {
	                return false;
	            }
	            var d =  curve.quadraticProjectPoint(
	                x0, y0, x1, y1, x2, y2,
	                x, y, null
	            );
	            return d <= _l / 2;
	        }

	        /**
	         * 圆弧描边包含判断
	         * @param  {number}  cx
	         * @param  {number}  cy
	         * @param  {number}  r
	         * @param  {number}  startAngle
	         * @param  {number}  endAngle
	         * @param  {boolean}  anticlockwise
	         * @param  {number} lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {Boolean}
	         */
	        function isInsideArcStroke(
	            cx, cy, r, startAngle, endAngle, anticlockwise,
	            lineWidth, x, y
	        ) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = Math.max(lineWidth, 5);

	            x -= cx;
	            y -= cy;
	            var d = Math.sqrt(x * x + y * y);
	            if ((d - _l > r) || (d + _l < r)) {
	                return false;
	            }
	            if (Math.abs(startAngle - endAngle) >= PI2) {
	                // Is a circle
	                return true;
	            }
	            if (anticlockwise) {
	                var tmp = startAngle;
	                startAngle = normalizeRadian(endAngle);
	                endAngle = normalizeRadian(tmp);
	            } else {
	                startAngle = normalizeRadian(startAngle);
	                endAngle = normalizeRadian(endAngle);
	            }
	            if (startAngle > endAngle) {
	                endAngle += PI2;
	            }
	            
	            var angle = Math.atan2(y, x);
	            if (angle < 0) {
	                angle += PI2;
	            }
	            return (angle >= startAngle && angle <= endAngle)
	                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);
	        }

	        function isInsidePolyline(points, lineWidth, x, y) {
	            var lineWidth = Math.max(lineWidth, 10);
	            for (var i = 0, l = points.length - 1; i < l; i++) {
	                var x0 = points[i][0];
	                var y0 = points[i][1];
	                var x1 = points[i + 1][0];
	                var y1 = points[i + 1][1];

	                if (isInsideLine(x0, y0, x1, y1, lineWidth, x, y)) {
	                    return true;
	                }
	            }

	            return false;
	        }

	        function isInsideRing(cx, cy, r0, r, x, y) {
	            var d = (x - cx) * (x - cx) + (y - cy) * (y - cy);
	            return (d < r * r) && (d > r0 * r0);
	        }

	        /**
	         * 矩形包含判断
	         */
	        function isInsideRect(x0, y0, width, height, x, y) {
	            return x >= x0 && x <= (x0 + width)
	                && y >= y0 && y <= (y0 + height);
	        }

	        /**
	         * 圆形包含判断
	         */
	        function isInsideCircle(x0, y0, r, x, y) {
	            return (x - x0) * (x - x0) + (y - y0) * (y - y0)
	                   < r * r;
	        }

	        /**
	         * 扇形包含判断
	         */
	        function isInsideSector(
	            cx, cy, r0, r, startAngle, endAngle, anticlockwise, x, y
	        ) {
	            return isInsideArcStroke(
	                cx, cy, (r0 + r) / 2, startAngle, endAngle, anticlockwise,
	                r - r0, x, y
	            );
	        }

	        /**
	         * 多边形包含判断
	         * 与 canvas 一样采用 non-zero winding rule
	         */
	        function isInsidePolygon(points, x, y) {
	            var N = points.length;
	            var w = 0;

	            for (var i = 0, j = N - 1; i < N; i++) {
	                var x0 = points[j][0];
	                var y0 = points[j][1];
	                var x1 = points[i][0];
	                var y1 = points[i][1];
	                w += windingLine(x0, y0, x1, y1, x, y);
	                j = i;
	            }
	            return w !== 0;
	        }

	        function windingLine(x0, y0, x1, y1, x, y) {
	            if ((y > y0 && y > y1) || (y < y0 && y < y1)) {
	                return 0;
	            }
	            if (y1 == y0) {
	                return 0;
	            }
	            var dir = y1 < y0 ? 1 : -1;
	            var t = (y - y0) / (y1 - y0);
	            var x_ = t * (x1 - x0) + x0;

	            return x_ > x ? dir : 0;
	        }

	        // 临时数组
	        var roots = [-1, -1, -1];
	        var extrema = [-1, -1];

	        function swapExtrema() {
	            var tmp = extrema[0];
	            extrema[0] = extrema[1];
	            extrema[1] = tmp;
	        }
	        function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {
	            // Quick reject
	            if (
	                (y > y0 && y > y1 && y > y2 && y > y3)
	                || (y < y0 && y < y1 && y < y2 && y < y3)
	            ) {
	                return 0;
	            }
	            var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);
	            if (nRoots === 0) {
	                return 0;
	            }
	            else {
	                var w = 0;
	                var nExtrema = -1;
	                var y0_, y1_;
	                for (var i = 0; i < nRoots; i++) {
	                    var t = roots[i];
	                    var x_ = curve.cubicAt(x0, x1, x2, x3, t);
	                    if (x_ < x) { // Quick reject
	                        continue;
	                    }
	                    if (nExtrema < 0) {
	                        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);
	                        if (extrema[1] < extrema[0] && nExtrema > 1) {
	                            swapExtrema();
	                        }
	                        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);
	                        if (nExtrema > 1) {
	                            y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);
	                        }
	                    }
	                    if (nExtrema == 2) {
	                        // 分成三段单调函数
	                        if (t < extrema[0]) {
	                            w += y0_ < y0 ? 1 : -1;
	                        } 
	                        else if (t < extrema[1]) {
	                            w += y1_ < y0_ ? 1 : -1;
	                        } 
	                        else {
	                            w += y3 < y1_ ? 1 : -1;
	                        }
	                    } 
	                    else {
	                        // 分成两段单调函数
	                        if (t < extrema[0]) {
	                            w += y0_ < y0 ? 1 : -1;
	                        } 
	                        else {
	                            w += y3 < y0_ ? 1 : -1;
	                        }
	                    }
	                }
	                return w;
	            }
	        }

	        function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {
	            // Quick reject
	            if (
	                (y > y0 && y > y1 && y > y2)
	                || (y < y0 && y < y1 && y < y2)
	            ) {
	                return 0;
	            }
	            var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);
	            if (nRoots === 0) {
	                return 0;
	            } 
	            else {
	                var t = curve.quadraticExtremum(y0, y1, y2);
	                if (t >=0 && t <= 1) {
	                    var w = 0;
	                    var y_ = curve.quadraticAt(y0, y1, y2, t);
	                    for (var i = 0; i < nRoots; i++) {
	                        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);
	                        if (x_ > x) {
	                            continue;
	                        }
	                        if (roots[i] < t) {
	                            w += y_ < y0 ? 1 : -1;
	                        } 
	                        else {
	                            w += y2 < y_ ? 1 : -1;
	                        }
	                    }
	                    return w;
	                } 
	                else {
	                    var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);
	                    if (x_ > x) {
	                        return 0;
	                    }
	                    return y2 < y0 ? 1 : -1;
	                }
	            }
	        }
	        
	        // TODO
	        // Arc 旋转
	        function windingArc(
	            cx, cy, r, startAngle, endAngle, anticlockwise, x, y
	        ) {
	            y -= cy;
	            if (y > r || y < -r) {
	                return 0;
	            }
	            var tmp = Math.sqrt(r * r - y * y);
	            roots[0] = -tmp;
	            roots[1] = tmp;

	            if (Math.abs(startAngle - endAngle) >= PI2) {
	                // Is a circle
	                startAngle = 0;
	                endAngle = PI2;
	                var dir = anticlockwise ? 1 : -1;
	                if (x >= roots[0] + cx && x <= roots[1] + cx) {
	                    return dir;
	                } else {
	                    return 0;
	                }
	            }

	            if (anticlockwise) {
	                var tmp = startAngle;
	                startAngle = normalizeRadian(endAngle);
	                endAngle = normalizeRadian(tmp);   
	            } else {
	                startAngle = normalizeRadian(startAngle);
	                endAngle = normalizeRadian(endAngle);   
	            }
	            if (startAngle > endAngle) {
	                endAngle += PI2;
	            }

	            var w = 0;
	            for (var i = 0; i < 2; i++) {
	                var x_ = roots[i];
	                if (x_ + cx > x) {
	                    var angle = Math.atan2(y, x_);
	                    var dir = anticlockwise ? 1 : -1;
	                    if (angle < 0) {
	                        angle = PI2 + angle;
	                    }
	                    if (
	                        (angle >= startAngle && angle <= endAngle)
	                        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)
	                    ) {
	                        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {
	                            dir = -dir;
	                        }
	                        w += dir;
	                    }
	                }
	            }
	            return w;
	        }

	        /**
	         * 路径包含判断
	         * 与 canvas 一样采用 non-zero winding rule
	         */
	        function isInsidePath(pathArray, lineWidth, brushType, x, y) {
	            var w = 0;
	            var xi = 0;
	            var yi = 0;
	            var x0 = 0;
	            var y0 = 0;
	            var beginSubpath = true;
	            var firstCmd = true;

	            brushType = brushType || 'fill';

	            var hasStroke = brushType === 'stroke' || brushType === 'both';
	            var hasFill = brushType === 'fill' || brushType === 'both';

	            // var roots = [-1, -1, -1];
	            for (var i = 0; i < pathArray.length; i++) {
	                var seg = pathArray[i];
	                var p = seg.points;
	                // Begin a new subpath
	                if (beginSubpath || seg.command === 'M') {
	                    if (i > 0) {
	                        // Close previous subpath
	                        if (hasFill) {
	                            w += windingLine(xi, yi, x0, y0, x, y);
	                        }
	                        if (w !== 0) {
	                            return true;
	                        }
	                    }
	                    x0 = p[p.length - 2];
	                    y0 = p[p.length - 1];
	                    beginSubpath = false;
	                    if (firstCmd && seg.command !== 'A') {
	                        // 如果第一个命令不是M, 是lineTo, bezierCurveTo
	                        // 等绘制命令的话，是会从该绘制的起点开始算的
	                        // Arc 会在之后做单独处理所以这里忽略
	                        firstCmd = false;
	                        xi = x0;
	                        yi = y0;
	                    }
	                }
	                switch (seg.command) {
	                    case 'M':
	                        xi = p[0];
	                        yi = p[1];
	                        break;
	                    case 'L':
	                        if (hasStroke) {
	                            if (isInsideLine(
	                                xi, yi, p[0], p[1], lineWidth, x, y
	                            )) {
	                                return true;
	                            }
	                        }
	                        if (hasFill) {
	                            w += windingLine(xi, yi, p[0], p[1], x, y);
	                        }
	                        xi = p[0];
	                        yi = p[1];
	                        break;
	                    case 'C':
	                        if (hasStroke) {
	                            if (isInsideCubicStroke(
	                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5],
	                                lineWidth, x, y
	                            )) {
	                                return true;
	                            }
	                        }
	                        if (hasFill) {
	                            w += windingCubic(
	                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5], x, y
	                            );
	                        }
	                        xi = p[4];
	                        yi = p[5];
	                        break;
	                    case 'Q':
	                        if (hasStroke) {
	                            if (isInsideQuadraticStroke(
	                                xi, yi, p[0], p[1], p[2], p[3],
	                                lineWidth, x, y
	                            )) {
	                                return true;
	                            }
	                        }
	                        if (hasFill) {
	                            w += windingQuadratic(
	                                xi, yi, p[0], p[1], p[2], p[3], x, y
	                            );
	                        }
	                        xi = p[2];
	                        yi = p[3];
	                        break;
	                    case 'A':
	                        // TODO Arc 旋转
	                        // TODO Arc 判断的开销比较大
	                        var cx = p[0];
	                        var cy = p[1];
	                        var rx = p[2];
	                        var ry = p[3];
	                        var theta = p[4];
	                        var dTheta = p[5];
	                        var x1 = Math.cos(theta) * rx + cx;
	                        var y1 = Math.sin(theta) * ry + cy;
	                        // 不是直接使用 arc 命令
	                        if (!firstCmd) {
	                            w += windingLine(xi, yi, x1, y1);
	                        } else {
	                            firstCmd = false;
	                            // 第一个命令起点还未定义
	                            x0 = x1;
	                            y0 = y1;
	                        }
	                        // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放
	                        var _x = (x - cx) * ry / rx + cx;
	                        if (hasStroke) {
	                            if (isInsideArcStroke(
	                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],
	                                lineWidth, _x, y
	                            )) {
	                                return true;
	                            }
	                        }
	                        if (hasFill) {
	                            w += windingArc(
	                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],
	                                _x, y
	                            );
	                        }
	                        xi = Math.cos(theta + dTheta) * rx + cx;
	                        yi = Math.sin(theta + dTheta) * ry + cy;
	                        break;
	                    case 'z':
	                        if (hasStroke) {
	                            if (isInsideLine(
	                                xi, yi, x0, y0, lineWidth, x, y
	                            )) {
	                                return true;
	                            }
	                        }
	                        beginSubpath = true;
	                        break;
	                }
	            }
	            if (hasFill) {
	                w += windingLine(xi, yi, x0, y0, x, y);
	            }
	            return w !== 0;
	        }

	        /**
	         * 测算多行文本宽度
	         * @param {Object} text
	         * @param {Object} textFont
	         */
	        function getTextWidth(text, textFont) {
	            var key = text + ':' + textFont;
	            if (_textWidthCache[key]) {
	                return _textWidthCache[key];
	            }
	            _ctx = _ctx || util.getContext();
	            _ctx.save();

	            if (textFont) {
	                _ctx.font = textFont;
	            }
	            
	            text = (text + '').split('\n');
	            var width = 0;
	            for (var i = 0, l = text.length; i < l; i++) {
	                width =  Math.max(
	                    _ctx.measureText(text[i]).width,
	                    width
	                );
	            }
	            _ctx.restore();

	            _textWidthCache[key] = width;
	            if (++_textWidthCacheCounter > TEXT_CACHE_MAX) {
	                // 内存释放
	                _textWidthCacheCounter = 0;
	                _textWidthCache = {};
	            }
	            
	            return width;
	        }
	        
	        /**
	         * 测算多行文本高度
	         * @param {Object} text
	         * @param {Object} textFont
	         */
	        function getTextHeight(text, textFont) {
	            var key = text + ':' + textFont;
	            if (_textHeightCache[key]) {
	                return _textHeightCache[key];
	            }
	            
	            _ctx = _ctx || util.getContext();

	            _ctx.save();
	            if (textFont) {
	                _ctx.font = textFont;
	            }
	            
	            text = (text + '').split('\n');
	            // 比较粗暴
	            var height = (_ctx.measureText('国').width + 2) * text.length;

	            _ctx.restore();

	            _textHeightCache[key] = height;
	            if (++_textHeightCacheCounter > TEXT_CACHE_MAX) {
	                // 内存释放
	                _textHeightCacheCounter = 0;
	                _textHeightCache = {};
	            }
	            return height;
	        }

	        return {
	            isInside : isInside,
	            isOutside : isOutside,
	            getTextWidth : getTextWidth,
	            getTextHeight : getTextHeight,

	            isInsidePath: isInsidePath,
	            isInsidePolygon: isInsidePolygon,
	            isInsideSector: isInsideSector,
	            isInsideCircle: isInsideCircle,
	            isInsideLine: isInsideLine,
	            isInsideRect: isInsideRect,
	            isInsidePolyline: isInsidePolyline,

	            isInsideCubicStroke: isInsideCubicStroke,
	            isInsideQuadraticStroke: isInsideQuadraticStroke
	        };
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    var tmpl = "<div class='m-login'>\
	                    <div class='iconfont exit'>&#xe620</div>\
	                    <div class='title'>欢 迎 回 来</div>\
	                    <div class='line'></div>\
	                    <div class='input-box-container account-input-container'>\
	                        <input class='input-box account-input' placeholder='请输入邮箱或手机号'>\
	                        <div class='iconfont input-icon'>&#xe60c</div>\
	                    </div>\
	                    <div class='input-box-container passwd-input-container'>\
	                        <input type='password' class='input-box passwd-input' placeholder='请输入密码'>\
	                        <div class='iconfont input-icon'>&#xe621</div>\
	                    </div>\
	                    <div class='log-text click-text'>\
	                        <span class='forget log-inside-text'>忘记密码</span>\
	                        <span class='log-inside-text' style='margin-left:8px;margin-right:8px;cursor:default'>or</span>\
	                        <span class='regester log-inside-text'>注册</span>\
	                    </div>\
	                    <input type='button' class='u-button button login-button' value='登  录'></input>\
	                </div>";
	    return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    var tmpl = "<div class='m-regester'>\
	                    <div class='iconfont exit'>&#xe620</div>\
	                    <div class='title'>加 入 我 们</div>\
	                    <div class='line'></div>\
	                    <div class='input-box-container account-input-container'>\
	                        <input class='input-box account-input' placeholder='请输入邮箱'>\
	                        <div class='iconfont input-icon'>&#xe62d</div>\
	                    </div>\
	                    <div class='input-box-container passwd-input-container'>\
	                        <input type='password' class='input-box passwd-input' placeholder='请输入密码,6-30位之间'>\
	                        <div class='iconfont input-icon'>&#xe621</div>\
	                    </div>\
	                    <div class='regester-text click-text'>\
	                        <span class='login log-inside-text'>有号？一键登录</span>\
	                    </div>\
	                    <input type='button' class='u-button button regester-button' value='注 册'></input>\
	                </div>";
	    return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    var tmpl = "<div class='m-success'>\
	                    <div class='iconfont exit'>&#xe620</div>\
	                    <div class='title'>注 册 成 功</div>\
	                    <div class='line'></div>\
	                    <div class='avatar'>\
	                        <div class='avatar-inside'></div>\
	                    </div>\
	                    <div class='center-text text-up'>恭喜，获得100积分</div>\
	                    <div class='center-text text-down'>邮箱激活账号获得更多积分</div>\
	                    <input type='button' class='u-button button active-button' value='Go 激 活 邮 箱'></input>\
	                    <input type='button' class='u-button button finish-button' value='完 成，继 续 观 看'></input>\
	                </div>";
	    return tmpl;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(9),__webpack_require__(2),__webpack_require__(45),__webpack_require__(14),__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require,handlebar,ajax,logWindow_tmp,iva_alert,$) {
	    return function (container,avatar_url,mail,id) {
	        var mailDict = {
	            'qq.com': 'http://mail.qq.com',
	            'gmail.com': 'http://mail.google.com',
	            'sina.com': 'http://mail.sina.com.cn',
	            '163.com': 'http://mail.163.com',
	            '126.com': 'http://mail.126.com',
	            'yeah.net': 'http://www.yeah.net/',
	            'sohu.com': 'http://mail.sohu.com/',
	            'tom.com': 'http://mail.tom.com/',
	            'sogou.com': 'http://mail.sogou.com/',
	            '139.com': 'http://mail.10086.cn/',
	            'hotmail.com': 'http://www.hotmail.com',
	            'msn.com': 'http://www.hotmail.com',
	            'live.com': 'http://login.live.com/',
	            'live.cn': 'http://login.live.cn/',
	            'live.com.cn': 'http://login.live.com.cn',
	            '189.com': 'http://webmail16.189.cn/webmail/',
	            'yahoo.com.cn': 'http://mail.cn.yahoo.com/',
	            'yahoo.cn': 'http://mail.cn.yahoo.com/',
	            'eyou.com': 'http://www.eyou.com/',
	            '21cn.com': 'http://mail.21cn.com/',
	            '188.com': 'http://www.188.com/',
	            'foxmail.com': 'http://www.foxmail.com/'
	        };
	        var split_mail = mail.split('@');
	        var mail_domin = split_mail[1];
	        if (!$('.m-login-and-regester').length){
	            var $success = $(handlebar.compile(logWindow_tmp('success'))());
	            container.before($success);
	            $success.hide();
	            $success.fadeIn(300);
	            $active_button = $success.find('.active-button');
	            $finish_button = $success.find('.finish-button');
	            $avatar = $success.find('.avatar-inside')
	            $avatar.css({
	                'background-image': 'url(' + avatar_url +')'
	            });
	            $active_button.click(function(){
	                if (($.inArray(mail_domin,Object.keys(mailDict)))!= -1){
	                    window.open(mailDict[mail_domin]);
	                }else{
	                    iva_alert('您的邮箱b格真高！请自己登陆去激活！');
	                }
	            });
	            $finish_button.click(function(){
	                ajax('/sign/signupMail', 'POST', {user_id: id}
	                , function (data) {
	                    if (data.status == 0)
	                        callback(data.msg);
	                        $success.fadeOut(300,function(){
	                            $success.remove();
	                        });
	                });
	            });
	        }else{
	            $('.m-login-and-regester').fadeOut(300,function(){
	                $(this).remove();
	                if (close_callback)
	                    close_callback();
	            });
	        }
	    }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * @module zrender/shape/Text
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 * @example
	 *     var Text = require('zrender/shape/Text');
	 *     var shape = new Text({
	 *         style: {
	 *             text: 'Label',
	 *             x: 100,
	 *             y: 100,
	 *             textFont: '14px Arial'
	 *         }
	 *     });
	 *     zr.addShape(shape);
	 */

	/**
	 * @typedef {Object} ITextStyle
	 * @property {number} x 横坐标
	 * @property {number} y 纵坐标
	 * @property {string} text 文本内容
	 * @property {number} [maxWidth=null] 最大宽度限制
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textAlign] 可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 * @property {string} [brushType='fill']
	 * @property {string} [color='#000000'] 填充颜色
	 * @property {string} [strokeColor='#000000'] 描边颜色
	 * @property {number} [lineWidth=1] 描边宽度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 */

	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        var area = __webpack_require__(59);
	        var Base = __webpack_require__(40);
	        
	        /**
	         * @alias module:zrender/shape/Text
	         * @constructor
	         * @extends module:zrender/shape/Base
	         * @param {Object} options
	         */
	        var Text = function (options) {
	            Base.call(this, options);
	            /**
	             * 文字绘制样式
	             * @name module:zrender/shape/Text#style
	             * @type {module:zrender/shape/Text~ITextStyle}
	             */
	            /**
	             * 文字高亮绘制样式
	             * @name module:zrender/shape/Text#highlightStyle
	             * @type {module:zrender/shape/Text~ITextStyle}
	             */
	        };

	        Text.prototype =  {
	            type: 'text',

	            brush : function (ctx, isHighlight) {
	                var style = this.style;
	                if (isHighlight) {
	                    // 根据style扩展默认高亮样式
	                    style = this.getHighlightStyle(
	                        style, this.highlightStyle || {}
	                    );
	                }
	                
	                if (typeof(style.text) == 'undefined' || style.text === false) {
	                    return;
	                }

	                ctx.save();
	                this.doClip(ctx);

	                this.setContext(ctx, style);

	                // 设置transform
	                this.setTransform(ctx);

	                if (style.textFont) {
	                    ctx.font = style.textFont;
	                }
	                ctx.textAlign = style.textAlign || 'start';
	                ctx.textBaseline = style.textBaseline || 'middle';

	                var text = (style.text + '').split('\n');
	                var lineHeight = area.getTextHeight('国', style.textFont);
	                var rect = this.getRect(style);
	                var x = style.x;
	                var y;
	                if (style.textBaseline == 'top') {
	                    y = rect.y;
	                }
	                else if (style.textBaseline == 'bottom') {
	                    y = rect.y + lineHeight;
	                }
	                else {
	                    y = rect.y + lineHeight / 2;
	                }
	                
	                for (var i = 0, l = text.length; i < l; i++) {
	                    if (style.maxWidth) {
	                        switch (style.brushType) {
	                            case 'fill':
	                                ctx.fillText(
	                                    text[i],
	                                    x, y, style.maxWidth
	                                );
	                                break;
	                            case 'stroke':
	                                ctx.strokeText(
	                                    text[i],
	                                    x, y, style.maxWidth
	                                );
	                                break;
	                            case 'both':
	                                ctx.fillText(
	                                    text[i],
	                                    x, y, style.maxWidth
	                                );
	                                ctx.strokeText(
	                                    text[i],
	                                    x, y, style.maxWidth
	                                );
	                                break;
	                            default:
	                                ctx.fillText(
	                                    text[i],
	                                    x, y, style.maxWidth
	                                );
	                        }
	                    }
	                    else {
	                        switch (style.brushType) {
	                            case 'fill':
	                                ctx.fillText(text[i], x, y);
	                                break;
	                            case 'stroke':
	                                ctx.strokeText(text[i], x, y);
	                                break;
	                            case 'both':
	                                ctx.fillText(text[i], x, y);
	                                ctx.strokeText(text[i], x, y);
	                                break;
	                            default:
	                                ctx.fillText(text[i], x, y);
	                        }
	                    }
	                    y += lineHeight;
	                }

	                ctx.restore();
	                return;
	            },

	            /**
	             * 返回文字包围盒矩形
	             * @param {module:zrender/shape/Text~ITextStyle} style
	             * @return {module:zrender/shape/Base~IBoundingRect}
	             */
	            getRect : function (style) {
	                if (style.__rect) {
	                    return style.__rect;
	                }
	                
	                var width = area.getTextWidth(style.text, style.textFont);
	                var height = area.getTextHeight(style.text, style.textFont);
	                
	                var textX = style.x;                 // 默认start == left
	                if (style.textAlign == 'end' || style.textAlign == 'right') {
	                    textX -= width;
	                }
	                else if (style.textAlign == 'center') {
	                    textX -= (width / 2);
	                }

	                var textY;
	                if (style.textBaseline == 'top') {
	                    textY = style.y;
	                }
	                else if (style.textBaseline == 'bottom') {
	                    textY = style.y - height;
	                }
	                else {
	                    // middle
	                    textY = style.y - height / 2;
	                }

	                style.__rect = {
	                    x : textX,
	                    y : textY,
	                    width : width,
	                    height : height
	                };
	                
	                return style.__rect;
	            }
	        };

	        __webpack_require__(33).inherits(Text, Base);
	        return Text;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));



/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 矩形
	 * @module zrender/shape/Rectangle
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com) , 
	 *         strwind (@劲风FEI)
	 * @example
	 *     var Rectangle = require('zrender/shape/Rectangle');
	 *     var shape = new Rectangle({
	 *         style: {
	 *             x: 0,
	 *             y: 0,
	 *             width: 100,
	 *             height: 100,
	 *             radius: 20
	 *         }
	 *     });
	 *     zr.addShape(shape);
	 */

	/**
	 * @typedef {Object} IRectangleStyle
	 * @property {number} x 左上角x坐标
	 * @property {number} y 左上角y坐标
	 * @property {number} width 宽度
	 * @property {number} height 高度
	 * @property {number|Array.<number>} radius 矩形圆角，可以用数组分别指定四个角的圆角
	 * @property {string} [brushType='fill']
	 * @property {string} [color='#000000'] 填充颜色
	 * @property {string} [strokeColor='#000000'] 描边颜色
	 * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square
	 * @property {number} [lineWidth=1] 描边宽度
	 * @property {number} [opacity=1] 绘制透明度
	 * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效
	 * @property {string} [shadowColor='#000000'] 阴影颜色
	 * @property {number} [shadowOffsetX=0] 阴影横向偏移
	 * @property {number} [shadowOffsetY=0] 阴影纵向偏移
	 * @property {string} [text] 图形中的附加文本
	 * @property {string} [textColor='#000000'] 文本颜色
	 * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'
	 * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom
	 * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。
	 *                                可以是start, end, left, right, center
	 * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。
	 *                                可以是top, bottom, middle, alphabetic, hanging, ideographic
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {
	        var Base = __webpack_require__(40);
	        
	        /**
	         * @alias module:zrender/shape/Rectangle
	         * @constructor
	         * @extends module:zrender/shape/Base
	         * @param {Object} options
	         */
	        var Rectangle = function (options) {
	            Base.call(this, options);
	            /**
	             * 矩形绘制样式
	             * @name module:zrender/shape/Rectangle#style
	             * @type {module:zrender/shape/Rectangle~IRectangleStyle}
	             */
	            /**
	             * 矩形高亮绘制样式
	             * @name module:zrender/shape/Rectangle#highlightStyle
	             * @type {module:zrender/shape/Rectangle~IRectangleStyle}
	             */
	        };

	        Rectangle.prototype =  {
	            type: 'rectangle',

	            _buildRadiusPath: function (ctx, style) {
	                // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4
	                // r缩写为1         相当于 [1, 1, 1, 1]
	                // r缩写为[1]       相当于 [1, 1, 1, 1]
	                // r缩写为[1, 2]    相当于 [1, 2, 1, 2]
	                // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]
	                var x = style.x;
	                var y = style.y;
	                var width = style.width;
	                var height = style.height;
	                var r = style.radius;
	                var r1; 
	                var r2; 
	                var r3; 
	                var r4;
	                  
	                if (typeof r === 'number') {
	                    r1 = r2 = r3 = r4 = r;
	                }
	                else if (r instanceof Array) {
	                    if (r.length === 1) {
	                        r1 = r2 = r3 = r4 = r[0];
	                    }
	                    else if (r.length === 2) {
	                        r1 = r3 = r[0];
	                        r2 = r4 = r[1];
	                    }
	                    else if (r.length === 3) {
	                        r1 = r[0];
	                        r2 = r4 = r[1];
	                        r3 = r[2];
	                    }
	                    else {
	                        r1 = r[0];
	                        r2 = r[1];
	                        r3 = r[2];
	                        r4 = r[3];
	                    }
	                }
	                else {
	                    r1 = r2 = r3 = r4 = 0;
	                }
	                
	                var total;
	                if (r1 + r2 > width) {
	                    total = r1 + r2;
	                    r1 *= width / total;
	                    r2 *= width / total;
	                }
	                if (r3 + r4 > width) {
	                    total = r3 + r4;
	                    r3 *= width / total;
	                    r4 *= width / total;
	                }
	                if (r2 + r3 > height) {
	                    total = r2 + r3;
	                    r2 *= height / total;
	                    r3 *= height / total;
	                }
	                if (r1 + r4 > height) {
	                    total = r1 + r4;
	                    r1 *= height / total;
	                    r4 *= height / total;
	                }
	                ctx.moveTo(x + r1, y);
	                ctx.lineTo(x + width - r2, y);
	                r2 !== 0 && ctx.quadraticCurveTo(
	                    x + width, y, x + width, y + r2
	                );
	                ctx.lineTo(x + width, y + height - r3);
	                r3 !== 0 && ctx.quadraticCurveTo(
	                    x + width, y + height, x + width - r3, y + height
	                );
	                ctx.lineTo(x + r4, y + height);
	                r4 !== 0 && ctx.quadraticCurveTo(
	                    x, y + height, x, y + height - r4
	                );
	                ctx.lineTo(x, y + r1);
	                r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);
	            },
	            
	            /**
	             * 创建矩形路径
	             * @param {CanvasRenderingContext2D} ctx
	             * @param {Object} style
	             */
	            buildPath : function (ctx, style) {
	                if (!style.radius) {
	                    ctx.moveTo(style.x, style.y);
	                    ctx.lineTo(style.x + style.width, style.y);
	                    ctx.lineTo(style.x + style.width, style.y + style.height);
	                    ctx.lineTo(style.x, style.y + style.height);
	                    ctx.lineTo(style.x, style.y);
	                    // ctx.rect(style.x, style.y, style.width, style.height);
	                }
	                else {
	                    this._buildRadiusPath(ctx, style);
	                }
	                ctx.closePath();
	                return;
	            },

	            /**
	             * 计算返回矩形包围盒矩阵
	             * @param {module:zrender/shape/Rectangle~IRectangleStyle} style
	             * @return {module:zrender/shape/Base~IBoundingRect}
	             */
	            getRect : function(style) {
	                if (style.__rect) {
	                    return style.__rect;
	                }
	                
	                var lineWidth;
	                if (style.brushType == 'stroke' || style.brushType == 'fill') {
	                    lineWidth = style.lineWidth || 1;
	                }
	                else {
	                    lineWidth = 0;
	                }
	                style.__rect = {
	                    x : Math.round(style.x - lineWidth / 2),
	                    y : Math.round(style.y - lineWidth / 2),
	                    width : style.width + lineWidth,
	                    height : style.height + lineWidth
	                };
	                
	                return style.__rect;
	            }
	        };

	        __webpack_require__(33).inherits(Rectangle, Base);
	        return Rectangle;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * 曲线辅助模块
	 * @module zrender/tool/curve
	 * @author pissang(https://www.github.com/pissang)
	 */
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require) {

	    var vector = __webpack_require__(50);

	    'use strict';

	    var EPSILON = 1e-4;

	    var THREE_SQRT = Math.sqrt(3);
	    var ONE_THIRD = 1 / 3;

	    // 临时变量
	    var _v0 = vector.create();
	    var _v1 = vector.create();
	    var _v2 = vector.create();
	    // var _v3 = vector.create();

	    function isAroundZero(val) {
	        return val > -EPSILON && val < EPSILON;
	    }
	    function isNotAroundZero(val) {
	        return val > EPSILON || val < -EPSILON;
	    }
	    /*
	    function evalCubicCoeff(a, b, c, d, t) {
	        return ((a * t + b) * t + c) * t + d;
	    }
	    */

	    /** 
	     * 计算三次贝塞尔值
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @return {number}
	     */
	    function cubicAt(p0, p1, p2, p3, t) {
	        var onet = 1 - t;
	        return onet * onet * (onet * p0 + 3 * t * p1)
	             + t * t * (t * p3 + 3 * onet * p2);
	    }

	    /** 
	     * 计算三次贝塞尔导数值
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @return {number}
	     */
	    function cubicDerivativeAt(p0, p1, p2, p3, t) {
	        var onet = 1 - t;
	        return 3 * (
	            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet
	            + (p3 - p2) * t * t
	        );
	    }

	    /**
	     * 计算三次贝塞尔方程根，使用盛金公式
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} val
	     * @param  {Array.<number>} roots
	     * @return {number} 有效根数目
	     */
	    function cubicRootAt(p0, p1, p2, p3, val, roots) {
	        // Evaluate roots of cubic functions
	        var a = p3 + 3 * (p1 - p2) - p0;
	        var b = 3 * (p2 - p1 * 2 + p0);
	        var c = 3 * (p1  - p0);
	        var d = p0 - val;

	        var A = b * b - 3 * a * c;
	        var B = b * c - 9 * a * d;
	        var C = c * c - 3 * b * d;

	        var n = 0;

	        if (isAroundZero(A) && isAroundZero(B)) {
	            if (isAroundZero(b)) {
	                roots[0] = 0;
	            }
	            else {
	                var t1 = -c / b;  //t1, t2, t3, b is not zero
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = B * B - 4 * A * C;

	            if (isAroundZero(disc)) {
	                var K = B / A;
	                var t1 = -b / a + K;  // t1, a is not zero
	                var t2 = -K / 2;  // t2, t3
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	            }
	            else if (disc > 0) {
	                var discSqrt = Math.sqrt(disc);
	                var Y1 = A * b + 1.5 * a * (-B + discSqrt);
	                var Y2 = A * b + 1.5 * a * (-B - discSqrt);
	                if (Y1 < 0) {
	                    Y1 = -Math.pow(-Y1, ONE_THIRD);
	                }
	                else {
	                    Y1 = Math.pow(Y1, ONE_THIRD);
	                }
	                if (Y2 < 0) {
	                    Y2 = -Math.pow(-Y2, ONE_THIRD);
	                }
	                else {
	                    Y2 = Math.pow(Y2, ONE_THIRD);
	                }
	                var t1 = (-b - (Y1 + Y2)) / (3 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	            else {
	                var T = (2 * A * b - 3 * a * B) / (2 * Math.sqrt(A * A * A));
	                var theta = Math.acos(T) / 3;
	                var ASqrt = Math.sqrt(A);
	                var tmp = Math.cos(theta);
	                
	                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);
	                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);
	                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	                if (t3 >= 0 && t3 <= 1) {
	                    roots[n++] = t3;
	                }
	            }
	        }
	        return n;
	    }

	    /**
	     * 计算三次贝塞尔方程极限值的位置
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {Array.<number>} extrema
	     * @return {number} 有效数目
	     */
	    function cubicExtrema(p0, p1, p2, p3, extrema) {
	        var b = 6 * p2 - 12 * p1 + 6 * p0;
	        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;
	        var c = 3 * p1 - 3 * p0;

	        var n = 0;
	        if (isAroundZero(a)) {
	            if (isNotAroundZero(b)) {
	                var t1 = -c / b;
	                if (t1 >= 0 && t1 <=1) {
	                    extrema[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = b * b - 4 * a * c;
	            if (isAroundZero(disc)) {
	                extrema[0] = -b / (2 * a);
	            }
	            else if (disc > 0) {
	                var discSqrt = Math.sqrt(disc);
	                var t1 = (-b + discSqrt) / (2 * a);
	                var t2 = (-b - discSqrt) / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    extrema[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    extrema[n++] = t2;
	                }
	            }
	        }
	        return n;
	    }

	    /**
	     * 细分三次贝塞尔曲线
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @param  {Array.<number>} out
	     */
	    function cubicSubdivide(p0, p1, p2, p3, t, out) {
	        var p01 = (p1 - p0) * t + p0;
	        var p12 = (p2 - p1) * t + p1;
	        var p23 = (p3 - p2) * t + p2;

	        var p012 = (p12 - p01) * t + p01;
	        var p123 = (p23 - p12) * t + p12;

	        var p0123 = (p123 - p012) * t + p012;
	        // Seg0
	        out[0] = p0;
	        out[1] = p01;
	        out[2] = p012;
	        out[3] = p0123;
	        // Seg1
	        out[4] = p0123;
	        out[5] = p123;
	        out[6] = p23;
	        out[7] = p3;
	    }

	    /**
	     * 投射点到三次贝塞尔曲线上，返回投射距离。
	     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {number} x3
	     * @param {number} y3
	     * @param {number} x
	     * @param {number} y
	     * @param {Array.<number>} [out] 投射点
	     * @return {number}
	     */
	    function cubicProjectPoint(
	        x0, y0, x1, y1, x2, y2, x3, y3,
	        x, y, out
	    ) {
	        // http://pomax.github.io/bezierinfo/#projections
	        var t;
	        var interval = 0.005;
	        var d = Infinity;

	        _v0[0] = x;
	        _v0[1] = y;

	        // 先粗略估计一下可能的最小距离的 t 值
	        // PENDING
	        for (var _t = 0; _t < 1; _t += 0.05) {
	            _v1[0] = cubicAt(x0, x1, x2, x3, _t);
	            _v1[1] = cubicAt(y0, y1, y2, y3, _t);
	            var d1 = vector.distSquare(_v0, _v1);
	            if (d1 < d) {
	                t = _t;
	                d = d1;
	            }
	        }
	        d = Infinity;

	        // At most 32 iteration
	        for (var i = 0; i < 32; i++) {
	            if (interval < EPSILON) {
	                break;
	            }
	            var prev = t - interval;
	            var next = t + interval;
	            // t - interval
	            _v1[0] = cubicAt(x0, x1, x2, x3, prev);
	            _v1[1] = cubicAt(y0, y1, y2, y3, prev);

	            var d1 = vector.distSquare(_v1, _v0);

	            if (prev >= 0 && d1 < d) {
	                t = prev;
	                d = d1;
	            }
	            else {
	                // t + interval
	                _v2[0] = cubicAt(x0, x1, x2, x3, next);
	                _v2[1] = cubicAt(y0, y1, y2, y3, next);
	                var d2 = vector.distSquare(_v2, _v0);

	                if (next <= 1 && d2 < d) {
	                    t = next;
	                    d = d2;
	                }
	                else {
	                    interval *= 0.5;
	                }
	            }
	        }
	        // t
	        if (out) {
	            out[0] = cubicAt(x0, x1, x2, x3, t);
	            out[1] = cubicAt(y0, y1, y2, y3, t);   
	        }
	        // console.log(interval, i);
	        return Math.sqrt(d);
	    }

	    /**
	     * 计算二次方贝塞尔值
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @return {number}
	     */
	    function quadraticAt(p0, p1, p2, t) {
	        var onet = 1 - t;
	        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;
	    }

	    /**
	     * 计算二次方贝塞尔导数值
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @return {number}
	     */
	    function quadraticDerivativeAt(p0, p1, p2, t) {
	        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));
	    }

	    /**
	     * 计算二次方贝塞尔方程根
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @param  {Array.<number>} roots
	     * @return {number} 有效根数目
	     */
	    function quadraticRootAt(p0, p1, p2, val, roots) {
	        var a = p0 - 2 * p1 + p2;
	        var b = 2 * (p1 - p0);
	        var c = p0 - val;

	        var n = 0;
	        if (isAroundZero(a)) {
	            if (isNotAroundZero(b)) {
	                var t1 = -c / b;
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = b * b - 4 * a * c;
	            if (isAroundZero(disc)) {
	                var t1 = -b / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	            else if (disc > 0) {
	                var discSqrt = Math.sqrt(disc);
	                var t1 = (-b + discSqrt) / (2 * a);
	                var t2 = (-b - discSqrt) / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	            }
	        }
	        return n;
	    }

	    /**
	     * 计算二次贝塞尔方程极限值
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @return {number}
	     */
	    function quadraticExtremum(p0, p1, p2) {
	        var divider = p0 + p2 - 2 * p1;
	        if (divider === 0) {
	            // p1 is center of p0 and p2 
	            return 0.5;
	        }
	        else {
	            return (p0 - p1) / divider;
	        }
	    }

	    /**
	     * 细分二次贝塞尔曲线
	     * @memberOf module:zrender/tool/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @param  {Array.<number>} out
	     */
	    function quadraticSubdivide(p0, p1, p2, t, out) {
	        var p01 = (p1 - p0) * t + p0;
	        var p12 = (p2 - p1) * t + p1;
	        var p012 = (p12 - p01) * t + p01;

	        // Seg0
	        out[0] = p0;
	        out[1] = p01;
	        out[2] = p012;

	        // Seg1
	        out[3] = p012;
	        out[4] = p12;
	        out[5] = p2;
	    }

	    /**
	     * 投射点到二次贝塞尔曲线上，返回投射距离。
	     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {number} x
	     * @param {number} y
	     * @param {Array.<number>} out 投射点
	     * @return {number}
	     */
	    function quadraticProjectPoint(
	        x0, y0, x1, y1, x2, y2,
	        x, y, out
	    ) {
	        // http://pomax.github.io/bezierinfo/#projections
	        var t;
	        var interval = 0.005;
	        var d = Infinity;

	        _v0[0] = x;
	        _v0[1] = y;

	        // 先粗略估计一下可能的最小距离的 t 值
	        // PENDING
	        for (var _t = 0; _t < 1; _t += 0.05) {
	            _v1[0] = quadraticAt(x0, x1, x2, _t);
	            _v1[1] = quadraticAt(y0, y1, y2, _t);
	            var d1 = vector.distSquare(_v0, _v1);
	            if (d1 < d) {
	                t = _t;
	                d = d1;
	            }
	        }
	        d = Infinity;

	        // At most 32 iteration
	        for (var i = 0; i < 32; i++) {
	            if (interval < EPSILON) {
	                break;
	            }
	            var prev = t - interval;
	            var next = t + interval;
	            // t - interval
	            _v1[0] = quadraticAt(x0, x1, x2, prev);
	            _v1[1] = quadraticAt(y0, y1, y2, prev);

	            var d1 = vector.distSquare(_v1, _v0);

	            if (prev >= 0 && d1 < d) {
	                t = prev;
	                d = d1;
	            }
	            else {
	                // t + interval
	                _v2[0] = quadraticAt(x0, x1, x2, next);
	                _v2[1] = quadraticAt(y0, y1, y2, next);
	                var d2 = vector.distSquare(_v2, _v0);
	                if (next <= 1 && d2 < d) {
	                    t = next;
	                    d = d2;
	                }
	                else {
	                    interval *= 0.5;
	                }
	            }
	        }
	        // t
	        if (out) {
	            out[0] = quadraticAt(x0, x1, x2, t);
	            out[1] = quadraticAt(y0, y1, y2, t);   
	        }
	        // console.log(interval, i);
	        return Math.sqrt(d);
	    }

	    return {

	        cubicAt: cubicAt,

	        cubicDerivativeAt: cubicDerivativeAt,

	        cubicRootAt: cubicRootAt,

	        cubicExtrema: cubicExtrema,

	        cubicSubdivide: cubicSubdivide,

	        cubicProjectPoint: cubicProjectPoint,

	        quadraticAt: quadraticAt,

	        quadraticDerivativeAt: quadraticDerivativeAt,

	        quadraticRootAt: quadraticRootAt,

	        quadraticExtremum: quadraticExtremum,

	        quadraticSubdivide: quadraticSubdivide,

	        quadraticProjectPoint: quadraticProjectPoint
	    };
	}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }
/******/ ]);